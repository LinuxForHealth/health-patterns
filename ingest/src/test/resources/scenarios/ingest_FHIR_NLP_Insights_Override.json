{
    "scenarioName": "********ingest_FHIR_NLP_Insights_Override********",
    "ignoreStepFailures": false,
    "steps": [ 
        {
            "name": "createACDConfig",
            "url": "${nlp_insights}/config/definition",
            "operation": "POST",           
                "request": {
                "body" : {
                   "name": "acd",
                   "nlpServiceType": "acd",
                   "config": {
                      "apikey": "9GSFDhHUrn03zCJZILz_ZmG7YqcjsXCOpppaqiejQqjd",
                      "endpoint": "https://us-east.wh-acd.cloud.ibm.com/wh-acd/api",
                      "flow": "wh_acd.ibm_clinical_insights_v1.0_standard_flow"
                    }
                  }
                },            
            "verify": {
                "status": 200
            }
        },
        {
            "name": "addllergyToleranceOverride",
            "url": "${nlp_insights}/config/resource/AllergyIntolerance/acd",
            "operation": "POST",           
                "request": { },            
            "verify": {
                "status": 200,
                "rawBody": "$CONTAINS.STRING:'AllergyIntolerance': 'acd'"
            }
        },
        {
            "name": "ingestPatient",
            "url":  "${expose_kafka}?topic=${kafka.ingestion.topic}",
            "operation": "POST",           
                "request": {
                "headers" : { "Content-Type": "application/json", 
                               "AddNLPInsights": "${3}",
                               "DeidentifyData": "false" },
                    "body":  "${0}" },            
            "verify": {
                "status": 200
                }
        },
               
        {
            "name": "waitForIngestion",
            "url": "utilities.ZerocodeUtilities",
            "method": "secondsDelay",
            "request": 15,
            "verify": {
            }
        },
        
        {
            "name": "verifyPatientIngestion",
            "url": "${phi_fhir_server}/Patient?family=${2}&given=${1}",
            "method": "GET",
            "request": {
            },
            "verify": {
                "status": 200,
                "body": {
                    "resourceType": "Bundle",
                    "total" : 1 
                }
            }
        },
        {
            "name": "getPatientImmunization",
            "url": "${phi_fhir_server}/Immunization",
            "method": "GET",
            "request": {
            },
            "verify": {
                "status": 200 
                }
        },  
        {
            "name": "verifyAnalyticType",
            "url": "utilities.ZerocodeUtilities",
            "method": "containsString",
            "request": {
                 "string1": "${$.getPatientImmunization.response.body}",
                 "string2": "${4}"
            },
            "verify": { "result": "${3}" }
        },  
        {
            "name": "getPatientAllergyIntolerance",
            "url": "${phi_fhir_server}/AllergyIntolerance",
            "method": "GET",
            "request": {
            },
            "verify": {
                "status": 200 
                }
        },  
        {
            "name": "verifyAnalyticType",
            "url": "utilities.ZerocodeUtilities",
            "method": "containsString",
            "request": {
                 "string1": "${$.getPatientAllergyIntolerance.response.body}",
                 "string2": "ACD Structured"
            },
            "verify": { "result": "${3}" }
        },  
        {
            "name": "deletePatientOnPhiFHIR",
            "url": "${phi_fhir_server}/Patient/${$.verifyPatientIngestion.response.body.entry[0].resource.id}",
            "method": "DELETE",
            "request": {
            },
            "verify": {
                "status": 200,
                "body": {
                    "resourceType": "OperationOutcome",
                    "issue": [{
                        "details": {
                           "text": "$CONTAINS.STRING:${$.verifyPatientIngestion.response.body.entry[0].resource.id}" 
                           }
                     }]
                }
            }
        }          
    ],
    "parameterized": {
        "csvSource":[
            "${JSON.FILE:Patients/patientbundleNLP.json},Alethea978,Crooks009,true,QuickUMLS Structured",
            "${JSON.FILE:Patients/patientbundleNLP.json},Alethea978,Crooks009,false,QuickUMLS Structured"        
         ]
    }
}
