# -*- coding: utf-8 -*-
from datetime import date, datetime

from pydantic.datetime_parse import parse_date, parse_datetime

from .. import fhirtypes  # noqa: F401
from .. import conformance


def test_Conformance_1(base_settings):
    filename = base_settings["unittest_data_dir"] / "conformance-base.canonical.json"
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_1(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_1(inst2)


def impl_Conformance_1(inst):
    assert inst.acceptUnknown == "both"
    assert inst.contact[0].telecom[0].system == "other"
    assert inst.contact[0].telecom[0].value == "http://hl7.org/fhir"
    assert inst.date == parse_datetime("2015-10-24T07:41:03+11:00")
    assert (
        inst.description
        == "This is the base conformance statement for FHIR. It represents a server that provides the full set of functionality defined by FHIR. It is provided to use as a template for system designers to build their own conformance statements from"
    )
    assert inst.experimental == True
    assert inst.fhirVersion == "1.0.2"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "base"
    assert inst.kind == "capability"
    assert inst.name == "Base FHIR Conformance Statement (Full)"
    assert inst.publisher == "FHIR Project Team"
    assert inst.rest[0].documentation == "All the functionality defined in FHIR"
    assert inst.rest[0].interaction[0].code == "transaction"
    assert (
        inst.rest[0].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].interaction[1].code == "history-system"
    assert (
        inst.rest[0].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].interaction[2].code == "search-system"
    assert (
        inst.rest[0].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].mode == "server"
    assert (
        inst.rest[0].operation[0].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/resource-validate"
    )
    assert inst.rest[0].operation[0].name == "validate"
    assert (
        inst.rest[0].operation[1].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/resource-meta"
    )
    assert inst.rest[0].operation[1].name == "meta"
    assert (
        inst.rest[0].operation[2].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/resource-meta-add"
    )
    assert inst.rest[0].operation[2].name == "meta-add"
    assert (
        inst.rest[0].operation[3].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/resource-meta-delete"
    )
    assert inst.rest[0].operation[3].name == "meta-delete"
    assert (
        inst.rest[0].operation[4].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/composition-document"
    )
    assert inst.rest[0].operation[4].name == "document"
    assert (
        inst.rest[0].operation[5].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/conceptmap-translate"
    )
    assert inst.rest[0].operation[5].name == "translate"
    assert (
        inst.rest[0].operation[6].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/conceptmap-closure"
    )
    assert inst.rest[0].operation[6].name == "closure"
    assert (
        inst.rest[0].operation[7].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/encounter-everything"
    )
    assert inst.rest[0].operation[7].name == "everything"
    assert (
        inst.rest[0].operation[8].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/list-find"
    )
    assert inst.rest[0].operation[8].name == "find"
    assert (
        inst.rest[0].operation[9].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/messageheader-process-message"
    )
    assert inst.rest[0].operation[9].name == "process-message"
    assert (
        inst.rest[0].operation[10].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/patient-everything"
    )
    assert inst.rest[0].operation[10].name == "everything"
    assert (
        inst.rest[0].operation[11].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/questionnaire-populate"
    )
    assert inst.rest[0].operation[11].name == "populate"
    assert (
        inst.rest[0].operation[12].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/structuredefinition-questionnaire"
    )
    assert inst.rest[0].operation[12].name == "questionnaire"
    assert (
        inst.rest[0].operation[13].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/valueset-expand"
    )
    assert inst.rest[0].operation[13].name == "expand"
    assert (
        inst.rest[0].operation[14].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/valueset-lookup"
    )
    assert inst.rest[0].operation[14].name == "lookup"
    assert (
        inst.rest[0].operation[15].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/valueset-validate-code"
    )
    assert inst.rest[0].operation[15].name == "validate-code"
    assert inst.rest[0].resource[0].conditionalCreate == True
    assert inst.rest[0].resource[0].conditionalDelete == "multiple"
    assert inst.rest[0].resource[0].conditionalUpdate == True
    assert inst.rest[0].resource[0].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[0].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[0].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[0].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[0].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[0].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[0].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[0].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[0].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[0].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[0].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[0].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[0].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[0].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[0].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Account"
    )
    assert inst.rest[0].resource[0].searchInclude[0] == "Account.patient"
    assert inst.rest[0].resource[0].searchInclude[1] == "Account.subject"
    assert inst.rest[0].resource[0].searchInclude[2] == "Account.owner"
    assert (
        inst.rest[0].resource[0].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/account-balance"
    )
    assert (
        inst.rest[0].resource[0].searchParam[0].documentation
        == "How much is in account?"
    )
    assert inst.rest[0].resource[0].searchParam[0].name == "balance"
    assert inst.rest[0].resource[0].searchParam[0].type == "quantity"
    assert (
        inst.rest[0].resource[0].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/account-patient"
    )
    assert (
        inst.rest[0].resource[0].searchParam[1].documentation
        == "What is account tied to?"
    )
    assert inst.rest[0].resource[0].searchParam[1].name == "patient"
    assert inst.rest[0].resource[0].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[0].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/account-status"
    )
    assert inst.rest[0].resource[0].searchParam[2].documentation == "active | inactive"
    assert inst.rest[0].resource[0].searchParam[2].name == "status"
    assert inst.rest[0].resource[0].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/account-subject"
    )
    assert (
        inst.rest[0].resource[0].searchParam[3].documentation
        == "What is account tied to?"
    )
    assert inst.rest[0].resource[0].searchParam[3].name == "subject"
    assert inst.rest[0].resource[0].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[0].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/account-name"
    )
    assert (
        inst.rest[0].resource[0].searchParam[4].documentation == "Human-readable label"
    )
    assert inst.rest[0].resource[0].searchParam[4].name == "name"
    assert inst.rest[0].resource[0].searchParam[4].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/account-owner"
    )
    assert (
        inst.rest[0].resource[0].searchParam[5].documentation == "Who is responsible?"
    )
    assert inst.rest[0].resource[0].searchParam[5].name == "owner"
    assert inst.rest[0].resource[0].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[0].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/account-period"
    )
    assert inst.rest[0].resource[0].searchParam[6].documentation == "Transaction window"
    assert inst.rest[0].resource[0].searchParam[6].name == "period"
    assert inst.rest[0].resource[0].searchParam[6].type == "date"
    assert (
        inst.rest[0].resource[0].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/account-type"
    )
    assert (
        inst.rest[0].resource[0].searchParam[7].documentation
        == "E.g. patient, expense, depreciation"
    )
    assert inst.rest[0].resource[0].searchParam[7].name == "type"
    assert inst.rest[0].resource[0].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/account-identifier"
    )
    assert inst.rest[0].resource[0].searchParam[8].documentation == "Account number"
    assert inst.rest[0].resource[0].searchParam[8].name == "identifier"
    assert inst.rest[0].resource[0].searchParam[8].type == "token"
    assert inst.rest[0].resource[0].type == "Account"
    assert inst.rest[0].resource[1].conditionalCreate == True
    assert inst.rest[0].resource[1].conditionalDelete == "multiple"
    assert inst.rest[0].resource[1].conditionalUpdate == True
    assert inst.rest[0].resource[1].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[1].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[1].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[1].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[1].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[1].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[1].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[1].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[1].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[1].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[1].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[1].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[1].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[1].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[1].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[1].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[1].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[1].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[1].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/AllergyIntolerance"
    )
    assert inst.rest[0].resource[1].searchInclude[0] == "AllergyIntolerance.reporter"
    assert inst.rest[0].resource[1].searchInclude[1] == "AllergyIntolerance.patient"
    assert inst.rest[0].resource[1].searchInclude[2] == "AllergyIntolerance.recorder"
    assert (
        inst.rest[0].resource[1].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-status"
    )
    assert (
        inst.rest[0].resource[1].searchParam[0].documentation
        == "active | unconfirmed | confirmed | inactive | resolved | refuted | entered-in-error"
    )
    assert inst.rest[0].resource[1].searchParam[0].name == "status"
    assert inst.rest[0].resource[1].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-onset"
    )
    assert (
        inst.rest[0].resource[1].searchParam[1].documentation
        == "Date(/time) when manifestations showed"
    )
    assert inst.rest[0].resource[1].searchParam[1].name == "onset"
    assert inst.rest[0].resource[1].searchParam[1].type == "date"
    assert (
        inst.rest[0].resource[1].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-last-date"
    )
    assert (
        inst.rest[0].resource[1].searchParam[2].documentation
        == "Date(/time) of last known occurrence of a reaction"
    )
    assert inst.rest[0].resource[1].searchParam[2].name == "last-date"
    assert inst.rest[0].resource[1].searchParam[2].type == "date"
    assert (
        inst.rest[0].resource[1].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-severity"
    )
    assert (
        inst.rest[0].resource[1].searchParam[3].documentation
        == "mild | moderate | severe (of event as a whole)"
    )
    assert inst.rest[0].resource[1].searchParam[3].name == "severity"
    assert inst.rest[0].resource[1].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-type"
    )
    assert (
        inst.rest[0].resource[1].searchParam[4].documentation
        == "allergy | intolerance - Underlying mechanism (if known)"
    )
    assert inst.rest[0].resource[1].searchParam[4].name == "type"
    assert inst.rest[0].resource[1].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-date"
    )
    assert inst.rest[0].resource[1].searchParam[5].documentation == "When recorded"
    assert inst.rest[0].resource[1].searchParam[5].name == "date"
    assert inst.rest[0].resource[1].searchParam[5].type == "date"
    assert (
        inst.rest[0].resource[1].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-reporter"
    )
    assert (
        inst.rest[0].resource[1].searchParam[6].documentation
        == "Source of the information about the allergy"
    )
    assert inst.rest[0].resource[1].searchParam[6].name == "reporter"
    assert inst.rest[0].resource[1].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[1].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-substance"
    )
    assert (
        inst.rest[0].resource[1].searchParam[7].documentation
        == "Substance, (or class) considered to be responsible for risk"
    )
    assert inst.rest[0].resource[1].searchParam[7].name == "substance"
    assert inst.rest[0].resource[1].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-criticality"
    )
    assert (
        inst.rest[0].resource[1].searchParam[8].documentation == "CRITL | CRITH | CRITU"
    )
    assert inst.rest[0].resource[1].searchParam[8].name == "criticality"
    assert inst.rest[0].resource[1].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-category"
    )
    assert (
        inst.rest[0].resource[1].searchParam[9].documentation
        == "food | medication | environment | other - Category of Substance"
    )
    assert inst.rest[0].resource[1].searchParam[9].name == "category"
    assert inst.rest[0].resource[1].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-patient"
    )
    assert (
        inst.rest[0].resource[1].searchParam[10].documentation
        == "Who the sensitivity is for"
    )
    assert inst.rest[0].resource[1].searchParam[10].name == "patient"
    assert inst.rest[0].resource[1].searchParam[10].type == "reference"
    assert (
        inst.rest[0].resource[1].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-recorder"
    )
    assert (
        inst.rest[0].resource[1].searchParam[11].documentation
        == "Who recorded the sensitivity"
    )
    assert inst.rest[0].resource[1].searchParam[11].name == "recorder"
    assert inst.rest[0].resource[1].searchParam[11].type == "reference"
    assert (
        inst.rest[0].resource[1].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-route"
    )
    assert (
        inst.rest[0].resource[1].searchParam[12].documentation
        == "How the subject was exposed to the substance"
    )
    assert inst.rest[0].resource[1].searchParam[12].name == "route"
    assert inst.rest[0].resource[1].searchParam[12].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-identifier"
    )
    assert (
        inst.rest[0].resource[1].searchParam[13].documentation
        == "External ids for this item"
    )
    assert inst.rest[0].resource[1].searchParam[13].name == "identifier"
    assert inst.rest[0].resource[1].searchParam[13].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/allergyintolerance-manifestation"
    )
    assert (
        inst.rest[0].resource[1].searchParam[14].documentation
        == "Clinical symptoms/signs associated with the Event"
    )
    assert inst.rest[0].resource[1].searchParam[14].name == "manifestation"
    assert inst.rest[0].resource[1].searchParam[14].type == "token"
    assert inst.rest[0].resource[1].searchRevInclude[0] == "ClinicalImpression.problem"
    assert (
        inst.rest[0].resource[1].searchRevInclude[1]
        == "ImmunizationRecommendation.information"
    )
    assert inst.rest[0].resource[1].type == "AllergyIntolerance"
    assert inst.rest[0].resource[2].conditionalCreate == True
    assert inst.rest[0].resource[2].conditionalDelete == "multiple"
    assert inst.rest[0].resource[2].conditionalUpdate == True
    assert inst.rest[0].resource[2].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[2].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[2].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[2].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[2].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[2].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[2].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[2].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[2].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[2].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[2].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[2].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[2].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[2].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[2].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[2].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[2].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[2].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[2].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Appointment"
    )
    assert inst.rest[0].resource[2].searchInclude[0] == "Appointment.patient"
    assert inst.rest[0].resource[2].searchInclude[1] == "Appointment.practitioner"
    assert inst.rest[0].resource[2].searchInclude[2] == "Appointment.location"
    assert inst.rest[0].resource[2].searchInclude[3] == "Appointment.actor"
    assert (
        inst.rest[0].resource[2].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/appointment-patient"
    )
    assert (
        inst.rest[0].resource[2].searchParam[0].documentation
        == "One of the individuals of the appointment is this patient"
    )
    assert inst.rest[0].resource[2].searchParam[0].name == "patient"
    assert inst.rest[0].resource[2].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[2].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/appointment-practitioner"
    )
    assert (
        inst.rest[0].resource[2].searchParam[1].documentation
        == "One of the individuals of the appointment is this practitioner"
    )
    assert inst.rest[0].resource[2].searchParam[1].name == "practitioner"
    assert inst.rest[0].resource[2].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[2].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/appointment-location"
    )
    assert (
        inst.rest[0].resource[2].searchParam[2].documentation
        == "This location is listed in the participants of the appointment"
    )
    assert inst.rest[0].resource[2].searchParam[2].name == "location"
    assert inst.rest[0].resource[2].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[2].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/appointment-status"
    )
    assert (
        inst.rest[0].resource[2].searchParam[3].documentation
        == "The overall status of the appointment"
    )
    assert inst.rest[0].resource[2].searchParam[3].name == "status"
    assert inst.rest[0].resource[2].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[2].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/appointment-part-status"
    )
    assert (
        inst.rest[0].resource[2].searchParam[4].documentation
        == "The Participation status of the subject, or other participant on the appointment. Can be used to locate participants that have not responded to meeting requests."
    )
    assert inst.rest[0].resource[2].searchParam[4].name == "part-status"
    assert inst.rest[0].resource[2].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[2].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/appointment-actor"
    )
    assert (
        inst.rest[0].resource[2].searchParam[5].documentation
        == "Any one of the individuals participating in the appointment"
    )
    assert inst.rest[0].resource[2].searchParam[5].name == "actor"
    assert inst.rest[0].resource[2].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[2].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/appointment-date"
    )
    assert (
        inst.rest[0].resource[2].searchParam[6].documentation
        == "Appointment date/time."
    )
    assert inst.rest[0].resource[2].searchParam[6].name == "date"
    assert inst.rest[0].resource[2].searchParam[6].type == "date"
    assert (
        inst.rest[0].resource[2].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/appointment-identifier"
    )
    assert (
        inst.rest[0].resource[2].searchParam[7].documentation
        == "An Identifier of the Appointment"
    )
    assert inst.rest[0].resource[2].searchParam[7].name == "identifier"
    assert inst.rest[0].resource[2].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[2].searchRevInclude[0]
        == "AppointmentResponse.appointment"
    )
    assert inst.rest[0].resource[2].searchRevInclude[1] == "CarePlan.activityreference"
    assert inst.rest[0].resource[2].searchRevInclude[2] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[2].searchRevInclude[3] == "ClinicalImpression.action"
    assert inst.rest[0].resource[2].searchRevInclude[4] == "Encounter.appointment"
    assert inst.rest[0].resource[2].type == "Appointment"
    assert inst.rest[0].resource[3].conditionalCreate == True
    assert inst.rest[0].resource[3].conditionalDelete == "multiple"
    assert inst.rest[0].resource[3].conditionalUpdate == True
    assert inst.rest[0].resource[3].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[3].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[3].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[3].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[3].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[3].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[3].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[3].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[3].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[3].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[3].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[3].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[3].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[3].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[3].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[3].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[3].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[3].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[3].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/AppointmentResponse"
    )
    assert inst.rest[0].resource[3].searchInclude[0] == "AppointmentResponse.patient"
    assert (
        inst.rest[0].resource[3].searchInclude[1] == "AppointmentResponse.practitioner"
    )
    assert inst.rest[0].resource[3].searchInclude[2] == "AppointmentResponse.location"
    assert inst.rest[0].resource[3].searchInclude[3] == "AppointmentResponse.actor"
    assert (
        inst.rest[0].resource[3].searchInclude[4] == "AppointmentResponse.appointment"
    )
    assert (
        inst.rest[0].resource[3].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/appointmentresponse-patient"
    )
    assert (
        inst.rest[0].resource[3].searchParam[0].documentation
        == "This Response is for this Patient"
    )
    assert inst.rest[0].resource[3].searchParam[0].name == "patient"
    assert inst.rest[0].resource[3].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[3].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/appointmentresponse-practitioner"
    )
    assert (
        inst.rest[0].resource[3].searchParam[1].documentation
        == "This Response is for this Practitioner"
    )
    assert inst.rest[0].resource[3].searchParam[1].name == "practitioner"
    assert inst.rest[0].resource[3].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[3].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/appointmentresponse-location"
    )
    assert (
        inst.rest[0].resource[3].searchParam[2].documentation
        == "This Response is for this Location"
    )
    assert inst.rest[0].resource[3].searchParam[2].name == "location"
    assert inst.rest[0].resource[3].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[3].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/appointmentresponse-part-status"
    )
    assert (
        inst.rest[0].resource[3].searchParam[3].documentation
        == "The participants acceptance status for this appointment"
    )
    assert inst.rest[0].resource[3].searchParam[3].name == "part-status"
    assert inst.rest[0].resource[3].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[3].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/appointmentresponse-actor"
    )
    assert (
        inst.rest[0].resource[3].searchParam[4].documentation
        == "The Person, Location/HealthcareService or Device that this appointment response replies for"
    )
    assert inst.rest[0].resource[3].searchParam[4].name == "actor"
    assert inst.rest[0].resource[3].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[3].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/appointmentresponse-identifier"
    )
    assert (
        inst.rest[0].resource[3].searchParam[5].documentation
        == "An Identifier in this appointment response"
    )
    assert inst.rest[0].resource[3].searchParam[5].name == "identifier"
    assert inst.rest[0].resource[3].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[3].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/appointmentresponse-appointment"
    )
    assert (
        inst.rest[0].resource[3].searchParam[6].documentation
        == "The appointment that the response is attached to"
    )
    assert inst.rest[0].resource[3].searchParam[6].name == "appointment"
    assert inst.rest[0].resource[3].searchParam[6].type == "reference"
    assert inst.rest[0].resource[3].type == "AppointmentResponse"
    assert inst.rest[0].resource[4].conditionalCreate == True
    assert inst.rest[0].resource[4].conditionalDelete == "multiple"
    assert inst.rest[0].resource[4].conditionalUpdate == True
    assert inst.rest[0].resource[4].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[4].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[4].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[4].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[4].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[4].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[4].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[4].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[4].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[4].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[4].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[4].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[4].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[4].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[4].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[4].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[4].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[4].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[4].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/AuditEvent"
    )
    assert inst.rest[0].resource[4].searchInclude[0] == "AuditEvent.reference"
    assert inst.rest[0].resource[4].searchInclude[1] == "AuditEvent.patient"
    assert inst.rest[0].resource[4].searchInclude[2] == "AuditEvent.participant"
    assert (
        inst.rest[0].resource[4].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-site"
    )
    assert (
        inst.rest[0].resource[4].searchParam[0].documentation
        == "Logical source location within the enterprise"
    )
    assert inst.rest[0].resource[4].searchParam[0].name == "site"
    assert inst.rest[0].resource[4].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[4].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-desc"
    )
    assert (
        inst.rest[0].resource[4].searchParam[1].documentation
        == "Instance-specific descriptor for Object"
    )
    assert inst.rest[0].resource[4].searchParam[1].name == "desc"
    assert inst.rest[0].resource[4].searchParam[1].type == "string"
    assert (
        inst.rest[0].resource[4].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-type"
    )
    assert (
        inst.rest[0].resource[4].searchParam[2].documentation
        == "Type/identifier of event"
    )
    assert inst.rest[0].resource[4].searchParam[2].name == "type"
    assert inst.rest[0].resource[4].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[4].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-date"
    )
    assert (
        inst.rest[0].resource[4].searchParam[3].documentation
        == "Time when the event occurred on source"
    )
    assert inst.rest[0].resource[4].searchParam[3].name == "date"
    assert inst.rest[0].resource[4].searchParam[3].type == "date"
    assert (
        inst.rest[0].resource[4].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-reference"
    )
    assert (
        inst.rest[0].resource[4].searchParam[4].documentation
        == "Specific instance of resource (e.g. versioned)"
    )
    assert inst.rest[0].resource[4].searchParam[4].name == "reference"
    assert inst.rest[0].resource[4].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[4].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-identity"
    )
    assert (
        inst.rest[0].resource[4].searchParam[5].documentation
        == "Specific instance of object (e.g. versioned)"
    )
    assert inst.rest[0].resource[4].searchParam[5].name == "identity"
    assert inst.rest[0].resource[4].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[4].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-patient"
    )
    assert (
        inst.rest[0].resource[4].searchParam[6].documentation
        == "Direct reference to resource"
    )
    assert inst.rest[0].resource[4].searchParam[6].name == "patient"
    assert inst.rest[0].resource[4].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[4].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-altid"
    )
    assert (
        inst.rest[0].resource[4].searchParam[7].documentation
        == "Alternative User id e.g. authentication"
    )
    assert inst.rest[0].resource[4].searchParam[7].name == "altid"
    assert inst.rest[0].resource[4].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[4].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-source"
    )
    assert (
        inst.rest[0].resource[4].searchParam[8].documentation
        == "The identity of source detecting the event"
    )
    assert inst.rest[0].resource[4].searchParam[8].name == "source"
    assert inst.rest[0].resource[4].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[4].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-address"
    )
    assert (
        inst.rest[0].resource[4].searchParam[9].documentation
        == "Identifier for the network access point of the user device"
    )
    assert inst.rest[0].resource[4].searchParam[9].name == "address"
    assert inst.rest[0].resource[4].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[4].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-subtype"
    )
    assert (
        inst.rest[0].resource[4].searchParam[10].documentation
        == "More specific type/id for the event"
    )
    assert inst.rest[0].resource[4].searchParam[10].name == "subtype"
    assert inst.rest[0].resource[4].searchParam[10].type == "token"
    assert (
        inst.rest[0].resource[4].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-name"
    )
    assert (
        inst.rest[0].resource[4].searchParam[11].documentation
        == "Human-meaningful name for the user"
    )
    assert inst.rest[0].resource[4].searchParam[11].name == "name"
    assert inst.rest[0].resource[4].searchParam[11].type == "string"
    assert (
        inst.rest[0].resource[4].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-action"
    )
    assert (
        inst.rest[0].resource[4].searchParam[12].documentation
        == "Type of action performed during the event"
    )
    assert inst.rest[0].resource[4].searchParam[12].name == "action"
    assert inst.rest[0].resource[4].searchParam[12].type == "token"
    assert (
        inst.rest[0].resource[4].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-participant"
    )
    assert (
        inst.rest[0].resource[4].searchParam[13].documentation
        == "Direct reference to resource"
    )
    assert inst.rest[0].resource[4].searchParam[13].name == "participant"
    assert inst.rest[0].resource[4].searchParam[13].type == "reference"
    assert (
        inst.rest[0].resource[4].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-policy"
    )
    assert (
        inst.rest[0].resource[4].searchParam[14].documentation
        == "Policy that authorized event"
    )
    assert inst.rest[0].resource[4].searchParam[14].name == "policy"
    assert inst.rest[0].resource[4].searchParam[14].type == "uri"
    assert (
        inst.rest[0].resource[4].searchParam[15].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-object-type"
    )
    assert (
        inst.rest[0].resource[4].searchParam[15].documentation
        == "Type of object involved"
    )
    assert inst.rest[0].resource[4].searchParam[15].name == "object-type"
    assert inst.rest[0].resource[4].searchParam[15].type == "token"
    assert (
        inst.rest[0].resource[4].searchParam[16].definition
        == "http://hl7.org/fhir/SearchParameter/auditevent-user"
    )
    assert (
        inst.rest[0].resource[4].searchParam[16].documentation
        == "Unique identifier for the user"
    )
    assert inst.rest[0].resource[4].searchParam[16].name == "user"
    assert inst.rest[0].resource[4].searchParam[16].type == "token"
    assert inst.rest[0].resource[4].type == "AuditEvent"
    assert inst.rest[0].resource[5].conditionalCreate == True
    assert inst.rest[0].resource[5].conditionalDelete == "multiple"
    assert inst.rest[0].resource[5].conditionalUpdate == True
    assert inst.rest[0].resource[5].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[5].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[5].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[5].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[5].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[5].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[5].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[5].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[5].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[5].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[5].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[5].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[5].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[5].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[5].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[5].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[5].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[5].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[5].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Basic"
    )
    assert inst.rest[0].resource[5].searchInclude[0] == "Basic.author"
    assert inst.rest[0].resource[5].searchInclude[1] == "Basic.patient"
    assert inst.rest[0].resource[5].searchInclude[2] == "Basic.subject"
    assert (
        inst.rest[0].resource[5].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/basic-author"
    )
    assert inst.rest[0].resource[5].searchParam[0].documentation == "Who created"
    assert inst.rest[0].resource[5].searchParam[0].name == "author"
    assert inst.rest[0].resource[5].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[5].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/basic-patient"
    )
    assert (
        inst.rest[0].resource[5].searchParam[1].documentation
        == "Identifies the focus of this resource"
    )
    assert inst.rest[0].resource[5].searchParam[1].name == "patient"
    assert inst.rest[0].resource[5].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[5].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/basic-created"
    )
    assert inst.rest[0].resource[5].searchParam[2].documentation == "When created"
    assert inst.rest[0].resource[5].searchParam[2].name == "created"
    assert inst.rest[0].resource[5].searchParam[2].type == "date"
    assert (
        inst.rest[0].resource[5].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/basic-subject"
    )
    assert (
        inst.rest[0].resource[5].searchParam[3].documentation
        == "Identifies the focus of this resource"
    )
    assert inst.rest[0].resource[5].searchParam[3].name == "subject"
    assert inst.rest[0].resource[5].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[5].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/basic-code"
    )
    assert inst.rest[0].resource[5].searchParam[4].documentation == "Kind of Resource"
    assert inst.rest[0].resource[5].searchParam[4].name == "code"
    assert inst.rest[0].resource[5].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[5].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/basic-identifier"
    )
    assert (
        inst.rest[0].resource[5].searchParam[5].documentation == "Business identifier"
    )
    assert inst.rest[0].resource[5].searchParam[5].name == "identifier"
    assert inst.rest[0].resource[5].searchParam[5].type == "token"
    assert inst.rest[0].resource[5].type == "Basic"
    assert inst.rest[0].resource[6].conditionalCreate == True
    assert inst.rest[0].resource[6].conditionalDelete == "multiple"
    assert inst.rest[0].resource[6].conditionalUpdate == True
    assert inst.rest[0].resource[6].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[6].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[6].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[6].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[6].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[6].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[6].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[6].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[6].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[6].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[6].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[6].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[6].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[6].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[6].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[6].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[6].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[6].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[6].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Binary"
    )
    assert (
        inst.rest[0].resource[6].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/binary-contenttype"
    )
    assert (
        inst.rest[0].resource[6].searchParam[0].documentation
        == "MimeType of the binary content"
    )
    assert inst.rest[0].resource[6].searchParam[0].name == "contenttype"
    assert inst.rest[0].resource[6].searchParam[0].type == "token"
    assert inst.rest[0].resource[6].type == "Binary"
    assert inst.rest[0].resource[7].conditionalCreate == True
    assert inst.rest[0].resource[7].conditionalDelete == "multiple"
    assert inst.rest[0].resource[7].conditionalUpdate == True
    assert inst.rest[0].resource[7].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[7].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[7].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[7].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[7].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[7].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[7].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[7].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[7].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[7].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[7].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[7].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[7].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[7].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[7].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[7].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[7].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[7].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[7].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/BodySite"
    )
    assert inst.rest[0].resource[7].searchInclude[0] == "BodySite.patient"
    assert (
        inst.rest[0].resource[7].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/bodysite-patient"
    )
    assert (
        inst.rest[0].resource[7].searchParam[0].documentation
        == "Patient to whom bodysite belongs"
    )
    assert inst.rest[0].resource[7].searchParam[0].name == "patient"
    assert inst.rest[0].resource[7].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[7].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/bodysite-code"
    )
    assert (
        inst.rest[0].resource[7].searchParam[1].documentation
        == "Named anatomical location"
    )
    assert inst.rest[0].resource[7].searchParam[1].name == "code"
    assert inst.rest[0].resource[7].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[7].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/bodysite-identifier"
    )
    assert (
        inst.rest[0].resource[7].searchParam[2].documentation
        == "Identifier for this instance of the anatomical location"
    )
    assert inst.rest[0].resource[7].searchParam[2].name == "identifier"
    assert inst.rest[0].resource[7].searchParam[2].type == "token"
    assert inst.rest[0].resource[7].type == "BodySite"
    assert inst.rest[0].resource[8].conditionalCreate == True
    assert inst.rest[0].resource[8].conditionalDelete == "multiple"
    assert inst.rest[0].resource[8].conditionalUpdate == True
    assert inst.rest[0].resource[8].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[8].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[8].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[8].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[8].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[8].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[8].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[8].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[8].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[8].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[8].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[8].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[8].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[8].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[8].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[8].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[8].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[8].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[8].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Bundle"
    )
    assert inst.rest[0].resource[8].searchInclude[0] == "Bundle.message"
    assert inst.rest[0].resource[8].searchInclude[1] == "Bundle.composition"
    assert (
        inst.rest[0].resource[8].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/bundle-message"
    )
    assert (
        inst.rest[0].resource[8].searchParam[0].documentation
        == 'The first resource in the bundle, if the bundle type is "message" - this is a message header, and this parameter provides access to search its contents'
    )
    assert inst.rest[0].resource[8].searchParam[0].name == "message"
    assert inst.rest[0].resource[8].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[8].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/bundle-composition"
    )
    assert (
        inst.rest[0].resource[8].searchParam[1].documentation
        == 'The first resource in the bundle, if the bundle type is "document" - this is a composition, and this parameter provides access to searches its contents'
    )
    assert inst.rest[0].resource[8].searchParam[1].name == "composition"
    assert inst.rest[0].resource[8].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[8].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/bundle-type"
    )
    assert (
        inst.rest[0].resource[8].searchParam[2].documentation
        == "document | message | transaction | transaction-response | batch | batch-response | history | searchset | collection"
    )
    assert inst.rest[0].resource[8].searchParam[2].name == "type"
    assert inst.rest[0].resource[8].searchParam[2].type == "token"
    assert inst.rest[0].resource[8].type == "Bundle"
    assert inst.rest[0].resource[9].conditionalCreate == True
    assert inst.rest[0].resource[9].conditionalDelete == "multiple"
    assert inst.rest[0].resource[9].conditionalUpdate == True
    assert inst.rest[0].resource[9].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[9].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[9].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[9].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[9].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[9].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[9].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[9].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[9].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[9].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[9].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[9].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[9].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[9].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[9].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[9].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[9].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[9].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[9].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/CarePlan"
    )
    assert inst.rest[0].resource[9].searchInclude[0] == "CarePlan.condition"
    assert inst.rest[0].resource[9].searchInclude[1] == "CarePlan.subject"
    assert inst.rest[0].resource[9].searchInclude[2] == "CarePlan.goal"
    assert inst.rest[0].resource[9].searchInclude[3] == "CarePlan.patient"
    assert inst.rest[0].resource[9].searchInclude[4] == "CarePlan.participant"
    assert inst.rest[0].resource[9].searchInclude[5] == "CarePlan.performer"
    assert inst.rest[0].resource[9].searchInclude[6] == "CarePlan.activityreference"
    assert inst.rest[0].resource[9].searchInclude[7] == "CarePlan.relatedplan"
    assert (
        inst.rest[0].resource[9].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/careplan-activitycode"
    )
    assert (
        inst.rest[0].resource[9].searchParam[0].documentation
        == "Detail type of activity"
    )
    assert inst.rest[0].resource[9].searchParam[0].name == "activitycode"
    assert inst.rest[0].resource[9].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[9].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/careplan-condition"
    )
    assert (
        inst.rest[0].resource[9].searchParam[1].documentation
        == "Health issues this plan addresses"
    )
    assert inst.rest[0].resource[9].searchParam[1].name == "condition"
    assert inst.rest[0].resource[9].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[9].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/careplan-subject"
    )
    assert (
        inst.rest[0].resource[9].searchParam[2].documentation == "Who care plan is for"
    )
    assert inst.rest[0].resource[9].searchParam[2].name == "subject"
    assert inst.rest[0].resource[9].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[9].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/careplan-activitydate"
    )
    assert (
        inst.rest[0].resource[9].searchParam[3].documentation
        == "Specified date occurs within period specified by CarePlan.activity.timingSchedule"
    )
    assert inst.rest[0].resource[9].searchParam[3].name == "activitydate"
    assert inst.rest[0].resource[9].searchParam[3].type == "date"
    assert (
        inst.rest[0].resource[9].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/careplan-date"
    )
    assert (
        inst.rest[0].resource[9].searchParam[4].documentation
        == "Time period plan covers"
    )
    assert inst.rest[0].resource[9].searchParam[4].name == "date"
    assert inst.rest[0].resource[9].searchParam[4].type == "date"
    assert (
        inst.rest[0].resource[9].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/careplan-goal"
    )
    assert (
        inst.rest[0].resource[9].searchParam[5].documentation
        == "Desired outcome of plan"
    )
    assert inst.rest[0].resource[9].searchParam[5].name == "goal"
    assert inst.rest[0].resource[9].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[9].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/careplan-related"
    )
    assert (
        inst.rest[0].resource[9].searchParam[6].documentation
        == "A combination of the type of relationship and the related plan"
    )
    assert inst.rest[0].resource[9].searchParam[6].name == "related"
    assert inst.rest[0].resource[9].searchParam[6].type == "composite"
    assert (
        inst.rest[0].resource[9].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/careplan-relatedcode"
    )
    assert (
        inst.rest[0].resource[9].searchParam[7].documentation
        == "includes | replaces | fulfills"
    )
    assert inst.rest[0].resource[9].searchParam[7].name == "relatedcode"
    assert inst.rest[0].resource[9].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[9].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/careplan-patient"
    )
    assert (
        inst.rest[0].resource[9].searchParam[8].documentation == "Who care plan is for"
    )
    assert inst.rest[0].resource[9].searchParam[8].name == "patient"
    assert inst.rest[0].resource[9].searchParam[8].type == "reference"
    assert (
        inst.rest[0].resource[9].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/careplan-participant"
    )
    assert inst.rest[0].resource[9].searchParam[9].documentation == "Who is involved"
    assert inst.rest[0].resource[9].searchParam[9].name == "participant"
    assert inst.rest[0].resource[9].searchParam[9].type == "reference"
    assert (
        inst.rest[0].resource[9].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/careplan-performer"
    )
    assert (
        inst.rest[0].resource[9].searchParam[10].documentation
        == 'Matches if the practitioner is listed as a performer in any of the "simple" activities.  (For performers of the detailed activities, chain through the activitydetail search parameter.)'
    )
    assert inst.rest[0].resource[9].searchParam[10].name == "performer"
    assert inst.rest[0].resource[9].searchParam[10].type == "reference"
    assert (
        inst.rest[0].resource[9].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/careplan-activityreference"
    )
    assert (
        inst.rest[0].resource[9].searchParam[11].documentation
        == "Activity details defined in specific resource"
    )
    assert inst.rest[0].resource[9].searchParam[11].name == "activityreference"
    assert inst.rest[0].resource[9].searchParam[11].type == "reference"
    assert (
        inst.rest[0].resource[9].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/careplan-relatedplan"
    )
    assert (
        inst.rest[0].resource[9].searchParam[12].documentation
        == "Plan relationship exists with"
    )
    assert inst.rest[0].resource[9].searchParam[12].name == "relatedplan"
    assert inst.rest[0].resource[9].searchParam[12].type == "reference"
    assert inst.rest[0].resource[9].searchRevInclude[0] == "CarePlan.relatedplan"
    assert inst.rest[0].resource[9].searchRevInclude[1] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[9].type == "CarePlan"
    assert inst.rest[0].resource[10].conditionalCreate == True
    assert inst.rest[0].resource[10].conditionalDelete == "multiple"
    assert inst.rest[0].resource[10].conditionalUpdate == True
    assert inst.rest[0].resource[10].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[10].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[10].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[10].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[10].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[10].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[10].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[10].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[10].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[10].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[10].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[10].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[10].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[10].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[10].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[10].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[10].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[10].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[10].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Claim"
    )
    assert inst.rest[0].resource[10].searchInclude[0] == "Claim.patient"
    assert inst.rest[0].resource[10].searchInclude[1] == "Claim.provider"
    assert (
        inst.rest[0].resource[10].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/claim-patient"
    )
    assert inst.rest[0].resource[10].searchParam[0].documentation == "Patient"
    assert inst.rest[0].resource[10].searchParam[0].name == "patient"
    assert inst.rest[0].resource[10].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[10].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/claim-priority"
    )
    assert (
        inst.rest[0].resource[10].searchParam[1].documentation
        == "Processing priority requested"
    )
    assert inst.rest[0].resource[10].searchParam[1].name == "priority"
    assert inst.rest[0].resource[10].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[10].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/claim-use"
    )
    assert (
        inst.rest[0].resource[10].searchParam[2].documentation
        == "The kind of financial resource"
    )
    assert inst.rest[0].resource[10].searchParam[2].name == "use"
    assert inst.rest[0].resource[10].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[10].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/claim-provider"
    )
    assert (
        inst.rest[0].resource[10].searchParam[3].documentation
        == "Provider responsible for the claim"
    )
    assert inst.rest[0].resource[10].searchParam[3].name == "provider"
    assert inst.rest[0].resource[10].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[10].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/claim-identifier"
    )
    assert (
        inst.rest[0].resource[10].searchParam[4].documentation
        == "The primary identifier of the financial resource"
    )
    assert inst.rest[0].resource[10].searchParam[4].name == "identifier"
    assert inst.rest[0].resource[10].searchParam[4].type == "token"
    assert inst.rest[0].resource[10].type == "Claim"
    assert inst.rest[0].resource[11].conditionalCreate == True
    assert inst.rest[0].resource[11].conditionalDelete == "multiple"
    assert inst.rest[0].resource[11].conditionalUpdate == True
    assert inst.rest[0].resource[11].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[11].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[11].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[11].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[11].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[11].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[11].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[11].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[11].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[11].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[11].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[11].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[11].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[11].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[11].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[11].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[11].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[11].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[11].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/ClaimResponse"
    )
    assert (
        inst.rest[0].resource[11].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/claimresponse-identifier"
    )
    assert (
        inst.rest[0].resource[11].searchParam[0].documentation
        == "The identity of the insurer"
    )
    assert inst.rest[0].resource[11].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[11].searchParam[0].type == "token"
    assert inst.rest[0].resource[11].type == "ClaimResponse"
    assert inst.rest[0].resource[12].conditionalCreate == True
    assert inst.rest[0].resource[12].conditionalDelete == "multiple"
    assert inst.rest[0].resource[12].conditionalUpdate == True
    assert inst.rest[0].resource[12].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[12].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[12].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[12].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[12].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[12].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[12].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[12].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[12].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[12].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[12].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[12].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[12].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[12].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[12].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[12].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[12].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[12].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[12].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/ClinicalImpression"
    )
    assert inst.rest[0].resource[12].searchInclude[0] == "ClinicalImpression.assessor"
    assert inst.rest[0].resource[12].searchInclude[1] == "ClinicalImpression.trigger"
    assert inst.rest[0].resource[12].searchInclude[2] == "ClinicalImpression.patient"
    assert inst.rest[0].resource[12].searchInclude[3] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[12].searchInclude[4] == "ClinicalImpression.previous"
    assert inst.rest[0].resource[12].searchInclude[5] == "ClinicalImpression.action"
    assert (
        inst.rest[0].resource[12].searchInclude[6] == "ClinicalImpression.investigation"
    )
    assert inst.rest[0].resource[12].searchInclude[7] == "ClinicalImpression.problem"
    assert (
        inst.rest[0].resource[12].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-assessor"
    )
    assert (
        inst.rest[0].resource[12].searchParam[0].documentation
        == "The clinician performing the assessment"
    )
    assert inst.rest[0].resource[12].searchParam[0].name == "assessor"
    assert inst.rest[0].resource[12].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[12].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-trigger"
    )
    assert (
        inst.rest[0].resource[12].searchParam[1].documentation
        == "Request or event that necessitated this assessment"
    )
    assert inst.rest[0].resource[12].searchParam[1].name == "trigger"
    assert inst.rest[0].resource[12].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[12].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-patient"
    )
    assert (
        inst.rest[0].resource[12].searchParam[2].documentation
        == "The patient being assessed"
    )
    assert inst.rest[0].resource[12].searchParam[2].name == "patient"
    assert inst.rest[0].resource[12].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[12].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-plan"
    )
    assert (
        inst.rest[0].resource[12].searchParam[3].documentation
        == "Plan of action after assessment"
    )
    assert inst.rest[0].resource[12].searchParam[3].name == "plan"
    assert inst.rest[0].resource[12].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[12].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-resolved"
    )
    assert (
        inst.rest[0].resource[12].searchParam[4].documentation
        == "Diagnoses/conditions resolved since previous assessment"
    )
    assert inst.rest[0].resource[12].searchParam[4].name == "resolved"
    assert inst.rest[0].resource[12].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[12].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-trigger-code"
    )
    assert (
        inst.rest[0].resource[12].searchParam[5].documentation
        == "Request or event that necessitated this assessment"
    )
    assert inst.rest[0].resource[12].searchParam[5].name == "trigger-code"
    assert inst.rest[0].resource[12].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[12].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-previous"
    )
    assert (
        inst.rest[0].resource[12].searchParam[6].documentation
        == "Reference to last assessment"
    )
    assert inst.rest[0].resource[12].searchParam[6].name == "previous"
    assert inst.rest[0].resource[12].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[12].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-status"
    )
    assert (
        inst.rest[0].resource[12].searchParam[7].documentation
        == "in-progress | completed | entered-in-error"
    )
    assert inst.rest[0].resource[12].searchParam[7].name == "status"
    assert inst.rest[0].resource[12].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[12].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-action"
    )
    assert (
        inst.rest[0].resource[12].searchParam[8].documentation
        == "Actions taken during assessment"
    )
    assert inst.rest[0].resource[12].searchParam[8].name == "action"
    assert inst.rest[0].resource[12].searchParam[8].type == "reference"
    assert (
        inst.rest[0].resource[12].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-finding"
    )
    assert (
        inst.rest[0].resource[12].searchParam[9].documentation
        == "Specific text or code for finding"
    )
    assert inst.rest[0].resource[12].searchParam[9].name == "finding"
    assert inst.rest[0].resource[12].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[12].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-investigation"
    )
    assert (
        inst.rest[0].resource[12].searchParam[10].documentation
        == "Record of a specific investigation"
    )
    assert inst.rest[0].resource[12].searchParam[10].name == "investigation"
    assert inst.rest[0].resource[12].searchParam[10].type == "reference"
    assert (
        inst.rest[0].resource[12].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-problem"
    )
    assert (
        inst.rest[0].resource[12].searchParam[11].documentation
        == "General assessment of patient state"
    )
    assert inst.rest[0].resource[12].searchParam[11].name == "problem"
    assert inst.rest[0].resource[12].searchParam[11].type == "reference"
    assert (
        inst.rest[0].resource[12].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-date"
    )
    assert (
        inst.rest[0].resource[12].searchParam[12].documentation
        == "When the assessment occurred"
    )
    assert inst.rest[0].resource[12].searchParam[12].name == "date"
    assert inst.rest[0].resource[12].searchParam[12].type == "date"
    assert (
        inst.rest[0].resource[12].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/clinicalimpression-ruledout"
    )
    assert (
        inst.rest[0].resource[12].searchParam[13].documentation
        == "Specific text of code for diagnosis"
    )
    assert inst.rest[0].resource[12].searchParam[13].name == "ruledout"
    assert inst.rest[0].resource[12].searchParam[13].type == "token"
    assert (
        inst.rest[0].resource[12].searchRevInclude[0] == "ClinicalImpression.previous"
    )
    assert inst.rest[0].resource[12].type == "ClinicalImpression"
    assert inst.rest[0].resource[13].conditionalCreate == True
    assert inst.rest[0].resource[13].conditionalDelete == "multiple"
    assert inst.rest[0].resource[13].conditionalUpdate == True
    assert inst.rest[0].resource[13].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[13].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[13].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[13].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[13].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[13].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[13].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[13].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[13].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[13].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[13].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[13].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[13].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[13].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[13].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[13].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[13].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[13].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[13].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Communication"
    )
    assert inst.rest[0].resource[13].searchInclude[0] == "Communication.sender"
    assert inst.rest[0].resource[13].searchInclude[1] == "Communication.patient"
    assert inst.rest[0].resource[13].searchInclude[2] == "Communication.subject"
    assert inst.rest[0].resource[13].searchInclude[3] == "Communication.request"
    assert inst.rest[0].resource[13].searchInclude[4] == "Communication.encounter"
    assert inst.rest[0].resource[13].searchInclude[5] == "Communication.recipient"
    assert (
        inst.rest[0].resource[13].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/communication-sender"
    )
    assert inst.rest[0].resource[13].searchParam[0].documentation == "Message sender"
    assert inst.rest[0].resource[13].searchParam[0].name == "sender"
    assert inst.rest[0].resource[13].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[13].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/communication-sent"
    )
    assert inst.rest[0].resource[13].searchParam[1].documentation == "When sent"
    assert inst.rest[0].resource[13].searchParam[1].name == "sent"
    assert inst.rest[0].resource[13].searchParam[1].type == "date"
    assert (
        inst.rest[0].resource[13].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/communication-category"
    )
    assert inst.rest[0].resource[13].searchParam[2].documentation == "Message category"
    assert inst.rest[0].resource[13].searchParam[2].name == "category"
    assert inst.rest[0].resource[13].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[13].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/communication-patient"
    )
    assert inst.rest[0].resource[13].searchParam[3].documentation == "Focus of message"
    assert inst.rest[0].resource[13].searchParam[3].name == "patient"
    assert inst.rest[0].resource[13].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[13].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/communication-status"
    )
    assert (
        inst.rest[0].resource[13].searchParam[4].documentation
        == "in-progress | completed | suspended | rejected | failed"
    )
    assert inst.rest[0].resource[13].searchParam[4].name == "status"
    assert inst.rest[0].resource[13].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[13].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/communication-subject"
    )
    assert inst.rest[0].resource[13].searchParam[5].documentation == "Focus of message"
    assert inst.rest[0].resource[13].searchParam[5].name == "subject"
    assert inst.rest[0].resource[13].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[13].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/communication-request"
    )
    assert (
        inst.rest[0].resource[13].searchParam[6].documentation
        == "CommunicationRequest producing this message"
    )
    assert inst.rest[0].resource[13].searchParam[6].name == "request"
    assert inst.rest[0].resource[13].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[13].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/communication-received"
    )
    assert inst.rest[0].resource[13].searchParam[7].documentation == "When received"
    assert inst.rest[0].resource[13].searchParam[7].name == "received"
    assert inst.rest[0].resource[13].searchParam[7].type == "date"
    assert (
        inst.rest[0].resource[13].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/communication-encounter"
    )
    assert (
        inst.rest[0].resource[13].searchParam[8].documentation
        == "Encounter leading to message"
    )
    assert inst.rest[0].resource[13].searchParam[8].name == "encounter"
    assert inst.rest[0].resource[13].searchParam[8].type == "reference"
    assert (
        inst.rest[0].resource[13].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/communication-identifier"
    )
    assert inst.rest[0].resource[13].searchParam[9].documentation == "Unique identifier"
    assert inst.rest[0].resource[13].searchParam[9].name == "identifier"
    assert inst.rest[0].resource[13].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[13].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/communication-medium"
    )
    assert (
        inst.rest[0].resource[13].searchParam[10].documentation
        == "A channel of communication"
    )
    assert inst.rest[0].resource[13].searchParam[10].name == "medium"
    assert inst.rest[0].resource[13].searchParam[10].type == "token"
    assert (
        inst.rest[0].resource[13].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/communication-recipient"
    )
    assert (
        inst.rest[0].resource[13].searchParam[11].documentation == "Message recipient"
    )
    assert inst.rest[0].resource[13].searchParam[11].name == "recipient"
    assert inst.rest[0].resource[13].searchParam[11].type == "reference"
    assert inst.rest[0].resource[13].type == "Communication"
    assert inst.rest[0].resource[14].conditionalCreate == True
    assert inst.rest[0].resource[14].conditionalDelete == "multiple"
    assert inst.rest[0].resource[14].conditionalUpdate == True
    assert inst.rest[0].resource[14].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[14].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[14].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[14].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[14].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[14].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[14].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[14].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[14].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[14].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[14].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[14].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[14].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[14].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[14].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[14].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[14].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[14].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[14].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/CommunicationRequest"
    )
    assert inst.rest[0].resource[14].searchInclude[0] == "CommunicationRequest.sender"
    assert (
        inst.rest[0].resource[14].searchInclude[1] == "CommunicationRequest.requester"
    )
    assert inst.rest[0].resource[14].searchInclude[2] == "CommunicationRequest.patient"
    assert inst.rest[0].resource[14].searchInclude[3] == "CommunicationRequest.subject"
    assert (
        inst.rest[0].resource[14].searchInclude[4] == "CommunicationRequest.encounter"
    )
    assert (
        inst.rest[0].resource[14].searchInclude[5] == "CommunicationRequest.recipient"
    )
    assert (
        inst.rest[0].resource[14].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/communicationrequest-sender"
    )
    assert inst.rest[0].resource[14].searchParam[0].documentation == "Message sender"
    assert inst.rest[0].resource[14].searchParam[0].name == "sender"
    assert inst.rest[0].resource[14].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[14].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/communicationrequest-requested"
    )
    assert (
        inst.rest[0].resource[14].searchParam[1].documentation
        == "When ordered or proposed"
    )
    assert inst.rest[0].resource[14].searchParam[1].name == "requested"
    assert inst.rest[0].resource[14].searchParam[1].type == "date"
    assert (
        inst.rest[0].resource[14].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/communicationrequest-time"
    )
    assert inst.rest[0].resource[14].searchParam[2].documentation == "When scheduled"
    assert inst.rest[0].resource[14].searchParam[2].name == "time"
    assert inst.rest[0].resource[14].searchParam[2].type == "date"
    assert (
        inst.rest[0].resource[14].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/communicationrequest-requester"
    )
    assert (
        inst.rest[0].resource[14].searchParam[3].documentation
        == "An individual who requested a communication"
    )
    assert inst.rest[0].resource[14].searchParam[3].name == "requester"
    assert inst.rest[0].resource[14].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[14].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/communicationrequest-category"
    )
    assert inst.rest[0].resource[14].searchParam[4].documentation == "Message category"
    assert inst.rest[0].resource[14].searchParam[4].name == "category"
    assert inst.rest[0].resource[14].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[14].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/communicationrequest-patient"
    )
    assert inst.rest[0].resource[14].searchParam[5].documentation == "Focus of message"
    assert inst.rest[0].resource[14].searchParam[5].name == "patient"
    assert inst.rest[0].resource[14].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[14].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/communicationrequest-status"
    )
    assert (
        inst.rest[0].resource[14].searchParam[6].documentation
        == "proposed | planned | requested | received | accepted | in-progress | completed | suspended | rejected | failed"
    )
    assert inst.rest[0].resource[14].searchParam[6].name == "status"
    assert inst.rest[0].resource[14].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[14].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/communicationrequest-priority"
    )
    assert inst.rest[0].resource[14].searchParam[7].documentation == "Message urgency"
    assert inst.rest[0].resource[14].searchParam[7].name == "priority"
    assert inst.rest[0].resource[14].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[14].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/communicationrequest-subject"
    )
    assert inst.rest[0].resource[14].searchParam[8].documentation == "Focus of message"
    assert inst.rest[0].resource[14].searchParam[8].name == "subject"
    assert inst.rest[0].resource[14].searchParam[8].type == "reference"
    assert (
        inst.rest[0].resource[14].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/communicationrequest-encounter"
    )
    assert (
        inst.rest[0].resource[14].searchParam[9].documentation
        == "Encounter leading to message"
    )
    assert inst.rest[0].resource[14].searchParam[9].name == "encounter"
    assert inst.rest[0].resource[14].searchParam[9].type == "reference"
    assert (
        inst.rest[0].resource[14].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/communicationrequest-identifier"
    )
    assert (
        inst.rest[0].resource[14].searchParam[10].documentation == "Unique identifier"
    )
    assert inst.rest[0].resource[14].searchParam[10].name == "identifier"
    assert inst.rest[0].resource[14].searchParam[10].type == "token"
    assert (
        inst.rest[0].resource[14].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/communicationrequest-medium"
    )
    assert (
        inst.rest[0].resource[14].searchParam[11].documentation
        == "A channel of communication"
    )
    assert inst.rest[0].resource[14].searchParam[11].name == "medium"
    assert inst.rest[0].resource[14].searchParam[11].type == "token"
    assert (
        inst.rest[0].resource[14].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/communicationrequest-recipient"
    )
    assert (
        inst.rest[0].resource[14].searchParam[12].documentation == "Message recipient"
    )
    assert inst.rest[0].resource[14].searchParam[12].name == "recipient"
    assert inst.rest[0].resource[14].searchParam[12].type == "reference"
    assert inst.rest[0].resource[14].searchRevInclude[0] == "CarePlan.activityreference"
    assert inst.rest[0].resource[14].searchRevInclude[1] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[14].searchRevInclude[2] == "Communication.request"
    assert inst.rest[0].resource[14].type == "CommunicationRequest"
    assert inst.rest[0].resource[15].conditionalCreate == True
    assert inst.rest[0].resource[15].conditionalDelete == "multiple"
    assert inst.rest[0].resource[15].conditionalUpdate == True
    assert inst.rest[0].resource[15].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[15].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[15].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[15].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[15].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[15].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[15].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[15].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[15].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[15].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[15].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[15].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[15].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[15].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[15].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[15].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[15].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[15].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[15].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Composition"
    )
    assert inst.rest[0].resource[15].searchInclude[0] == "Composition.subject"
    assert inst.rest[0].resource[15].searchInclude[1] == "Composition.encounter"
    assert inst.rest[0].resource[15].searchInclude[2] == "Composition.author"
    assert inst.rest[0].resource[15].searchInclude[3] == "Composition.patient"
    assert inst.rest[0].resource[15].searchInclude[4] == "Composition.attester"
    assert inst.rest[0].resource[15].searchInclude[5] == "Composition.entry"
    assert (
        inst.rest[0].resource[15].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/composition-status"
    )
    assert (
        inst.rest[0].resource[15].searchParam[0].documentation
        == "preliminary | final | amended | entered-in-error"
    )
    assert inst.rest[0].resource[15].searchParam[0].name == "status"
    assert inst.rest[0].resource[15].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[15].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/composition-subject"
    )
    assert (
        inst.rest[0].resource[15].searchParam[1].documentation
        == "Who and/or what the composition is about"
    )
    assert inst.rest[0].resource[15].searchParam[1].name == "subject"
    assert inst.rest[0].resource[15].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[15].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/composition-class"
    )
    assert (
        inst.rest[0].resource[15].searchParam[2].documentation
        == "Categorization of Composition"
    )
    assert inst.rest[0].resource[15].searchParam[2].name == "class"
    assert inst.rest[0].resource[15].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[15].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/composition-encounter"
    )
    assert (
        inst.rest[0].resource[15].searchParam[3].documentation
        == "Context of the Composition"
    )
    assert inst.rest[0].resource[15].searchParam[3].name == "encounter"
    assert inst.rest[0].resource[15].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[15].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/composition-period"
    )
    assert (
        inst.rest[0].resource[15].searchParam[4].documentation
        == "The period covered by the documentation"
    )
    assert inst.rest[0].resource[15].searchParam[4].name == "period"
    assert inst.rest[0].resource[15].searchParam[4].type == "date"
    assert (
        inst.rest[0].resource[15].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/composition-type"
    )
    assert (
        inst.rest[0].resource[15].searchParam[5].documentation
        == "Kind of composition (LOINC if possible)"
    )
    assert inst.rest[0].resource[15].searchParam[5].name == "type"
    assert inst.rest[0].resource[15].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[15].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/composition-date"
    )
    assert (
        inst.rest[0].resource[15].searchParam[6].documentation
        == "Composition editing time"
    )
    assert inst.rest[0].resource[15].searchParam[6].name == "date"
    assert inst.rest[0].resource[15].searchParam[6].type == "date"
    assert (
        inst.rest[0].resource[15].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/composition-section"
    )
    assert (
        inst.rest[0].resource[15].searchParam[7].documentation
        == "Classification of section (recommended)"
    )
    assert inst.rest[0].resource[15].searchParam[7].name == "section"
    assert inst.rest[0].resource[15].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[15].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/composition-author"
    )
    assert (
        inst.rest[0].resource[15].searchParam[8].documentation
        == "Who and/or what authored the composition"
    )
    assert inst.rest[0].resource[15].searchParam[8].name == "author"
    assert inst.rest[0].resource[15].searchParam[8].type == "reference"
    assert (
        inst.rest[0].resource[15].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/composition-title"
    )
    assert (
        inst.rest[0].resource[15].searchParam[9].documentation
        == "Human Readable name/title"
    )
    assert inst.rest[0].resource[15].searchParam[9].name == "title"
    assert inst.rest[0].resource[15].searchParam[9].type == "string"
    assert (
        inst.rest[0].resource[15].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/composition-patient"
    )
    assert (
        inst.rest[0].resource[15].searchParam[10].documentation
        == "Who and/or what the composition is about"
    )
    assert inst.rest[0].resource[15].searchParam[10].name == "patient"
    assert inst.rest[0].resource[15].searchParam[10].type == "reference"
    assert (
        inst.rest[0].resource[15].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/composition-confidentiality"
    )
    assert (
        inst.rest[0].resource[15].searchParam[11].documentation
        == "As defined by affinity domain"
    )
    assert inst.rest[0].resource[15].searchParam[11].name == "confidentiality"
    assert inst.rest[0].resource[15].searchParam[11].type == "token"
    assert (
        inst.rest[0].resource[15].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/composition-attester"
    )
    assert (
        inst.rest[0].resource[15].searchParam[12].documentation
        == "Who attested the composition"
    )
    assert inst.rest[0].resource[15].searchParam[12].name == "attester"
    assert inst.rest[0].resource[15].searchParam[12].type == "reference"
    assert (
        inst.rest[0].resource[15].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/composition-entry"
    )
    assert (
        inst.rest[0].resource[15].searchParam[13].documentation
        == "A reference to data that supports this section"
    )
    assert inst.rest[0].resource[15].searchParam[13].name == "entry"
    assert inst.rest[0].resource[15].searchParam[13].type == "reference"
    assert (
        inst.rest[0].resource[15].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/composition-context"
    )
    assert (
        inst.rest[0].resource[15].searchParam[14].documentation
        == "Code(s) that apply to the event being documented"
    )
    assert inst.rest[0].resource[15].searchParam[14].name == "context"
    assert inst.rest[0].resource[15].searchParam[14].type == "token"
    assert (
        inst.rest[0].resource[15].searchParam[15].definition
        == "http://hl7.org/fhir/SearchParameter/composition-identifier"
    )
    assert (
        inst.rest[0].resource[15].searchParam[15].documentation
        == "Logical identifier of composition (version-independent)"
    )
    assert inst.rest[0].resource[15].searchParam[15].name == "identifier"
    assert inst.rest[0].resource[15].searchParam[15].type == "token"
    assert inst.rest[0].resource[15].type == "Composition"
    assert inst.rest[0].resource[16].conditionalCreate == True
    assert inst.rest[0].resource[16].conditionalDelete == "multiple"
    assert inst.rest[0].resource[16].conditionalUpdate == True
    assert inst.rest[0].resource[16].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[16].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[16].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[16].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[16].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[16].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[16].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[16].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[16].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[16].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[16].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[16].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[16].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[16].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[16].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[16].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[16].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[16].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[16].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/ConceptMap"
    )
    assert inst.rest[0].resource[16].searchInclude[0] == "ConceptMap.sourceuri"
    assert inst.rest[0].resource[16].searchInclude[1] == "ConceptMap.source"
    assert inst.rest[0].resource[16].searchInclude[2] == "ConceptMap.target"
    assert (
        inst.rest[0].resource[16].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-dependson"
    )
    assert (
        inst.rest[0].resource[16].searchParam[0].documentation
        == "Reference to element/field/ValueSet mapping depends on"
    )
    assert inst.rest[0].resource[16].searchParam[0].name == "dependson"
    assert inst.rest[0].resource[16].searchParam[0].type == "uri"
    assert (
        inst.rest[0].resource[16].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-status"
    )
    assert (
        inst.rest[0].resource[16].searchParam[1].documentation
        == "Status of the concept map"
    )
    assert inst.rest[0].resource[16].searchParam[1].name == "status"
    assert inst.rest[0].resource[16].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[16].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-date"
    )
    assert (
        inst.rest[0].resource[16].searchParam[2].documentation
        == "The concept map publication date"
    )
    assert inst.rest[0].resource[16].searchParam[2].name == "date"
    assert inst.rest[0].resource[16].searchParam[2].type == "date"
    assert (
        inst.rest[0].resource[16].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-url"
    )
    assert (
        inst.rest[0].resource[16].searchParam[3].documentation
        == "The URL of the concept map"
    )
    assert inst.rest[0].resource[16].searchParam[3].name == "url"
    assert inst.rest[0].resource[16].searchParam[3].type == "uri"
    assert (
        inst.rest[0].resource[16].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-targetsystem"
    )
    assert (
        inst.rest[0].resource[16].searchParam[4].documentation
        == "System of the target (if necessary)"
    )
    assert inst.rest[0].resource[16].searchParam[4].name == "targetsystem"
    assert inst.rest[0].resource[16].searchParam[4].type == "uri"
    assert (
        inst.rest[0].resource[16].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-version"
    )
    assert (
        inst.rest[0].resource[16].searchParam[5].documentation
        == "The version identifier of the concept map"
    )
    assert inst.rest[0].resource[16].searchParam[5].name == "version"
    assert inst.rest[0].resource[16].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[16].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-publisher"
    )
    assert (
        inst.rest[0].resource[16].searchParam[6].documentation
        == "Name of the publisher of the concept map"
    )
    assert inst.rest[0].resource[16].searchParam[6].name == "publisher"
    assert inst.rest[0].resource[16].searchParam[6].type == "string"
    assert (
        inst.rest[0].resource[16].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-product"
    )
    assert (
        inst.rest[0].resource[16].searchParam[7].documentation
        == "Reference to element/field/ValueSet mapping depends on"
    )
    assert inst.rest[0].resource[16].searchParam[7].name == "product"
    assert inst.rest[0].resource[16].searchParam[7].type == "uri"
    assert (
        inst.rest[0].resource[16].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-sourcecode"
    )
    assert (
        inst.rest[0].resource[16].searchParam[8].documentation
        == "Identifies element being mapped"
    )
    assert inst.rest[0].resource[16].searchParam[8].name == "sourcecode"
    assert inst.rest[0].resource[16].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[16].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-sourceuri"
    )
    assert (
        inst.rest[0].resource[16].searchParam[9].documentation
        == "Identifies the source of the concepts which are being mapped"
    )
    assert inst.rest[0].resource[16].searchParam[9].name == "sourceuri"
    assert inst.rest[0].resource[16].searchParam[9].type == "reference"
    assert (
        inst.rest[0].resource[16].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-source"
    )
    assert (
        inst.rest[0].resource[16].searchParam[10].documentation
        == "Identifies the source of the concepts which are being mapped"
    )
    assert inst.rest[0].resource[16].searchParam[10].name == "source"
    assert inst.rest[0].resource[16].searchParam[10].type == "reference"
    assert (
        inst.rest[0].resource[16].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-description"
    )
    assert (
        inst.rest[0].resource[16].searchParam[11].documentation
        == "Text search in the description of the concept map"
    )
    assert inst.rest[0].resource[16].searchParam[11].name == "description"
    assert inst.rest[0].resource[16].searchParam[11].type == "string"
    assert (
        inst.rest[0].resource[16].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-name"
    )
    assert (
        inst.rest[0].resource[16].searchParam[12].documentation
        == "Name of the concept map"
    )
    assert inst.rest[0].resource[16].searchParam[12].name == "name"
    assert inst.rest[0].resource[16].searchParam[12].type == "string"
    assert (
        inst.rest[0].resource[16].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-context"
    )
    assert (
        inst.rest[0].resource[16].searchParam[13].documentation
        == "A use context assigned to the concept map"
    )
    assert inst.rest[0].resource[16].searchParam[13].name == "context"
    assert inst.rest[0].resource[16].searchParam[13].type == "token"
    assert (
        inst.rest[0].resource[16].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-target"
    )
    assert (
        inst.rest[0].resource[16].searchParam[14].documentation
        == "Provides context to the mappings"
    )
    assert inst.rest[0].resource[16].searchParam[14].name == "target"
    assert inst.rest[0].resource[16].searchParam[14].type == "reference"
    assert (
        inst.rest[0].resource[16].searchParam[15].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-targetcode"
    )
    assert (
        inst.rest[0].resource[16].searchParam[15].documentation
        == "Code that identifies the target element"
    )
    assert inst.rest[0].resource[16].searchParam[15].name == "targetcode"
    assert inst.rest[0].resource[16].searchParam[15].type == "token"
    assert (
        inst.rest[0].resource[16].searchParam[16].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-identifier"
    )
    assert (
        inst.rest[0].resource[16].searchParam[16].documentation
        == "Additional identifier for the concept map"
    )
    assert inst.rest[0].resource[16].searchParam[16].name == "identifier"
    assert inst.rest[0].resource[16].searchParam[16].type == "token"
    assert (
        inst.rest[0].resource[16].searchParam[17].definition
        == "http://hl7.org/fhir/SearchParameter/conceptmap-sourcesystem"
    )
    assert (
        inst.rest[0].resource[16].searchParam[17].documentation
        == "Code System (if value set crosses code systems)"
    )
    assert inst.rest[0].resource[16].searchParam[17].name == "sourcesystem"
    assert inst.rest[0].resource[16].searchParam[17].type == "uri"
    assert inst.rest[0].resource[16].type == "ConceptMap"
    assert inst.rest[0].resource[17].conditionalCreate == True
    assert inst.rest[0].resource[17].conditionalDelete == "multiple"
    assert inst.rest[0].resource[17].conditionalUpdate == True
    assert inst.rest[0].resource[17].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[17].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[17].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[17].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[17].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[17].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[17].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[17].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[17].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[17].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[17].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[17].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[17].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[17].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[17].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[17].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[17].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[17].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[17].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Condition"
    )
    assert inst.rest[0].resource[17].searchInclude[0] == "Condition.asserter"
    assert inst.rest[0].resource[17].searchInclude[1] == "Condition.encounter"
    assert inst.rest[0].resource[17].searchInclude[2] == "Condition.patient"
    assert (
        inst.rest[0].resource[17].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/condition-date-recorded"
    )
    assert (
        inst.rest[0].resource[17].searchParam[0].documentation
        == "A date, when the Condition statement was documented"
    )
    assert inst.rest[0].resource[17].searchParam[0].name == "date-recorded"
    assert inst.rest[0].resource[17].searchParam[0].type == "date"
    assert (
        inst.rest[0].resource[17].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/condition-asserter"
    )
    assert (
        inst.rest[0].resource[17].searchParam[1].documentation
        == "Person who asserts this condition"
    )
    assert inst.rest[0].resource[17].searchParam[1].name == "asserter"
    assert inst.rest[0].resource[17].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[17].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/condition-onset"
    )
    assert (
        inst.rest[0].resource[17].searchParam[2].documentation
        == "Date related onsets (dateTime and Period)"
    )
    assert inst.rest[0].resource[17].searchParam[2].name == "onset"
    assert inst.rest[0].resource[17].searchParam[2].type == "date"
    assert (
        inst.rest[0].resource[17].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/condition-evidence"
    )
    assert (
        inst.rest[0].resource[17].searchParam[3].documentation
        == "Manifestation/symptom"
    )
    assert inst.rest[0].resource[17].searchParam[3].name == "evidence"
    assert inst.rest[0].resource[17].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[17].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/condition-body-site"
    )
    assert (
        inst.rest[0].resource[17].searchParam[4].documentation
        == "Anatomical location, if relevant"
    )
    assert inst.rest[0].resource[17].searchParam[4].name == "body-site"
    assert inst.rest[0].resource[17].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[17].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/condition-onset-info"
    )
    assert (
        inst.rest[0].resource[17].searchParam[5].documentation
        == "Other onsets (boolean, age, range, string)"
    )
    assert inst.rest[0].resource[17].searchParam[5].name == "onset-info"
    assert inst.rest[0].resource[17].searchParam[5].type == "string"
    assert (
        inst.rest[0].resource[17].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/condition-severity"
    )
    assert (
        inst.rest[0].resource[17].searchParam[6].documentation
        == "The severity of the condition"
    )
    assert inst.rest[0].resource[17].searchParam[6].name == "severity"
    assert inst.rest[0].resource[17].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[17].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/condition-code"
    )
    assert (
        inst.rest[0].resource[17].searchParam[7].documentation
        == "Code for the condition"
    )
    assert inst.rest[0].resource[17].searchParam[7].name == "code"
    assert inst.rest[0].resource[17].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[17].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/condition-encounter"
    )
    assert (
        inst.rest[0].resource[17].searchParam[8].documentation
        == "Encounter when condition first asserted"
    )
    assert inst.rest[0].resource[17].searchParam[8].name == "encounter"
    assert inst.rest[0].resource[17].searchParam[8].type == "reference"
    assert (
        inst.rest[0].resource[17].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/condition-stage"
    )
    assert (
        inst.rest[0].resource[17].searchParam[9].documentation
        == "Simple summary (disease specific)"
    )
    assert inst.rest[0].resource[17].searchParam[9].name == "stage"
    assert inst.rest[0].resource[17].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[17].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/condition-category"
    )
    assert (
        inst.rest[0].resource[17].searchParam[10].documentation
        == "The category of the condition"
    )
    assert inst.rest[0].resource[17].searchParam[10].name == "category"
    assert inst.rest[0].resource[17].searchParam[10].type == "token"
    assert (
        inst.rest[0].resource[17].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/condition-patient"
    )
    assert (
        inst.rest[0].resource[17].searchParam[11].documentation
        == "Who has the condition?"
    )
    assert inst.rest[0].resource[17].searchParam[11].name == "patient"
    assert inst.rest[0].resource[17].searchParam[11].type == "reference"
    assert (
        inst.rest[0].resource[17].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/condition-clinicalstatus"
    )
    assert (
        inst.rest[0].resource[17].searchParam[12].documentation
        == "The clinical status of the condition"
    )
    assert inst.rest[0].resource[17].searchParam[12].name == "clinicalstatus"
    assert inst.rest[0].resource[17].searchParam[12].type == "token"
    assert (
        inst.rest[0].resource[17].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/condition-identifier"
    )
    assert (
        inst.rest[0].resource[17].searchParam[13].documentation
        == "A unique identifier of the condition record"
    )
    assert inst.rest[0].resource[17].searchParam[13].name == "identifier"
    assert inst.rest[0].resource[17].searchParam[13].type == "token"
    assert inst.rest[0].resource[17].searchRevInclude[0] == "CarePlan.condition"
    assert inst.rest[0].resource[17].searchRevInclude[1] == "ClinicalImpression.problem"
    assert inst.rest[0].resource[17].searchRevInclude[2] == "Encounter.condition"
    assert inst.rest[0].resource[17].searchRevInclude[3] == "Encounter.indication"
    assert inst.rest[0].resource[17].searchRevInclude[4] == "Encounter.procedure"
    assert inst.rest[0].resource[17].searchRevInclude[5] == "EpisodeOfCare.condition"
    assert inst.rest[0].resource[17].searchRevInclude[6] == "RiskAssessment.condition"
    assert inst.rest[0].resource[17].type == "Condition"
    assert inst.rest[0].resource[18].conditionalCreate == True
    assert inst.rest[0].resource[18].conditionalDelete == "multiple"
    assert inst.rest[0].resource[18].conditionalUpdate == True
    assert inst.rest[0].resource[18].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[18].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[18].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[18].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[18].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[18].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[18].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[18].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[18].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[18].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[18].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[18].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[18].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[18].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[18].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[18].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[18].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[18].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[18].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Conformance"
    )
    assert inst.rest[0].resource[18].searchInclude[0] == "Conformance.supported-profile"
    assert inst.rest[0].resource[18].searchInclude[1] == "Conformance.profile"
    assert (
        inst.rest[0].resource[18].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-status"
    )
    assert (
        inst.rest[0].resource[18].searchParam[0].documentation
        == "The current status of the conformance statement"
    )
    assert inst.rest[0].resource[18].searchParam[0].name == "status"
    assert inst.rest[0].resource[18].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[18].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-resource"
    )
    assert (
        inst.rest[0].resource[18].searchParam[1].documentation
        == "Name of a resource mentioned in a conformance statement"
    )
    assert inst.rest[0].resource[18].searchParam[1].name == "resource"
    assert inst.rest[0].resource[18].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[18].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-security"
    )
    assert (
        inst.rest[0].resource[18].searchParam[2].documentation
        == "OAuth | SMART-on-FHIR | NTLM | Basic | Kerberos | Certificates"
    )
    assert inst.rest[0].resource[18].searchParam[2].name == "security"
    assert inst.rest[0].resource[18].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[18].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-format"
    )
    assert (
        inst.rest[0].resource[18].searchParam[3].documentation
        == "formats supported (xml | json | mime type)"
    )
    assert inst.rest[0].resource[18].searchParam[3].name == "format"
    assert inst.rest[0].resource[18].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[18].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-date"
    )
    assert (
        inst.rest[0].resource[18].searchParam[4].documentation
        == "The conformance statement publication date"
    )
    assert inst.rest[0].resource[18].searchParam[4].name == "date"
    assert inst.rest[0].resource[18].searchParam[4].type == "date"
    assert (
        inst.rest[0].resource[18].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-url"
    )
    assert (
        inst.rest[0].resource[18].searchParam[5].documentation
        == "The uri that identifies the conformance statement"
    )
    assert inst.rest[0].resource[18].searchParam[5].name == "url"
    assert inst.rest[0].resource[18].searchParam[5].type == "uri"
    assert (
        inst.rest[0].resource[18].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-version"
    )
    assert (
        inst.rest[0].resource[18].searchParam[6].documentation
        == "The version identifier of the conformance statement"
    )
    assert inst.rest[0].resource[18].searchParam[6].name == "version"
    assert inst.rest[0].resource[18].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[18].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-publisher"
    )
    assert (
        inst.rest[0].resource[18].searchParam[7].documentation
        == "Name of the publisher of the conformance statement"
    )
    assert inst.rest[0].resource[18].searchParam[7].name == "publisher"
    assert inst.rest[0].resource[18].searchParam[7].type == "string"
    assert (
        inst.rest[0].resource[18].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-mode"
    )
    assert (
        inst.rest[0].resource[18].searchParam[8].documentation
        == "Mode - restful (server/client) or messaging (sender/receiver)"
    )
    assert inst.rest[0].resource[18].searchParam[8].name == "mode"
    assert inst.rest[0].resource[18].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[18].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-software"
    )
    assert (
        inst.rest[0].resource[18].searchParam[9].documentation
        == "Part of a the name of a software application"
    )
    assert inst.rest[0].resource[18].searchParam[9].name == "software"
    assert inst.rest[0].resource[18].searchParam[9].type == "string"
    assert (
        inst.rest[0].resource[18].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-description"
    )
    assert (
        inst.rest[0].resource[18].searchParam[10].documentation
        == "Text search in the description of the conformance statement"
    )
    assert inst.rest[0].resource[18].searchParam[10].name == "description"
    assert inst.rest[0].resource[18].searchParam[10].type == "string"
    assert (
        inst.rest[0].resource[18].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-event"
    )
    assert (
        inst.rest[0].resource[18].searchParam[11].documentation
        == "Event code in a conformance statement"
    )
    assert inst.rest[0].resource[18].searchParam[11].name == "event"
    assert inst.rest[0].resource[18].searchParam[11].type == "token"
    assert (
        inst.rest[0].resource[18].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-name"
    )
    assert (
        inst.rest[0].resource[18].searchParam[12].documentation
        == "Name of the conformance statement"
    )
    assert inst.rest[0].resource[18].searchParam[12].name == "name"
    assert inst.rest[0].resource[18].searchParam[12].type == "string"
    assert (
        inst.rest[0].resource[18].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-supported-profile"
    )
    assert (
        inst.rest[0].resource[18].searchParam[13].documentation
        == "Profiles for use cases supported"
    )
    assert inst.rest[0].resource[18].searchParam[13].name == "supported-profile"
    assert inst.rest[0].resource[18].searchParam[13].type == "reference"
    assert (
        inst.rest[0].resource[18].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-fhirversion"
    )
    assert (
        inst.rest[0].resource[18].searchParam[14].documentation == "The version of FHIR"
    )
    assert inst.rest[0].resource[18].searchParam[14].name == "fhirversion"
    assert inst.rest[0].resource[18].searchParam[14].type == "token"
    assert (
        inst.rest[0].resource[18].searchParam[15].definition
        == "http://hl7.org/fhir/SearchParameter/conformance-profile"
    )
    assert (
        inst.rest[0].resource[18].searchParam[15].documentation
        == "A profile id invoked in a conformance statement"
    )
    assert inst.rest[0].resource[18].searchParam[15].name == "profile"
    assert inst.rest[0].resource[18].searchParam[15].type == "reference"
    assert inst.rest[0].resource[18].type == "Conformance"
    assert inst.rest[0].resource[19].conditionalCreate == True
    assert inst.rest[0].resource[19].conditionalDelete == "multiple"
    assert inst.rest[0].resource[19].conditionalUpdate == True
    assert inst.rest[0].resource[19].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[19].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[19].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[19].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[19].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[19].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[19].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[19].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[19].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[19].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[19].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[19].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[19].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[19].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[19].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[19].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[19].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[19].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[19].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Contract"
    )
    assert inst.rest[0].resource[19].searchInclude[0] == "Contract.signer"
    assert inst.rest[0].resource[19].searchInclude[1] == "Contract.patient"
    assert inst.rest[0].resource[19].searchInclude[2] == "Contract.subject"
    assert inst.rest[0].resource[19].searchInclude[3] == "Contract.actor"
    assert (
        inst.rest[0].resource[19].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/contract-signer"
    )
    assert (
        inst.rest[0].resource[19].searchParam[0].documentation
        == "Contract Signatory Party"
    )
    assert inst.rest[0].resource[19].searchParam[0].name == "signer"
    assert inst.rest[0].resource[19].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[19].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/contract-patient"
    )
    assert (
        inst.rest[0].resource[19].searchParam[1].documentation
        == "The identity of the target of the contract (if a patient)"
    )
    assert inst.rest[0].resource[19].searchParam[1].name == "patient"
    assert inst.rest[0].resource[19].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[19].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/contract-subject"
    )
    assert (
        inst.rest[0].resource[19].searchParam[2].documentation
        == "The identity of the target of the contract"
    )
    assert inst.rest[0].resource[19].searchParam[2].name == "subject"
    assert inst.rest[0].resource[19].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[19].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/contract-actor"
    )
    assert (
        inst.rest[0].resource[19].searchParam[3].documentation == "Contract Actor Type"
    )
    assert inst.rest[0].resource[19].searchParam[3].name == "actor"
    assert inst.rest[0].resource[19].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[19].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/contract-identifier"
    )
    assert (
        inst.rest[0].resource[19].searchParam[4].documentation
        == "The identity of the contract"
    )
    assert inst.rest[0].resource[19].searchParam[4].name == "identifier"
    assert inst.rest[0].resource[19].searchParam[4].type == "token"
    assert inst.rest[0].resource[19].searchRevInclude[0] == "Contract.actor"
    assert inst.rest[0].resource[19].type == "Contract"
    assert inst.rest[0].resource[20].conditionalCreate == True
    assert inst.rest[0].resource[20].conditionalDelete == "multiple"
    assert inst.rest[0].resource[20].conditionalUpdate == True
    assert inst.rest[0].resource[20].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[20].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[20].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[20].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[20].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[20].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[20].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[20].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[20].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[20].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[20].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[20].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[20].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[20].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[20].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[20].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[20].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[20].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[20].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Coverage"
    )
    assert inst.rest[0].resource[20].searchInclude[0] == "Coverage.issuer"
    assert (
        inst.rest[0].resource[20].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/coverage-plan"
    )
    assert (
        inst.rest[0].resource[20].searchParam[0].documentation
        == "A plan or policy identifier"
    )
    assert inst.rest[0].resource[20].searchParam[0].name == "plan"
    assert inst.rest[0].resource[20].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[20].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/coverage-issuer"
    )
    assert (
        inst.rest[0].resource[20].searchParam[1].documentation
        == "The identity of the insurer"
    )
    assert inst.rest[0].resource[20].searchParam[1].name == "issuer"
    assert inst.rest[0].resource[20].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[20].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/coverage-sequence"
    )
    assert inst.rest[0].resource[20].searchParam[2].documentation == "Sequence number"
    assert inst.rest[0].resource[20].searchParam[2].name == "sequence"
    assert inst.rest[0].resource[20].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[20].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/coverage-dependent"
    )
    assert inst.rest[0].resource[20].searchParam[3].documentation == "Dependent number"
    assert inst.rest[0].resource[20].searchParam[3].name == "dependent"
    assert inst.rest[0].resource[20].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[20].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/coverage-group"
    )
    assert inst.rest[0].resource[20].searchParam[4].documentation == "Group identifier"
    assert inst.rest[0].resource[20].searchParam[4].name == "group"
    assert inst.rest[0].resource[20].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[20].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/coverage-type"
    )
    assert (
        inst.rest[0].resource[20].searchParam[5].documentation == "The kind of coverage"
    )
    assert inst.rest[0].resource[20].searchParam[5].name == "type"
    assert inst.rest[0].resource[20].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[20].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/coverage-identifier"
    )
    assert (
        inst.rest[0].resource[20].searchParam[6].documentation
        == "The primary identifier of the insured"
    )
    assert inst.rest[0].resource[20].searchParam[6].name == "identifier"
    assert inst.rest[0].resource[20].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[20].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/coverage-subplan"
    )
    assert (
        inst.rest[0].resource[20].searchParam[7].documentation == "Sub-plan identifier"
    )
    assert inst.rest[0].resource[20].searchParam[7].name == "subplan"
    assert inst.rest[0].resource[20].searchParam[7].type == "token"
    assert inst.rest[0].resource[20].type == "Coverage"
    assert inst.rest[0].resource[21].conditionalCreate == True
    assert inst.rest[0].resource[21].conditionalDelete == "multiple"
    assert inst.rest[0].resource[21].conditionalUpdate == True
    assert inst.rest[0].resource[21].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[21].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[21].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[21].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[21].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[21].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[21].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[21].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[21].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[21].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[21].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[21].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[21].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[21].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[21].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[21].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[21].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[21].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[21].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/DataElement"
    )
    assert (
        inst.rest[0].resource[21].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement-stringency"
    )
    assert (
        inst.rest[0].resource[21].searchParam[0].documentation
        == "The stringency of the data element definition"
    )
    assert inst.rest[0].resource[21].searchParam[0].name == "stringency"
    assert inst.rest[0].resource[21].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[21].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement-status"
    )
    assert (
        inst.rest[0].resource[21].searchParam[1].documentation
        == "The current status of the data element"
    )
    assert inst.rest[0].resource[21].searchParam[1].name == "status"
    assert inst.rest[0].resource[21].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[21].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement-description"
    )
    assert (
        inst.rest[0].resource[21].searchParam[2].documentation
        == "Text search in the description of the data element.  This corresponds to the definition of the first DataElement.element."
    )
    assert inst.rest[0].resource[21].searchParam[2].name == "description"
    assert inst.rest[0].resource[21].searchParam[2].type == "string"
    assert (
        inst.rest[0].resource[21].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement-name"
    )
    assert (
        inst.rest[0].resource[21].searchParam[3].documentation
        == "Name of the data element"
    )
    assert inst.rest[0].resource[21].searchParam[3].name == "name"
    assert inst.rest[0].resource[21].searchParam[3].type == "string"
    assert (
        inst.rest[0].resource[21].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement-context"
    )
    assert (
        inst.rest[0].resource[21].searchParam[4].documentation
        == "A use context assigned to the data element"
    )
    assert inst.rest[0].resource[21].searchParam[4].name == "context"
    assert inst.rest[0].resource[21].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[21].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement-code"
    )
    assert (
        inst.rest[0].resource[21].searchParam[5].documentation
        == "A code for the data element (server may choose to do subsumption)"
    )
    assert inst.rest[0].resource[21].searchParam[5].name == "code"
    assert inst.rest[0].resource[21].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[21].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement-date"
    )
    assert (
        inst.rest[0].resource[21].searchParam[6].documentation
        == "The data element publication date"
    )
    assert inst.rest[0].resource[21].searchParam[6].name == "date"
    assert inst.rest[0].resource[21].searchParam[6].type == "date"
    assert (
        inst.rest[0].resource[21].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement-identifier"
    )
    assert (
        inst.rest[0].resource[21].searchParam[7].documentation
        == "The identifier of the data element"
    )
    assert inst.rest[0].resource[21].searchParam[7].name == "identifier"
    assert inst.rest[0].resource[21].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[21].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement-url"
    )
    assert (
        inst.rest[0].resource[21].searchParam[8].documentation
        == "The official URL for the data element"
    )
    assert inst.rest[0].resource[21].searchParam[8].name == "url"
    assert inst.rest[0].resource[21].searchParam[8].type == "uri"
    assert (
        inst.rest[0].resource[21].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement-publisher"
    )
    assert (
        inst.rest[0].resource[21].searchParam[9].documentation
        == "Name of the publisher of the data element"
    )
    assert inst.rest[0].resource[21].searchParam[9].name == "publisher"
    assert inst.rest[0].resource[21].searchParam[9].type == "string"
    assert (
        inst.rest[0].resource[21].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement-version"
    )
    assert (
        inst.rest[0].resource[21].searchParam[10].documentation
        == "The version identifier of the data element"
    )
    assert inst.rest[0].resource[21].searchParam[10].name == "version"
    assert inst.rest[0].resource[21].searchParam[10].type == "string"
    assert inst.rest[0].resource[21].type == "DataElement"
    assert inst.rest[0].resource[22].conditionalCreate == True
    assert inst.rest[0].resource[22].conditionalDelete == "multiple"
    assert inst.rest[0].resource[22].conditionalUpdate == True
    assert inst.rest[0].resource[22].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[22].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[22].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[22].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[22].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[22].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[22].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[22].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[22].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[22].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[22].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[22].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[22].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[22].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[22].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[22].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[22].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[22].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[22].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/DetectedIssue"
    )
    assert inst.rest[0].resource[22].searchInclude[0] == "DetectedIssue.author"
    assert inst.rest[0].resource[22].searchInclude[1] == "DetectedIssue.implicated"
    assert inst.rest[0].resource[22].searchInclude[2] == "DetectedIssue.patient"
    assert (
        inst.rest[0].resource[22].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/detectedissue-author"
    )
    assert (
        inst.rest[0].resource[22].searchParam[0].documentation
        == "The provider or device that identified the issue"
    )
    assert inst.rest[0].resource[22].searchParam[0].name == "author"
    assert inst.rest[0].resource[22].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[22].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/detectedissue-category"
    )
    assert (
        inst.rest[0].resource[22].searchParam[1].documentation
        == "Issue Category, e.g. drug-drug, duplicate therapy, etc."
    )
    assert inst.rest[0].resource[22].searchParam[1].name == "category"
    assert inst.rest[0].resource[22].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[22].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/detectedissue-implicated"
    )
    assert inst.rest[0].resource[22].searchParam[2].documentation == "Problem resource"
    assert inst.rest[0].resource[22].searchParam[2].name == "implicated"
    assert inst.rest[0].resource[22].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[22].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/detectedissue-patient"
    )
    assert (
        inst.rest[0].resource[22].searchParam[3].documentation == "Associated patient"
    )
    assert inst.rest[0].resource[22].searchParam[3].name == "patient"
    assert inst.rest[0].resource[22].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[22].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/detectedissue-date"
    )
    assert inst.rest[0].resource[22].searchParam[4].documentation == "When identified"
    assert inst.rest[0].resource[22].searchParam[4].name == "date"
    assert inst.rest[0].resource[22].searchParam[4].type == "date"
    assert (
        inst.rest[0].resource[22].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/detectedissue-identifier"
    )
    assert (
        inst.rest[0].resource[22].searchParam[5].documentation
        == "Unique id for the detected issue"
    )
    assert inst.rest[0].resource[22].searchParam[5].name == "identifier"
    assert inst.rest[0].resource[22].searchParam[5].type == "token"
    assert inst.rest[0].resource[22].type == "DetectedIssue"
    assert inst.rest[0].resource[23].conditionalCreate == True
    assert inst.rest[0].resource[23].conditionalDelete == "multiple"
    assert inst.rest[0].resource[23].conditionalUpdate == True
    assert inst.rest[0].resource[23].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[23].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[23].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[23].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[23].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[23].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[23].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[23].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[23].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[23].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[23].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[23].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[23].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[23].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[23].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[23].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[23].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[23].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[23].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Device"
    )
    assert inst.rest[0].resource[23].searchInclude[0] == "Device.organization"
    assert inst.rest[0].resource[23].searchInclude[1] == "Device.patient"
    assert inst.rest[0].resource[23].searchInclude[2] == "Device.location"
    assert (
        inst.rest[0].resource[23].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/device-organization"
    )
    assert (
        inst.rest[0].resource[23].searchParam[0].documentation
        == "The organization responsible for the device"
    )
    assert inst.rest[0].resource[23].searchParam[0].name == "organization"
    assert inst.rest[0].resource[23].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[23].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/device-model"
    )
    assert (
        inst.rest[0].resource[23].searchParam[1].documentation
        == "The model of the device"
    )
    assert inst.rest[0].resource[23].searchParam[1].name == "model"
    assert inst.rest[0].resource[23].searchParam[1].type == "string"
    assert (
        inst.rest[0].resource[23].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/device-patient"
    )
    assert (
        inst.rest[0].resource[23].searchParam[2].documentation
        == "Patient information, if the resource is affixed to a person"
    )
    assert inst.rest[0].resource[23].searchParam[2].name == "patient"
    assert inst.rest[0].resource[23].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[23].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/device-location"
    )
    assert (
        inst.rest[0].resource[23].searchParam[3].documentation
        == "A location, where the resource is found"
    )
    assert inst.rest[0].resource[23].searchParam[3].name == "location"
    assert inst.rest[0].resource[23].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[23].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/device-manufacturer"
    )
    assert (
        inst.rest[0].resource[23].searchParam[4].documentation
        == "The manufacturer of the device"
    )
    assert inst.rest[0].resource[23].searchParam[4].name == "manufacturer"
    assert inst.rest[0].resource[23].searchParam[4].type == "string"
    assert (
        inst.rest[0].resource[23].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/device-udi"
    )
    assert (
        inst.rest[0].resource[23].searchParam[5].documentation
        == "FDA mandated Unique Device Identifier"
    )
    assert inst.rest[0].resource[23].searchParam[5].name == "udi"
    assert inst.rest[0].resource[23].searchParam[5].type == "string"
    assert (
        inst.rest[0].resource[23].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/device-type"
    )
    assert (
        inst.rest[0].resource[23].searchParam[6].documentation
        == "The type of the device"
    )
    assert inst.rest[0].resource[23].searchParam[6].name == "type"
    assert inst.rest[0].resource[23].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[23].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/device-identifier"
    )
    assert (
        inst.rest[0].resource[23].searchParam[7].documentation
        == "Instance id from manufacturer, owner, and others"
    )
    assert inst.rest[0].resource[23].searchParam[7].name == "identifier"
    assert inst.rest[0].resource[23].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[23].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/device-url"
    )
    assert (
        inst.rest[0].resource[23].searchParam[8].documentation
        == "Network address to contact device"
    )
    assert inst.rest[0].resource[23].searchParam[8].name == "url"
    assert inst.rest[0].resource[23].searchParam[8].type == "uri"
    assert inst.rest[0].resource[23].searchRevInclude[0] == "Account.patient"
    assert inst.rest[0].resource[23].searchRevInclude[1] == "Account.subject"
    assert inst.rest[0].resource[23].searchRevInclude[2] == "Appointment.patient"
    assert inst.rest[0].resource[23].searchRevInclude[3] == "Appointment.practitioner"
    assert inst.rest[0].resource[23].searchRevInclude[4] == "Appointment.location"
    assert inst.rest[0].resource[23].searchRevInclude[5] == "Appointment.actor"
    assert (
        inst.rest[0].resource[23].searchRevInclude[6] == "AppointmentResponse.patient"
    )
    assert (
        inst.rest[0].resource[23].searchRevInclude[7]
        == "AppointmentResponse.practitioner"
    )
    assert (
        inst.rest[0].resource[23].searchRevInclude[8] == "AppointmentResponse.location"
    )
    assert inst.rest[0].resource[23].searchRevInclude[9] == "AppointmentResponse.actor"
    assert inst.rest[0].resource[23].searchRevInclude[10] == "AuditEvent.patient"
    assert inst.rest[0].resource[23].searchRevInclude[11] == "AuditEvent.participant"
    assert inst.rest[0].resource[23].searchRevInclude[12] == "Communication.sender"
    assert inst.rest[0].resource[23].searchRevInclude[13] == "Communication.recipient"
    assert (
        inst.rest[0].resource[23].searchRevInclude[14] == "CommunicationRequest.sender"
    )
    assert (
        inst.rest[0].resource[23].searchRevInclude[15]
        == "CommunicationRequest.recipient"
    )
    assert inst.rest[0].resource[23].searchRevInclude[16] == "Composition.author"
    assert inst.rest[0].resource[23].searchRevInclude[17] == "Contract.actor"
    assert inst.rest[0].resource[23].searchRevInclude[18] == "DetectedIssue.author"
    assert inst.rest[0].resource[23].searchRevInclude[19] == "DeviceComponent.source"
    assert inst.rest[0].resource[23].searchRevInclude[20] == "DeviceMetric.source"
    assert inst.rest[0].resource[23].searchRevInclude[21] == "DeviceUseRequest.device"
    assert inst.rest[0].resource[23].searchRevInclude[22] == "DeviceUseStatement.device"
    assert inst.rest[0].resource[23].searchRevInclude[23] == "DiagnosticOrder.subject"
    assert inst.rest[0].resource[23].searchRevInclude[24] == "DiagnosticOrder.actor"
    assert inst.rest[0].resource[23].searchRevInclude[25] == "DiagnosticOrder.patient"
    assert inst.rest[0].resource[23].searchRevInclude[26] == "DiagnosticReport.subject"
    assert inst.rest[0].resource[23].searchRevInclude[27] == "DiagnosticReport.patient"
    assert inst.rest[0].resource[23].searchRevInclude[28] == "DocumentManifest.subject"
    assert inst.rest[0].resource[23].searchRevInclude[29] == "DocumentManifest.author"
    assert inst.rest[0].resource[23].searchRevInclude[30] == "DocumentManifest.patient"
    assert inst.rest[0].resource[23].searchRevInclude[31] == "DocumentReference.subject"
    assert inst.rest[0].resource[23].searchRevInclude[32] == "DocumentReference.author"
    assert inst.rest[0].resource[23].searchRevInclude[33] == "DocumentReference.patient"
    assert inst.rest[0].resource[23].searchRevInclude[34] == "Flag.author"
    assert inst.rest[0].resource[23].searchRevInclude[35] == "Group.member"
    assert (
        inst.rest[0].resource[23].searchRevInclude[36]
        == "ImagingObjectSelection.author"
    )
    assert inst.rest[0].resource[23].searchRevInclude[37] == "List.patient"
    assert inst.rest[0].resource[23].searchRevInclude[38] == "List.source"
    assert inst.rest[0].resource[23].searchRevInclude[39] == "List.subject"
    assert inst.rest[0].resource[23].searchRevInclude[40] == "Media.patient"
    assert inst.rest[0].resource[23].searchRevInclude[41] == "Media.subject"
    assert (
        inst.rest[0].resource[23].searchRevInclude[42]
        == "MedicationAdministration.device"
    )
    assert inst.rest[0].resource[23].searchRevInclude[43] == "MessageHeader.target"
    assert inst.rest[0].resource[23].searchRevInclude[44] == "Observation.subject"
    assert inst.rest[0].resource[23].searchRevInclude[45] == "Observation.patient"
    assert inst.rest[0].resource[23].searchRevInclude[46] == "Observation.device"
    assert inst.rest[0].resource[23].searchRevInclude[47] == "Order.patient"
    assert inst.rest[0].resource[23].searchRevInclude[48] == "Order.subject"
    assert inst.rest[0].resource[23].searchRevInclude[49] == "Order.target"
    assert inst.rest[0].resource[23].searchRevInclude[50] == "OrderResponse.who"
    assert inst.rest[0].resource[23].searchRevInclude[51] == "ProcedureRequest.orderer"
    assert inst.rest[0].resource[23].searchRevInclude[52] == "Provenance.agent"
    assert (
        inst.rest[0].resource[23].searchRevInclude[53] == "QuestionnaireResponse.author"
    )
    assert inst.rest[0].resource[23].searchRevInclude[54] == "RiskAssessment.performer"
    assert inst.rest[0].resource[23].searchRevInclude[55] == "Schedule.actor"
    assert inst.rest[0].resource[23].searchRevInclude[56] == "Specimen.patient"
    assert inst.rest[0].resource[23].searchRevInclude[57] == "Specimen.subject"
    assert inst.rest[0].resource[23].type == "Device"
    assert inst.rest[0].resource[24].conditionalCreate == True
    assert inst.rest[0].resource[24].conditionalDelete == "multiple"
    assert inst.rest[0].resource[24].conditionalUpdate == True
    assert inst.rest[0].resource[24].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[24].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[24].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[24].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[24].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[24].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[24].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[24].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[24].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[24].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[24].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[24].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[24].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[24].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[24].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[24].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[24].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[24].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[24].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/DeviceComponent"
    )
    assert inst.rest[0].resource[24].searchInclude[0] == "DeviceComponent.source"
    assert inst.rest[0].resource[24].searchInclude[1] == "DeviceComponent.parent"
    assert (
        inst.rest[0].resource[24].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/devicecomponent-source"
    )
    assert inst.rest[0].resource[24].searchParam[0].documentation == "The device source"
    assert inst.rest[0].resource[24].searchParam[0].name == "source"
    assert inst.rest[0].resource[24].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[24].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/devicecomponent-parent"
    )
    assert (
        inst.rest[0].resource[24].searchParam[1].documentation
        == "The parent DeviceComponent resource"
    )
    assert inst.rest[0].resource[24].searchParam[1].name == "parent"
    assert inst.rest[0].resource[24].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[24].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/devicecomponent-type"
    )
    assert (
        inst.rest[0].resource[24].searchParam[2].documentation
        == "The device component type"
    )
    assert inst.rest[0].resource[24].searchParam[2].name == "type"
    assert inst.rest[0].resource[24].searchParam[2].type == "token"
    assert inst.rest[0].resource[24].searchRevInclude[0] == "DeviceComponent.parent"
    assert inst.rest[0].resource[24].searchRevInclude[1] == "DeviceMetric.parent"
    assert inst.rest[0].resource[24].type == "DeviceComponent"
    assert inst.rest[0].resource[25].conditionalCreate == True
    assert inst.rest[0].resource[25].conditionalDelete == "multiple"
    assert inst.rest[0].resource[25].conditionalUpdate == True
    assert inst.rest[0].resource[25].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[25].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[25].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[25].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[25].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[25].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[25].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[25].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[25].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[25].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[25].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[25].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[25].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[25].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[25].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[25].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[25].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[25].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[25].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/DeviceMetric"
    )
    assert inst.rest[0].resource[25].searchInclude[0] == "DeviceMetric.source"
    assert inst.rest[0].resource[25].searchInclude[1] == "DeviceMetric.parent"
    assert (
        inst.rest[0].resource[25].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/devicemetric-category"
    )
    assert (
        inst.rest[0].resource[25].searchParam[0].documentation
        == "The category of the metric"
    )
    assert inst.rest[0].resource[25].searchParam[0].name == "category"
    assert inst.rest[0].resource[25].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[25].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/devicemetric-source"
    )
    assert (
        inst.rest[0].resource[25].searchParam[1].documentation == "The device resource"
    )
    assert inst.rest[0].resource[25].searchParam[1].name == "source"
    assert inst.rest[0].resource[25].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[25].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/devicemetric-parent"
    )
    assert (
        inst.rest[0].resource[25].searchParam[2].documentation
        == "The parent DeviceMetric resource"
    )
    assert inst.rest[0].resource[25].searchParam[2].name == "parent"
    assert inst.rest[0].resource[25].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[25].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/devicemetric-type"
    )
    assert (
        inst.rest[0].resource[25].searchParam[3].documentation == "The component type"
    )
    assert inst.rest[0].resource[25].searchParam[3].name == "type"
    assert inst.rest[0].resource[25].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[25].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/devicemetric-identifier"
    )
    assert (
        inst.rest[0].resource[25].searchParam[4].documentation
        == "The identifier of the metric"
    )
    assert inst.rest[0].resource[25].searchParam[4].name == "identifier"
    assert inst.rest[0].resource[25].searchParam[4].type == "token"
    assert inst.rest[0].resource[25].searchRevInclude[0] == "Observation.device"
    assert inst.rest[0].resource[25].type == "DeviceMetric"
    assert inst.rest[0].resource[26].conditionalCreate == True
    assert inst.rest[0].resource[26].conditionalDelete == "multiple"
    assert inst.rest[0].resource[26].conditionalUpdate == True
    assert inst.rest[0].resource[26].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[26].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[26].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[26].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[26].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[26].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[26].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[26].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[26].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[26].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[26].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[26].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[26].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[26].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[26].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[26].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[26].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[26].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[26].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/DeviceUseRequest"
    )
    assert inst.rest[0].resource[26].searchInclude[0] == "DeviceUseRequest.patient"
    assert inst.rest[0].resource[26].searchInclude[1] == "DeviceUseRequest.subject"
    assert inst.rest[0].resource[26].searchInclude[2] == "DeviceUseRequest.device"
    assert (
        inst.rest[0].resource[26].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/deviceuserequest-patient"
    )
    assert (
        inst.rest[0].resource[26].searchParam[0].documentation
        == "Search by subject - a patient"
    )
    assert inst.rest[0].resource[26].searchParam[0].name == "patient"
    assert inst.rest[0].resource[26].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[26].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/deviceuserequest-subject"
    )
    assert inst.rest[0].resource[26].searchParam[1].documentation == "Search by subject"
    assert inst.rest[0].resource[26].searchParam[1].name == "subject"
    assert inst.rest[0].resource[26].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[26].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/deviceuserequest-device"
    )
    assert inst.rest[0].resource[26].searchParam[2].documentation == "Device requested"
    assert inst.rest[0].resource[26].searchParam[2].name == "device"
    assert inst.rest[0].resource[26].searchParam[2].type == "reference"
    assert inst.rest[0].resource[26].searchRevInclude[0] == "CarePlan.activityreference"
    assert inst.rest[0].resource[26].searchRevInclude[1] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[26].type == "DeviceUseRequest"
    assert inst.rest[0].resource[27].conditionalCreate == True
    assert inst.rest[0].resource[27].conditionalDelete == "multiple"
    assert inst.rest[0].resource[27].conditionalUpdate == True
    assert inst.rest[0].resource[27].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[27].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[27].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[27].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[27].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[27].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[27].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[27].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[27].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[27].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[27].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[27].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[27].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[27].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[27].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[27].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[27].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[27].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[27].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/DeviceUseStatement"
    )
    assert inst.rest[0].resource[27].searchInclude[0] == "DeviceUseStatement.patient"
    assert inst.rest[0].resource[27].searchInclude[1] == "DeviceUseStatement.subject"
    assert inst.rest[0].resource[27].searchInclude[2] == "DeviceUseStatement.device"
    assert (
        inst.rest[0].resource[27].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/deviceusestatement-patient"
    )
    assert (
        inst.rest[0].resource[27].searchParam[0].documentation
        == "Search by subject - a patient"
    )
    assert inst.rest[0].resource[27].searchParam[0].name == "patient"
    assert inst.rest[0].resource[27].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[27].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/deviceusestatement-subject"
    )
    assert inst.rest[0].resource[27].searchParam[1].documentation == "Search by subject"
    assert inst.rest[0].resource[27].searchParam[1].name == "subject"
    assert inst.rest[0].resource[27].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[27].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/deviceusestatement-device"
    )
    assert inst.rest[0].resource[27].searchParam[2].documentation == "Search by device"
    assert inst.rest[0].resource[27].searchParam[2].name == "device"
    assert inst.rest[0].resource[27].searchParam[2].type == "reference"
    assert inst.rest[0].resource[27].type == "DeviceUseStatement"
    assert inst.rest[0].resource[28].conditionalCreate == True
    assert inst.rest[0].resource[28].conditionalDelete == "multiple"
    assert inst.rest[0].resource[28].conditionalUpdate == True
    assert inst.rest[0].resource[28].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[28].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[28].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[28].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[28].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[28].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[28].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[28].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[28].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[28].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[28].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[28].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[28].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[28].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[28].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[28].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[28].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[28].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[28].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/DiagnosticOrder"
    )
    assert inst.rest[0].resource[28].searchInclude[0] == "DiagnosticOrder.orderer"
    assert inst.rest[0].resource[28].searchInclude[1] == "DiagnosticOrder.subject"
    assert inst.rest[0].resource[28].searchInclude[2] == "DiagnosticOrder.actor"
    assert inst.rest[0].resource[28].searchInclude[3] == "DiagnosticOrder.encounter"
    assert inst.rest[0].resource[28].searchInclude[4] == "DiagnosticOrder.patient"
    assert inst.rest[0].resource[28].searchInclude[5] == "DiagnosticOrder.specimen"
    assert (
        inst.rest[0].resource[28].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-orderer"
    )
    assert (
        inst.rest[0].resource[28].searchParam[0].documentation == "Who ordered the test"
    )
    assert inst.rest[0].resource[28].searchParam[0].name == "orderer"
    assert inst.rest[0].resource[28].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[28].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-status"
    )
    assert (
        inst.rest[0].resource[28].searchParam[1].documentation
        == "proposed | draft | planned | requested | received | accepted | in-progress | review | completed | cancelled | suspended | rejected | failed"
    )
    assert inst.rest[0].resource[28].searchParam[1].name == "status"
    assert inst.rest[0].resource[28].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[28].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-subject"
    )
    assert (
        inst.rest[0].resource[28].searchParam[2].documentation
        == "Who and/or what test is about"
    )
    assert inst.rest[0].resource[28].searchParam[2].name == "subject"
    assert inst.rest[0].resource[28].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[28].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-item-status"
    )
    assert (
        inst.rest[0].resource[28].searchParam[3].documentation
        == "proposed | draft | planned | requested | received | accepted | in-progress | review | completed | cancelled | suspended | rejected | failed"
    )
    assert inst.rest[0].resource[28].searchParam[3].name == "item-status"
    assert inst.rest[0].resource[28].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[28].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-event-status"
    )
    assert (
        inst.rest[0].resource[28].searchParam[4].documentation
        == "proposed | draft | planned | requested | received | accepted | in-progress | review | completed | cancelled | suspended | rejected | failed"
    )
    assert inst.rest[0].resource[28].searchParam[4].name == "event-status"
    assert inst.rest[0].resource[28].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[28].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-actor"
    )
    assert (
        inst.rest[0].resource[28].searchParam[5].documentation
        == "Who recorded or did this"
    )
    assert inst.rest[0].resource[28].searchParam[5].name == "actor"
    assert inst.rest[0].resource[28].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[28].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-code"
    )
    assert (
        inst.rest[0].resource[28].searchParam[6].documentation
        == "Code to indicate the item (test or panel) being ordered"
    )
    assert inst.rest[0].resource[28].searchParam[6].name == "code"
    assert inst.rest[0].resource[28].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[28].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-encounter"
    )
    assert (
        inst.rest[0].resource[28].searchParam[7].documentation
        == "The encounter that this diagnostic order is associated with"
    )
    assert inst.rest[0].resource[28].searchParam[7].name == "encounter"
    assert inst.rest[0].resource[28].searchParam[7].type == "reference"
    assert (
        inst.rest[0].resource[28].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-item-past-status"
    )
    assert (
        inst.rest[0].resource[28].searchParam[8].documentation
        == "proposed | draft | planned | requested | received | accepted | in-progress | review | completed | cancelled | suspended | rejected | failed"
    )
    assert inst.rest[0].resource[28].searchParam[8].name == "item-past-status"
    assert inst.rest[0].resource[28].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[28].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-patient"
    )
    assert (
        inst.rest[0].resource[28].searchParam[9].documentation
        == "Who and/or what test is about"
    )
    assert inst.rest[0].resource[28].searchParam[9].name == "patient"
    assert inst.rest[0].resource[28].searchParam[9].type == "reference"
    assert (
        inst.rest[0].resource[28].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-bodysite"
    )
    assert (
        inst.rest[0].resource[28].searchParam[10].documentation
        == "Location of requested test (if applicable)"
    )
    assert inst.rest[0].resource[28].searchParam[10].name == "bodysite"
    assert inst.rest[0].resource[28].searchParam[10].type == "token"
    assert (
        inst.rest[0].resource[28].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-item-date"
    )
    assert (
        inst.rest[0].resource[28].searchParam[11].documentation
        == "The date at which the event happened"
    )
    assert inst.rest[0].resource[28].searchParam[11].name == "item-date"
    assert inst.rest[0].resource[28].searchParam[11].type == "date"
    assert (
        inst.rest[0].resource[28].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-specimen"
    )
    assert (
        inst.rest[0].resource[28].searchParam[12].documentation
        == "If the whole order relates to specific specimens"
    )
    assert inst.rest[0].resource[28].searchParam[12].name == "specimen"
    assert inst.rest[0].resource[28].searchParam[12].type == "reference"
    assert (
        inst.rest[0].resource[28].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-event-status-date"
    )
    assert (
        inst.rest[0].resource[28].searchParam[13].documentation
        == "A combination of past-status and date"
    )
    assert inst.rest[0].resource[28].searchParam[13].name == "event-status-date"
    assert inst.rest[0].resource[28].searchParam[13].type == "composite"
    assert (
        inst.rest[0].resource[28].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-event-date"
    )
    assert (
        inst.rest[0].resource[28].searchParam[14].documentation
        == "The date at which the event happened"
    )
    assert inst.rest[0].resource[28].searchParam[14].name == "event-date"
    assert inst.rest[0].resource[28].searchParam[14].type == "date"
    assert (
        inst.rest[0].resource[28].searchParam[15].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-identifier"
    )
    assert (
        inst.rest[0].resource[28].searchParam[15].documentation
        == "Identifiers assigned to this order"
    )
    assert inst.rest[0].resource[28].searchParam[15].name == "identifier"
    assert inst.rest[0].resource[28].searchParam[15].type == "token"
    assert (
        inst.rest[0].resource[28].searchParam[16].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticorder-item-status-date"
    )
    assert (
        inst.rest[0].resource[28].searchParam[16].documentation
        == "A combination of item-past-status and item-date"
    )
    assert inst.rest[0].resource[28].searchParam[16].name == "item-status-date"
    assert inst.rest[0].resource[28].searchParam[16].type == "composite"
    assert inst.rest[0].resource[28].searchRevInclude[0] == "CarePlan.activityreference"
    assert inst.rest[0].resource[28].searchRevInclude[1] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[28].searchRevInclude[2] == "ClinicalImpression.action"
    assert inst.rest[0].resource[28].searchRevInclude[3] == "DiagnosticReport.request"
    assert inst.rest[0].resource[28].searchRevInclude[4] == "ImagingStudy.order"
    assert inst.rest[0].resource[28].type == "DiagnosticOrder"
    assert inst.rest[0].resource[29].conditionalCreate == True
    assert inst.rest[0].resource[29].conditionalDelete == "multiple"
    assert inst.rest[0].resource[29].conditionalUpdate == True
    assert inst.rest[0].resource[29].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[29].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[29].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[29].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[29].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[29].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[29].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[29].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[29].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[29].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[29].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[29].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[29].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[29].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[29].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[29].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[29].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[29].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[29].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/DiagnosticReport"
    )
    assert inst.rest[0].resource[29].searchInclude[0] == "DiagnosticReport.result"
    assert inst.rest[0].resource[29].searchInclude[1] == "DiagnosticReport.subject"
    assert inst.rest[0].resource[29].searchInclude[2] == "DiagnosticReport.image"
    assert inst.rest[0].resource[29].searchInclude[3] == "DiagnosticReport.encounter"
    assert inst.rest[0].resource[29].searchInclude[4] == "DiagnosticReport.patient"
    assert inst.rest[0].resource[29].searchInclude[5] == "DiagnosticReport.request"
    assert inst.rest[0].resource[29].searchInclude[6] == "DiagnosticReport.specimen"
    assert inst.rest[0].resource[29].searchInclude[7] == "DiagnosticReport.performer"
    assert (
        inst.rest[0].resource[29].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-result"
    )
    assert (
        inst.rest[0].resource[29].searchParam[0].documentation
        == "Link to an atomic result (observation resource)"
    )
    assert inst.rest[0].resource[29].searchParam[0].name == "result"
    assert inst.rest[0].resource[29].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[29].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-status"
    )
    assert (
        inst.rest[0].resource[29].searchParam[1].documentation
        == "The status of the report"
    )
    assert inst.rest[0].resource[29].searchParam[1].name == "status"
    assert inst.rest[0].resource[29].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[29].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-subject"
    )
    assert (
        inst.rest[0].resource[29].searchParam[2].documentation
        == "The subject of the report"
    )
    assert inst.rest[0].resource[29].searchParam[2].name == "subject"
    assert inst.rest[0].resource[29].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[29].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-issued"
    )
    assert (
        inst.rest[0].resource[29].searchParam[3].documentation
        == "When the report was issued"
    )
    assert inst.rest[0].resource[29].searchParam[3].name == "issued"
    assert inst.rest[0].resource[29].searchParam[3].type == "date"
    assert (
        inst.rest[0].resource[29].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-diagnosis"
    )
    assert (
        inst.rest[0].resource[29].searchParam[4].documentation
        == "A coded diagnosis on the report"
    )
    assert inst.rest[0].resource[29].searchParam[4].name == "diagnosis"
    assert inst.rest[0].resource[29].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[29].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-image"
    )
    assert (
        inst.rest[0].resource[29].searchParam[5].documentation
        == "A reference to the image source."
    )
    assert inst.rest[0].resource[29].searchParam[5].name == "image"
    assert inst.rest[0].resource[29].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[29].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-encounter"
    )
    assert (
        inst.rest[0].resource[29].searchParam[6].documentation
        == "The Encounter when the order was made"
    )
    assert inst.rest[0].resource[29].searchParam[6].name == "encounter"
    assert inst.rest[0].resource[29].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[29].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-code"
    )
    assert (
        inst.rest[0].resource[29].searchParam[7].documentation
        == "The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result"
    )
    assert inst.rest[0].resource[29].searchParam[7].name == "code"
    assert inst.rest[0].resource[29].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[29].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-date"
    )
    assert (
        inst.rest[0].resource[29].searchParam[8].documentation
        == "The clinically relevant time of the report"
    )
    assert inst.rest[0].resource[29].searchParam[8].name == "date"
    assert inst.rest[0].resource[29].searchParam[8].type == "date"
    assert (
        inst.rest[0].resource[29].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-category"
    )
    assert (
        inst.rest[0].resource[29].searchParam[9].documentation
        == "Which diagnostic discipline/department created the report"
    )
    assert inst.rest[0].resource[29].searchParam[9].name == "category"
    assert inst.rest[0].resource[29].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[29].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-patient"
    )
    assert (
        inst.rest[0].resource[29].searchParam[10].documentation
        == "The subject of the report if a patient"
    )
    assert inst.rest[0].resource[29].searchParam[10].name == "patient"
    assert inst.rest[0].resource[29].searchParam[10].type == "reference"
    assert (
        inst.rest[0].resource[29].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-request"
    )
    assert (
        inst.rest[0].resource[29].searchParam[11].documentation
        == "Reference to the test or procedure request."
    )
    assert inst.rest[0].resource[29].searchParam[11].name == "request"
    assert inst.rest[0].resource[29].searchParam[11].type == "reference"
    assert (
        inst.rest[0].resource[29].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-specimen"
    )
    assert (
        inst.rest[0].resource[29].searchParam[12].documentation
        == "The specimen details"
    )
    assert inst.rest[0].resource[29].searchParam[12].name == "specimen"
    assert inst.rest[0].resource[29].searchParam[12].type == "reference"
    assert (
        inst.rest[0].resource[29].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-performer"
    )
    assert (
        inst.rest[0].resource[29].searchParam[13].documentation
        == "Who was the source of the report (organization)"
    )
    assert inst.rest[0].resource[29].searchParam[13].name == "performer"
    assert inst.rest[0].resource[29].searchParam[13].type == "reference"
    assert (
        inst.rest[0].resource[29].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/diagnosticreport-identifier"
    )
    assert (
        inst.rest[0].resource[29].searchParam[14].documentation
        == "An identifier for the report"
    )
    assert inst.rest[0].resource[29].searchParam[14].name == "identifier"
    assert inst.rest[0].resource[29].searchParam[14].type == "token"
    assert (
        inst.rest[0].resource[29].searchRevInclude[0]
        == "ClinicalImpression.investigation"
    )
    assert inst.rest[0].resource[29].type == "DiagnosticReport"
    assert inst.rest[0].resource[30].conditionalCreate == True
    assert inst.rest[0].resource[30].conditionalDelete == "multiple"
    assert inst.rest[0].resource[30].conditionalUpdate == True
    assert inst.rest[0].resource[30].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[30].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[30].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[30].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[30].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[30].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[30].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[30].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[30].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[30].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[30].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[30].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[30].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[30].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[30].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[30].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[30].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[30].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[30].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/DocumentManifest"
    )
    assert inst.rest[0].resource[30].searchInclude[0] == "DocumentManifest.related-ref"
    assert inst.rest[0].resource[30].searchInclude[1] == "DocumentManifest.content-ref"
    assert inst.rest[0].resource[30].searchInclude[2] == "DocumentManifest.subject"
    assert inst.rest[0].resource[30].searchInclude[3] == "DocumentManifest.recipient"
    assert inst.rest[0].resource[30].searchInclude[4] == "DocumentManifest.author"
    assert inst.rest[0].resource[30].searchInclude[5] == "DocumentManifest.patient"
    assert (
        inst.rest[0].resource[30].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/documentmanifest-related-ref"
    )
    assert inst.rest[0].resource[30].searchParam[0].documentation == "Related Resource"
    assert inst.rest[0].resource[30].searchParam[0].name == "related-ref"
    assert inst.rest[0].resource[30].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[30].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/documentmanifest-related-id"
    )
    assert (
        inst.rest[0].resource[30].searchParam[1].documentation
        == "Identifiers of things that are related"
    )
    assert inst.rest[0].resource[30].searchParam[1].name == "related-id"
    assert inst.rest[0].resource[30].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[30].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/documentmanifest-content-ref"
    )
    assert (
        inst.rest[0].resource[30].searchParam[2].documentation
        == "Contents of this set of documents"
    )
    assert inst.rest[0].resource[30].searchParam[2].name == "content-ref"
    assert inst.rest[0].resource[30].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[30].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/documentmanifest-status"
    )
    assert (
        inst.rest[0].resource[30].searchParam[3].documentation
        == "current | superseded | entered-in-error"
    )
    assert inst.rest[0].resource[30].searchParam[3].name == "status"
    assert inst.rest[0].resource[30].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[30].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/documentmanifest-subject"
    )
    assert (
        inst.rest[0].resource[30].searchParam[4].documentation
        == "The subject of the set of documents"
    )
    assert inst.rest[0].resource[30].searchParam[4].name == "subject"
    assert inst.rest[0].resource[30].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[30].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/documentmanifest-type"
    )
    assert (
        inst.rest[0].resource[30].searchParam[5].documentation == "Kind of document set"
    )
    assert inst.rest[0].resource[30].searchParam[5].name == "type"
    assert inst.rest[0].resource[30].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[30].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/documentmanifest-recipient"
    )
    assert (
        inst.rest[0].resource[30].searchParam[6].documentation
        == "Intended to get notified about this set of documents"
    )
    assert inst.rest[0].resource[30].searchParam[6].name == "recipient"
    assert inst.rest[0].resource[30].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[30].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/documentmanifest-author"
    )
    assert (
        inst.rest[0].resource[30].searchParam[7].documentation
        == "Who and/or what authored the manifest"
    )
    assert inst.rest[0].resource[30].searchParam[7].name == "author"
    assert inst.rest[0].resource[30].searchParam[7].type == "reference"
    assert (
        inst.rest[0].resource[30].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/documentmanifest-patient"
    )
    assert (
        inst.rest[0].resource[30].searchParam[8].documentation
        == "The subject of the set of documents"
    )
    assert inst.rest[0].resource[30].searchParam[8].name == "patient"
    assert inst.rest[0].resource[30].searchParam[8].type == "reference"
    assert (
        inst.rest[0].resource[30].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/documentmanifest-source"
    )
    assert (
        inst.rest[0].resource[30].searchParam[9].documentation
        == "The source system/application/software"
    )
    assert inst.rest[0].resource[30].searchParam[9].name == "source"
    assert inst.rest[0].resource[30].searchParam[9].type == "uri"
    assert (
        inst.rest[0].resource[30].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/documentmanifest-created"
    )
    assert (
        inst.rest[0].resource[30].searchParam[10].documentation
        == "When this document manifest created"
    )
    assert inst.rest[0].resource[30].searchParam[10].name == "created"
    assert inst.rest[0].resource[30].searchParam[10].type == "date"
    assert (
        inst.rest[0].resource[30].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/documentmanifest-description"
    )
    assert (
        inst.rest[0].resource[30].searchParam[11].documentation
        == "Human-readable description (title)"
    )
    assert inst.rest[0].resource[30].searchParam[11].name == "description"
    assert inst.rest[0].resource[30].searchParam[11].type == "string"
    assert (
        inst.rest[0].resource[30].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/documentmanifest-identifier"
    )
    assert (
        inst.rest[0].resource[30].searchParam[12].documentation
        == "Unique Identifier for the set of documents"
    )
    assert inst.rest[0].resource[30].searchParam[12].name == "identifier"
    assert inst.rest[0].resource[30].searchParam[12].type == "token"
    assert inst.rest[0].resource[30].type == "DocumentManifest"
    assert inst.rest[0].resource[31].conditionalCreate == True
    assert inst.rest[0].resource[31].conditionalDelete == "multiple"
    assert inst.rest[0].resource[31].conditionalUpdate == True
    assert inst.rest[0].resource[31].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[31].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[31].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[31].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[31].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[31].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[31].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[31].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[31].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[31].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[31].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[31].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[31].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[31].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[31].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[31].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[31].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[31].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[31].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/DocumentReference"
    )
    assert inst.rest[0].resource[31].searchInclude[0] == "DocumentReference.related-ref"
    assert inst.rest[0].resource[31].searchInclude[1] == "DocumentReference.relatesto"
    assert inst.rest[0].resource[31].searchInclude[2] == "DocumentReference.subject"
    assert inst.rest[0].resource[31].searchInclude[3] == "DocumentReference.encounter"
    assert inst.rest[0].resource[31].searchInclude[4] == "DocumentReference.author"
    assert inst.rest[0].resource[31].searchInclude[5] == "DocumentReference.custodian"
    assert inst.rest[0].resource[31].searchInclude[6] == "DocumentReference.patient"
    assert (
        inst.rest[0].resource[31].searchInclude[7] == "DocumentReference.authenticator"
    )
    assert (
        inst.rest[0].resource[31].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-related-ref"
    )
    assert inst.rest[0].resource[31].searchParam[0].documentation == "Related Resource"
    assert inst.rest[0].resource[31].searchParam[0].name == "related-ref"
    assert inst.rest[0].resource[31].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[31].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-related-id"
    )
    assert (
        inst.rest[0].resource[31].searchParam[1].documentation
        == "Identifier of related objects or events"
    )
    assert inst.rest[0].resource[31].searchParam[1].name == "related-id"
    assert inst.rest[0].resource[31].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[31].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-indexed"
    )
    assert (
        inst.rest[0].resource[31].searchParam[2].documentation
        == "When this document reference created"
    )
    assert inst.rest[0].resource[31].searchParam[2].name == "indexed"
    assert inst.rest[0].resource[31].searchParam[2].type == "date"
    assert (
        inst.rest[0].resource[31].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-location"
    )
    assert (
        inst.rest[0].resource[31].searchParam[3].documentation
        == "Uri where the data can be found"
    )
    assert inst.rest[0].resource[31].searchParam[3].name == "location"
    assert inst.rest[0].resource[31].searchParam[3].type == "uri"
    assert (
        inst.rest[0].resource[31].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-relatesto"
    )
    assert (
        inst.rest[0].resource[31].searchParam[4].documentation
        == "Target of the relationship"
    )
    assert inst.rest[0].resource[31].searchParam[4].name == "relatesto"
    assert inst.rest[0].resource[31].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[31].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-subject"
    )
    assert (
        inst.rest[0].resource[31].searchParam[5].documentation
        == "Who/what is the subject of the document"
    )
    assert inst.rest[0].resource[31].searchParam[5].name == "subject"
    assert inst.rest[0].resource[31].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[31].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-encounter"
    )
    assert (
        inst.rest[0].resource[31].searchParam[6].documentation
        == "Context of the document  content"
    )
    assert inst.rest[0].resource[31].searchParam[6].name == "encounter"
    assert inst.rest[0].resource[31].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[31].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-type"
    )
    assert (
        inst.rest[0].resource[31].searchParam[7].documentation
        == "Kind of document (LOINC if possible)"
    )
    assert inst.rest[0].resource[31].searchParam[7].name == "type"
    assert inst.rest[0].resource[31].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[31].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-securitylabel"
    )
    assert (
        inst.rest[0].resource[31].searchParam[8].documentation
        == "Document security-tags"
    )
    assert inst.rest[0].resource[31].searchParam[8].name == "securitylabel"
    assert inst.rest[0].resource[31].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[31].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-setting"
    )
    assert (
        inst.rest[0].resource[31].searchParam[9].documentation
        == "Additional details about where the content was created (e.g. clinical specialty)"
    )
    assert inst.rest[0].resource[31].searchParam[9].name == "setting"
    assert inst.rest[0].resource[31].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[31].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-author"
    )
    assert (
        inst.rest[0].resource[31].searchParam[10].documentation
        == "Who and/or what authored the document"
    )
    assert inst.rest[0].resource[31].searchParam[10].name == "author"
    assert inst.rest[0].resource[31].searchParam[10].type == "reference"
    assert (
        inst.rest[0].resource[31].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-custodian"
    )
    assert (
        inst.rest[0].resource[31].searchParam[11].documentation
        == "Organization which maintains the document"
    )
    assert inst.rest[0].resource[31].searchParam[11].name == "custodian"
    assert inst.rest[0].resource[31].searchParam[11].type == "reference"
    assert (
        inst.rest[0].resource[31].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-patient"
    )
    assert (
        inst.rest[0].resource[31].searchParam[12].documentation
        == "Who/what is the subject of the document"
    )
    assert inst.rest[0].resource[31].searchParam[12].name == "patient"
    assert inst.rest[0].resource[31].searchParam[12].type == "reference"
    assert (
        inst.rest[0].resource[31].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-facility"
    )
    assert (
        inst.rest[0].resource[31].searchParam[13].documentation
        == "Kind of facility where patient was seen"
    )
    assert inst.rest[0].resource[31].searchParam[13].name == "facility"
    assert inst.rest[0].resource[31].searchParam[13].type == "token"
    assert (
        inst.rest[0].resource[31].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-created"
    )
    assert (
        inst.rest[0].resource[31].searchParam[14].documentation
        == "Document creation time"
    )
    assert inst.rest[0].resource[31].searchParam[14].name == "created"
    assert inst.rest[0].resource[31].searchParam[14].type == "date"
    assert (
        inst.rest[0].resource[31].searchParam[15].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-description"
    )
    assert (
        inst.rest[0].resource[31].searchParam[15].documentation
        == "Human-readable description (title)"
    )
    assert inst.rest[0].resource[31].searchParam[15].name == "description"
    assert inst.rest[0].resource[31].searchParam[15].type == "string"
    assert (
        inst.rest[0].resource[31].searchParam[16].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-event"
    )
    assert (
        inst.rest[0].resource[31].searchParam[16].documentation
        == "Main Clinical Acts Documented"
    )
    assert inst.rest[0].resource[31].searchParam[16].name == "event"
    assert inst.rest[0].resource[31].searchParam[16].type == "token"
    assert (
        inst.rest[0].resource[31].searchParam[17].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-status"
    )
    assert (
        inst.rest[0].resource[31].searchParam[17].documentation
        == "current | superseded | entered-in-error"
    )
    assert inst.rest[0].resource[31].searchParam[17].name == "status"
    assert inst.rest[0].resource[31].searchParam[17].type == "token"
    assert (
        inst.rest[0].resource[31].searchParam[18].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-relation"
    )
    assert (
        inst.rest[0].resource[31].searchParam[18].documentation
        == "replaces | transforms | signs | appends"
    )
    assert inst.rest[0].resource[31].searchParam[18].name == "relation"
    assert inst.rest[0].resource[31].searchParam[18].type == "token"
    assert (
        inst.rest[0].resource[31].searchParam[19].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-class"
    )
    assert (
        inst.rest[0].resource[31].searchParam[19].documentation
        == "Categorization of document"
    )
    assert inst.rest[0].resource[31].searchParam[19].name == "class"
    assert inst.rest[0].resource[31].searchParam[19].type == "token"
    assert (
        inst.rest[0].resource[31].searchParam[20].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-format"
    )
    assert (
        inst.rest[0].resource[31].searchParam[20].documentation
        == "Format/content rules for the document"
    )
    assert inst.rest[0].resource[31].searchParam[20].name == "format"
    assert inst.rest[0].resource[31].searchParam[20].type == "token"
    assert (
        inst.rest[0].resource[31].searchParam[21].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-period"
    )
    assert (
        inst.rest[0].resource[31].searchParam[21].documentation
        == "Time of service that is being documented"
    )
    assert inst.rest[0].resource[31].searchParam[21].name == "period"
    assert inst.rest[0].resource[31].searchParam[21].type == "date"
    assert (
        inst.rest[0].resource[31].searchParam[22].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-authenticator"
    )
    assert (
        inst.rest[0].resource[31].searchParam[22].documentation
        == "Who/what authenticated the document"
    )
    assert inst.rest[0].resource[31].searchParam[22].name == "authenticator"
    assert inst.rest[0].resource[31].searchParam[22].type == "reference"
    assert (
        inst.rest[0].resource[31].searchParam[23].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-relationship"
    )
    assert (
        inst.rest[0].resource[31].searchParam[23].documentation
        == "Combination of relation and relatesTo"
    )
    assert inst.rest[0].resource[31].searchParam[23].name == "relationship"
    assert inst.rest[0].resource[31].searchParam[23].type == "composite"
    assert (
        inst.rest[0].resource[31].searchParam[24].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-language"
    )
    assert (
        inst.rest[0].resource[31].searchParam[24].documentation
        == "Human language of the content (BCP-47)"
    )
    assert inst.rest[0].resource[31].searchParam[24].name == "language"
    assert inst.rest[0].resource[31].searchParam[24].type == "token"
    assert (
        inst.rest[0].resource[31].searchParam[25].definition
        == "http://hl7.org/fhir/SearchParameter/documentreference-identifier"
    )
    assert (
        inst.rest[0].resource[31].searchParam[25].documentation
        == "Master Version Specific Identifier"
    )
    assert inst.rest[0].resource[31].searchParam[25].name == "identifier"
    assert inst.rest[0].resource[31].searchParam[25].type == "token"
    assert (
        inst.rest[0].resource[31].searchRevInclude[0] == "DocumentReference.relatesto"
    )
    assert inst.rest[0].resource[31].type == "DocumentReference"
    assert inst.rest[0].resource[32].conditionalCreate == True
    assert inst.rest[0].resource[32].conditionalDelete == "multiple"
    assert inst.rest[0].resource[32].conditionalUpdate == True
    assert inst.rest[0].resource[32].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[32].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[32].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[32].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[32].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[32].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[32].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[32].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[32].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[32].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[32].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[32].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[32].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[32].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[32].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[32].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[32].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[32].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[32].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/EligibilityRequest"
    )
    assert (
        inst.rest[0].resource[32].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/eligibilityrequest-identifier"
    )
    assert (
        inst.rest[0].resource[32].searchParam[0].documentation
        == "The business identifier of the Eligibility"
    )
    assert inst.rest[0].resource[32].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[32].searchParam[0].type == "token"
    assert inst.rest[0].resource[32].type == "EligibilityRequest"
    assert inst.rest[0].resource[33].conditionalCreate == True
    assert inst.rest[0].resource[33].conditionalDelete == "multiple"
    assert inst.rest[0].resource[33].conditionalUpdate == True
    assert inst.rest[0].resource[33].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[33].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[33].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[33].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[33].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[33].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[33].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[33].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[33].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[33].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[33].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[33].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[33].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[33].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[33].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[33].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[33].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[33].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[33].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/EligibilityResponse"
    )
    assert (
        inst.rest[0].resource[33].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/eligibilityresponse-identifier"
    )
    assert (
        inst.rest[0].resource[33].searchParam[0].documentation
        == "The business identifier of the Explanation of Benefit"
    )
    assert inst.rest[0].resource[33].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[33].searchParam[0].type == "token"
    assert inst.rest[0].resource[33].type == "EligibilityResponse"
    assert inst.rest[0].resource[34].conditionalCreate == True
    assert inst.rest[0].resource[34].conditionalDelete == "multiple"
    assert inst.rest[0].resource[34].conditionalUpdate == True
    assert inst.rest[0].resource[34].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[34].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[34].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[34].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[34].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[34].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[34].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[34].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[34].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[34].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[34].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[34].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[34].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[34].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[34].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[34].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[34].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[34].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[34].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Encounter"
    )
    assert inst.rest[0].resource[34].searchInclude[0] == "Encounter.episodeofcare"
    assert inst.rest[0].resource[34].searchInclude[1] == "Encounter.condition"
    assert inst.rest[0].resource[34].searchInclude[2] == "Encounter.location"
    assert inst.rest[0].resource[34].searchInclude[3] == "Encounter.indication"
    assert inst.rest[0].resource[34].searchInclude[4] == "Encounter.part-of"
    assert inst.rest[0].resource[34].searchInclude[5] == "Encounter.appointment"
    assert inst.rest[0].resource[34].searchInclude[6] == "Encounter.patient"
    assert inst.rest[0].resource[34].searchInclude[7] == "Encounter.practitioner"
    assert inst.rest[0].resource[34].searchInclude[8] == "Encounter.participant"
    assert inst.rest[0].resource[34].searchInclude[9] == "Encounter.incomingreferral"
    assert inst.rest[0].resource[34].searchInclude[10] == "Encounter.procedure"
    assert (
        inst.rest[0].resource[34].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-participant-type"
    )
    assert (
        inst.rest[0].resource[34].searchParam[0].documentation
        == "Role of participant in encounter"
    )
    assert inst.rest[0].resource[34].searchParam[0].name == "participant-type"
    assert inst.rest[0].resource[34].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[34].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-episodeofcare"
    )
    assert (
        inst.rest[0].resource[34].searchParam[1].documentation
        == "Episode(s) of care that this encounter should be recorded against"
    )
    assert inst.rest[0].resource[34].searchParam[1].name == "episodeofcare"
    assert inst.rest[0].resource[34].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[34].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-status"
    )
    assert (
        inst.rest[0].resource[34].searchParam[2].documentation
        == "planned | arrived | in-progress | onleave | finished | cancelled"
    )
    assert inst.rest[0].resource[34].searchParam[2].name == "status"
    assert inst.rest[0].resource[34].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[34].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-reason"
    )
    assert (
        inst.rest[0].resource[34].searchParam[3].documentation
        == "Reason the encounter takes place (code)"
    )
    assert inst.rest[0].resource[34].searchParam[3].name == "reason"
    assert inst.rest[0].resource[34].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[34].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-condition"
    )
    assert (
        inst.rest[0].resource[34].searchParam[4].documentation
        == "Reason the encounter takes place (resource)"
    )
    assert inst.rest[0].resource[34].searchParam[4].name == "condition"
    assert inst.rest[0].resource[34].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[34].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-location"
    )
    assert (
        inst.rest[0].resource[34].searchParam[5].documentation
        == "Location the encounter takes place"
    )
    assert inst.rest[0].resource[34].searchParam[5].name == "location"
    assert inst.rest[0].resource[34].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[34].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-indication"
    )
    assert (
        inst.rest[0].resource[34].searchParam[6].documentation
        == "Reason the encounter takes place (resource)"
    )
    assert inst.rest[0].resource[34].searchParam[6].name == "indication"
    assert inst.rest[0].resource[34].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[34].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-type"
    )
    assert (
        inst.rest[0].resource[34].searchParam[7].documentation
        == "Specific type of encounter"
    )
    assert inst.rest[0].resource[34].searchParam[7].name == "type"
    assert inst.rest[0].resource[34].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[34].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-date"
    )
    assert (
        inst.rest[0].resource[34].searchParam[8].documentation
        == "A date within the period the Encounter lasted"
    )
    assert inst.rest[0].resource[34].searchParam[8].name == "date"
    assert inst.rest[0].resource[34].searchParam[8].type == "date"
    assert (
        inst.rest[0].resource[34].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-special-arrangement"
    )
    assert (
        inst.rest[0].resource[34].searchParam[9].documentation
        == "Wheelchair, translator, stretcher, etc."
    )
    assert inst.rest[0].resource[34].searchParam[9].name == "special-arrangement"
    assert inst.rest[0].resource[34].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[34].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-part-of"
    )
    assert (
        inst.rest[0].resource[34].searchParam[10].documentation
        == "Another Encounter this encounter is part of"
    )
    assert inst.rest[0].resource[34].searchParam[10].name == "part-of"
    assert inst.rest[0].resource[34].searchParam[10].type == "reference"
    assert (
        inst.rest[0].resource[34].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-appointment"
    )
    assert (
        inst.rest[0].resource[34].searchParam[11].documentation
        == "The appointment that scheduled this encounter"
    )
    assert inst.rest[0].resource[34].searchParam[11].name == "appointment"
    assert inst.rest[0].resource[34].searchParam[11].type == "reference"
    assert (
        inst.rest[0].resource[34].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-patient"
    )
    assert (
        inst.rest[0].resource[34].searchParam[12].documentation
        == "The patient present at the encounter"
    )
    assert inst.rest[0].resource[34].searchParam[12].name == "patient"
    assert inst.rest[0].resource[34].searchParam[12].type == "reference"
    assert (
        inst.rest[0].resource[34].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-practitioner"
    )
    assert (
        inst.rest[0].resource[34].searchParam[13].documentation
        == "Persons involved in the encounter other than the patient"
    )
    assert inst.rest[0].resource[34].searchParam[13].name == "practitioner"
    assert inst.rest[0].resource[34].searchParam[13].type == "reference"
    assert (
        inst.rest[0].resource[34].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-length"
    )
    assert (
        inst.rest[0].resource[34].searchParam[14].documentation
        == "Length of encounter in days"
    )
    assert inst.rest[0].resource[34].searchParam[14].name == "length"
    assert inst.rest[0].resource[34].searchParam[14].type == "number"
    assert (
        inst.rest[0].resource[34].searchParam[15].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-participant"
    )
    assert (
        inst.rest[0].resource[34].searchParam[15].documentation
        == "Persons involved in the encounter other than the patient"
    )
    assert inst.rest[0].resource[34].searchParam[15].name == "participant"
    assert inst.rest[0].resource[34].searchParam[15].type == "reference"
    assert (
        inst.rest[0].resource[34].searchParam[16].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-incomingreferral"
    )
    assert (
        inst.rest[0].resource[34].searchParam[16].documentation
        == "The ReferralRequest that initiated this encounter"
    )
    assert inst.rest[0].resource[34].searchParam[16].name == "incomingreferral"
    assert inst.rest[0].resource[34].searchParam[16].type == "reference"
    assert (
        inst.rest[0].resource[34].searchParam[17].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-identifier"
    )
    assert (
        inst.rest[0].resource[34].searchParam[17].documentation
        == "Identifier(s) by which this encounter is known"
    )
    assert inst.rest[0].resource[34].searchParam[17].name == "identifier"
    assert inst.rest[0].resource[34].searchParam[17].type == "token"
    assert (
        inst.rest[0].resource[34].searchParam[18].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-procedure"
    )
    assert (
        inst.rest[0].resource[34].searchParam[18].documentation
        == "Reason the encounter takes place (resource)"
    )
    assert inst.rest[0].resource[34].searchParam[18].name == "procedure"
    assert inst.rest[0].resource[34].searchParam[18].type == "reference"
    assert (
        inst.rest[0].resource[34].searchParam[19].definition
        == "http://hl7.org/fhir/SearchParameter/encounter-location-period"
    )
    assert (
        inst.rest[0].resource[34].searchParam[19].documentation
        == "Time period during which the patient was present at the location"
    )
    assert inst.rest[0].resource[34].searchParam[19].name == "location-period"
    assert inst.rest[0].resource[34].searchParam[19].type == "date"
    assert inst.rest[0].resource[34].searchRevInclude[0] == "Communication.encounter"
    assert (
        inst.rest[0].resource[34].searchRevInclude[1]
        == "CommunicationRequest.encounter"
    )
    assert inst.rest[0].resource[34].searchRevInclude[2] == "Composition.encounter"
    assert inst.rest[0].resource[34].searchRevInclude[3] == "Condition.encounter"
    assert inst.rest[0].resource[34].searchRevInclude[4] == "DiagnosticOrder.encounter"
    assert inst.rest[0].resource[34].searchRevInclude[5] == "DiagnosticReport.encounter"
    assert (
        inst.rest[0].resource[34].searchRevInclude[6] == "DocumentReference.encounter"
    )
    assert inst.rest[0].resource[34].searchRevInclude[7] == "Encounter.part-of"
    assert inst.rest[0].resource[34].searchRevInclude[8] == "Flag.encounter"
    assert inst.rest[0].resource[34].searchRevInclude[9] == "List.encounter"
    assert (
        inst.rest[0].resource[34].searchRevInclude[10]
        == "MedicationAdministration.encounter"
    )
    assert inst.rest[0].resource[34].searchRevInclude[11] == "MedicationOrder.encounter"
    assert inst.rest[0].resource[34].searchRevInclude[12] == "NutritionOrder.encounter"
    assert inst.rest[0].resource[34].searchRevInclude[13] == "Observation.encounter"
    assert inst.rest[0].resource[34].searchRevInclude[14] == "Procedure.encounter"
    assert (
        inst.rest[0].resource[34].searchRevInclude[15] == "ProcedureRequest.encounter"
    )
    assert (
        inst.rest[0].resource[34].searchRevInclude[16]
        == "QuestionnaireResponse.encounter"
    )
    assert inst.rest[0].resource[34].searchRevInclude[17] == "RiskAssessment.encounter"
    assert (
        inst.rest[0].resource[34].searchRevInclude[18] == "VisionPrescription.encounter"
    )
    assert inst.rest[0].resource[34].type == "Encounter"
    assert inst.rest[0].resource[35].conditionalCreate == True
    assert inst.rest[0].resource[35].conditionalDelete == "multiple"
    assert inst.rest[0].resource[35].conditionalUpdate == True
    assert inst.rest[0].resource[35].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[35].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[35].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[35].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[35].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[35].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[35].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[35].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[35].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[35].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[35].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[35].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[35].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[35].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[35].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[35].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[35].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[35].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[35].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/EnrollmentRequest"
    )
    assert inst.rest[0].resource[35].searchInclude[0] == "EnrollmentRequest.patient"
    assert inst.rest[0].resource[35].searchInclude[1] == "EnrollmentRequest.subject"
    assert (
        inst.rest[0].resource[35].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/enrollmentrequest-patient"
    )
    assert (
        inst.rest[0].resource[35].searchParam[0].documentation
        == "The party to be enrolled"
    )
    assert inst.rest[0].resource[35].searchParam[0].name == "patient"
    assert inst.rest[0].resource[35].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[35].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/enrollmentrequest-subject"
    )
    assert (
        inst.rest[0].resource[35].searchParam[1].documentation
        == "The party to be enrolled"
    )
    assert inst.rest[0].resource[35].searchParam[1].name == "subject"
    assert inst.rest[0].resource[35].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[35].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/enrollmentrequest-identifier"
    )
    assert (
        inst.rest[0].resource[35].searchParam[2].documentation
        == "The business identifier of the Enrollment"
    )
    assert inst.rest[0].resource[35].searchParam[2].name == "identifier"
    assert inst.rest[0].resource[35].searchParam[2].type == "token"
    assert inst.rest[0].resource[35].type == "EnrollmentRequest"
    assert inst.rest[0].resource[36].conditionalCreate == True
    assert inst.rest[0].resource[36].conditionalDelete == "multiple"
    assert inst.rest[0].resource[36].conditionalUpdate == True
    assert inst.rest[0].resource[36].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[36].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[36].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[36].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[36].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[36].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[36].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[36].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[36].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[36].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[36].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[36].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[36].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[36].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[36].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[36].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[36].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[36].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[36].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/EnrollmentResponse"
    )
    assert (
        inst.rest[0].resource[36].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/enrollmentresponse-identifier"
    )
    assert (
        inst.rest[0].resource[36].searchParam[0].documentation
        == "The business identifier of the Explanation of Benefit"
    )
    assert inst.rest[0].resource[36].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[36].searchParam[0].type == "token"
    assert inst.rest[0].resource[36].type == "EnrollmentResponse"
    assert inst.rest[0].resource[37].conditionalCreate == True
    assert inst.rest[0].resource[37].conditionalDelete == "multiple"
    assert inst.rest[0].resource[37].conditionalUpdate == True
    assert inst.rest[0].resource[37].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[37].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[37].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[37].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[37].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[37].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[37].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[37].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[37].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[37].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[37].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[37].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[37].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[37].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[37].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[37].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[37].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[37].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[37].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/EpisodeOfCare"
    )
    assert inst.rest[0].resource[37].searchInclude[0] == "EpisodeOfCare.organization"
    assert inst.rest[0].resource[37].searchInclude[1] == "EpisodeOfCare.patient"
    assert inst.rest[0].resource[37].searchInclude[2] == "EpisodeOfCare.condition"
    assert inst.rest[0].resource[37].searchInclude[3] == "EpisodeOfCare.care-manager"
    assert (
        inst.rest[0].resource[37].searchInclude[4] == "EpisodeOfCare.incomingreferral"
    )
    assert inst.rest[0].resource[37].searchInclude[5] == "EpisodeOfCare.team-member"
    assert (
        inst.rest[0].resource[37].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/episodeofcare-organization"
    )
    assert (
        inst.rest[0].resource[37].searchParam[0].documentation
        == "The organization that has assumed the specific responsibilities of this EpisodeOfCare"
    )
    assert inst.rest[0].resource[37].searchParam[0].name == "organization"
    assert inst.rest[0].resource[37].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[37].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/episodeofcare-patient"
    )
    assert (
        inst.rest[0].resource[37].searchParam[1].documentation
        == "Patient for this episode of care"
    )
    assert inst.rest[0].resource[37].searchParam[1].name == "patient"
    assert inst.rest[0].resource[37].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[37].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/episodeofcare-condition"
    )
    assert (
        inst.rest[0].resource[37].searchParam[2].documentation
        == "Conditions/problems/diagnoses this episode of care is for"
    )
    assert inst.rest[0].resource[37].searchParam[2].name == "condition"
    assert inst.rest[0].resource[37].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[37].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/episodeofcare-status"
    )
    assert (
        inst.rest[0].resource[37].searchParam[3].documentation
        == "The current status of the Episode of Care as provided (does not check the status history collection)"
    )
    assert inst.rest[0].resource[37].searchParam[3].name == "status"
    assert inst.rest[0].resource[37].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[37].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/episodeofcare-care-manager"
    )
    assert (
        inst.rest[0].resource[37].searchParam[4].documentation
        == "Care manager/care co-ordinator for the patient"
    )
    assert inst.rest[0].resource[37].searchParam[4].name == "care-manager"
    assert inst.rest[0].resource[37].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[37].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/episodeofcare-type"
    )
    assert (
        inst.rest[0].resource[37].searchParam[5].documentation
        == "Type/class  - e.g. specialist referral, disease management"
    )
    assert inst.rest[0].resource[37].searchParam[5].name == "type"
    assert inst.rest[0].resource[37].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[37].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/episodeofcare-date"
    )
    assert (
        inst.rest[0].resource[37].searchParam[6].documentation
        == "The provided date search value falls within the episode of care's period"
    )
    assert inst.rest[0].resource[37].searchParam[6].name == "date"
    assert inst.rest[0].resource[37].searchParam[6].type == "date"
    assert (
        inst.rest[0].resource[37].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/episodeofcare-incomingreferral"
    )
    assert (
        inst.rest[0].resource[37].searchParam[7].documentation
        == "Incoming Referral Request"
    )
    assert inst.rest[0].resource[37].searchParam[7].name == "incomingreferral"
    assert inst.rest[0].resource[37].searchParam[7].type == "reference"
    assert (
        inst.rest[0].resource[37].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/episodeofcare-identifier"
    )
    assert (
        inst.rest[0].resource[37].searchParam[8].documentation
        == "Identifier(s) for the EpisodeOfCare"
    )
    assert inst.rest[0].resource[37].searchParam[8].name == "identifier"
    assert inst.rest[0].resource[37].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[37].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/episodeofcare-team-member"
    )
    assert (
        inst.rest[0].resource[37].searchParam[9].documentation
        == "A Practitioner or Organization allocated to the care team for this EpisodeOfCare"
    )
    assert inst.rest[0].resource[37].searchParam[9].name == "team-member"
    assert inst.rest[0].resource[37].searchParam[9].type == "reference"
    assert inst.rest[0].resource[37].searchRevInclude[0] == "Encounter.episodeofcare"
    assert inst.rest[0].resource[37].type == "EpisodeOfCare"
    assert inst.rest[0].resource[38].conditionalCreate == True
    assert inst.rest[0].resource[38].conditionalDelete == "multiple"
    assert inst.rest[0].resource[38].conditionalUpdate == True
    assert inst.rest[0].resource[38].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[38].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[38].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[38].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[38].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[38].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[38].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[38].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[38].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[38].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[38].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[38].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[38].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[38].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[38].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[38].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[38].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[38].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[38].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/ExplanationOfBenefit"
    )
    assert (
        inst.rest[0].resource[38].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/explanationofbenefit-identifier"
    )
    assert (
        inst.rest[0].resource[38].searchParam[0].documentation
        == "The business identifier of the Explanation of Benefit"
    )
    assert inst.rest[0].resource[38].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[38].searchParam[0].type == "token"
    assert inst.rest[0].resource[38].type == "ExplanationOfBenefit"
    assert inst.rest[0].resource[39].conditionalCreate == True
    assert inst.rest[0].resource[39].conditionalDelete == "multiple"
    assert inst.rest[0].resource[39].conditionalUpdate == True
    assert inst.rest[0].resource[39].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[39].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[39].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[39].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[39].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[39].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[39].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[39].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[39].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[39].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[39].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[39].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[39].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[39].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[39].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[39].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[39].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[39].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[39].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/FamilyMemberHistory"
    )
    assert inst.rest[0].resource[39].searchInclude[0] == "FamilyMemberHistory.patient"
    assert (
        inst.rest[0].resource[39].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/familymemberhistory-relationship"
    )
    assert (
        inst.rest[0].resource[39].searchParam[0].documentation
        == "A search by a relationship type"
    )
    assert inst.rest[0].resource[39].searchParam[0].name == "relationship"
    assert inst.rest[0].resource[39].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[39].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/familymemberhistory-patient"
    )
    assert (
        inst.rest[0].resource[39].searchParam[1].documentation
        == "The identity of a subject to list family member history items for"
    )
    assert inst.rest[0].resource[39].searchParam[1].name == "patient"
    assert inst.rest[0].resource[39].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[39].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/familymemberhistory-gender"
    )
    assert (
        inst.rest[0].resource[39].searchParam[2].documentation
        == "A search by a gender code of a family member"
    )
    assert inst.rest[0].resource[39].searchParam[2].name == "gender"
    assert inst.rest[0].resource[39].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[39].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/familymemberhistory-code"
    )
    assert (
        inst.rest[0].resource[39].searchParam[3].documentation
        == "A search by a condition code"
    )
    assert inst.rest[0].resource[39].searchParam[3].name == "code"
    assert inst.rest[0].resource[39].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[39].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/familymemberhistory-date"
    )
    assert (
        inst.rest[0].resource[39].searchParam[4].documentation
        == "When history was captured/updated"
    )
    assert inst.rest[0].resource[39].searchParam[4].name == "date"
    assert inst.rest[0].resource[39].searchParam[4].type == "date"
    assert (
        inst.rest[0].resource[39].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/familymemberhistory-identifier"
    )
    assert (
        inst.rest[0].resource[39].searchParam[5].documentation
        == "A search by a record identifier"
    )
    assert inst.rest[0].resource[39].searchParam[5].name == "identifier"
    assert inst.rest[0].resource[39].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[39].searchRevInclude[0]
        == "ClinicalImpression.investigation"
    )
    assert inst.rest[0].resource[39].type == "FamilyMemberHistory"
    assert inst.rest[0].resource[40].conditionalCreate == True
    assert inst.rest[0].resource[40].conditionalDelete == "multiple"
    assert inst.rest[0].resource[40].conditionalUpdate == True
    assert inst.rest[0].resource[40].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[40].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[40].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[40].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[40].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[40].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[40].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[40].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[40].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[40].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[40].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[40].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[40].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[40].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[40].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[40].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[40].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[40].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[40].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Flag"
    )
    assert inst.rest[0].resource[40].searchInclude[0] == "Flag.author"
    assert inst.rest[0].resource[40].searchInclude[1] == "Flag.patient"
    assert inst.rest[0].resource[40].searchInclude[2] == "Flag.subject"
    assert inst.rest[0].resource[40].searchInclude[3] == "Flag.encounter"
    assert (
        inst.rest[0].resource[40].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/flag-author"
    )
    assert inst.rest[0].resource[40].searchParam[0].documentation == "Flag creator"
    assert inst.rest[0].resource[40].searchParam[0].name == "author"
    assert inst.rest[0].resource[40].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[40].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/flag-patient"
    )
    assert (
        inst.rest[0].resource[40].searchParam[1].documentation
        == "The identity of a subject to list flags for"
    )
    assert inst.rest[0].resource[40].searchParam[1].name == "patient"
    assert inst.rest[0].resource[40].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[40].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/flag-subject"
    )
    assert (
        inst.rest[0].resource[40].searchParam[2].documentation
        == "The identity of a subject to list flags for"
    )
    assert inst.rest[0].resource[40].searchParam[2].name == "subject"
    assert inst.rest[0].resource[40].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[40].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/flag-encounter"
    )
    assert (
        inst.rest[0].resource[40].searchParam[3].documentation
        == "Alert relevant during encounter"
    )
    assert inst.rest[0].resource[40].searchParam[3].name == "encounter"
    assert inst.rest[0].resource[40].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[40].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/flag-date"
    )
    assert (
        inst.rest[0].resource[40].searchParam[4].documentation
        == "Time period when flag is active"
    )
    assert inst.rest[0].resource[40].searchParam[4].name == "date"
    assert inst.rest[0].resource[40].searchParam[4].type == "date"
    assert inst.rest[0].resource[40].type == "Flag"
    assert inst.rest[0].resource[41].conditionalCreate == True
    assert inst.rest[0].resource[41].conditionalDelete == "multiple"
    assert inst.rest[0].resource[41].conditionalUpdate == True
    assert inst.rest[0].resource[41].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[41].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[41].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[41].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[41].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[41].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[41].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[41].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[41].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[41].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[41].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[41].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[41].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[41].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[41].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[41].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[41].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[41].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[41].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Goal"
    )
    assert inst.rest[0].resource[41].searchInclude[0] == "Goal.patient"
    assert inst.rest[0].resource[41].searchInclude[1] == "Goal.subject"
    assert (
        inst.rest[0].resource[41].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/goal-targetdate"
    )
    assert (
        inst.rest[0].resource[41].searchParam[0].documentation
        == "Reach goal on or before"
    )
    assert inst.rest[0].resource[41].searchParam[0].name == "targetdate"
    assert inst.rest[0].resource[41].searchParam[0].type == "date"
    assert (
        inst.rest[0].resource[41].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/goal-category"
    )
    assert (
        inst.rest[0].resource[41].searchParam[1].documentation
        == "E.g. Treatment, dietary, behavioral, etc."
    )
    assert inst.rest[0].resource[41].searchParam[1].name == "category"
    assert inst.rest[0].resource[41].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[41].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/goal-patient"
    )
    assert (
        inst.rest[0].resource[41].searchParam[2].documentation
        == "Who this goal is intended for"
    )
    assert inst.rest[0].resource[41].searchParam[2].name == "patient"
    assert inst.rest[0].resource[41].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[41].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/goal-status"
    )
    assert (
        inst.rest[0].resource[41].searchParam[3].documentation
        == "proposed | planned | accepted | rejected | in-progress | achieved | sustaining | on-hold | cancelled"
    )
    assert inst.rest[0].resource[41].searchParam[3].name == "status"
    assert inst.rest[0].resource[41].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[41].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/goal-subject"
    )
    assert (
        inst.rest[0].resource[41].searchParam[4].documentation
        == "Who this goal is intended for"
    )
    assert inst.rest[0].resource[41].searchParam[4].name == "subject"
    assert inst.rest[0].resource[41].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[41].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/goal-identifier"
    )
    assert (
        inst.rest[0].resource[41].searchParam[5].documentation
        == "External Ids for this goal"
    )
    assert inst.rest[0].resource[41].searchParam[5].name == "identifier"
    assert inst.rest[0].resource[41].searchParam[5].type == "token"
    assert inst.rest[0].resource[41].searchRevInclude[0] == "CarePlan.goal"
    assert inst.rest[0].resource[41].type == "Goal"
    assert inst.rest[0].resource[42].conditionalCreate == True
    assert inst.rest[0].resource[42].conditionalDelete == "multiple"
    assert inst.rest[0].resource[42].conditionalUpdate == True
    assert inst.rest[0].resource[42].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[42].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[42].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[42].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[42].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[42].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[42].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[42].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[42].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[42].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[42].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[42].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[42].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[42].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[42].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[42].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[42].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[42].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[42].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Group"
    )
    assert inst.rest[0].resource[42].searchInclude[0] == "Group.member"
    assert (
        inst.rest[0].resource[42].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/group-member"
    )
    assert (
        inst.rest[0].resource[42].searchParam[0].documentation
        == "Reference to the group member"
    )
    assert inst.rest[0].resource[42].searchParam[0].name == "member"
    assert inst.rest[0].resource[42].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[42].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/group-characteristic-value"
    )
    assert (
        inst.rest[0].resource[42].searchParam[1].documentation
        == "A composite of both characteristic and value"
    )
    assert inst.rest[0].resource[42].searchParam[1].name == "characteristic-value"
    assert inst.rest[0].resource[42].searchParam[1].type == "composite"
    assert (
        inst.rest[0].resource[42].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/group-value"
    )
    assert (
        inst.rest[0].resource[42].searchParam[2].documentation
        == "Value held by characteristic"
    )
    assert inst.rest[0].resource[42].searchParam[2].name == "value"
    assert inst.rest[0].resource[42].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[42].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/group-actual"
    )
    assert (
        inst.rest[0].resource[42].searchParam[3].documentation
        == "Descriptive or actual"
    )
    assert inst.rest[0].resource[42].searchParam[3].name == "actual"
    assert inst.rest[0].resource[42].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[42].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/group-exclude"
    )
    assert (
        inst.rest[0].resource[42].searchParam[4].documentation
        == "Group includes or excludes"
    )
    assert inst.rest[0].resource[42].searchParam[4].name == "exclude"
    assert inst.rest[0].resource[42].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[42].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/group-code"
    )
    assert (
        inst.rest[0].resource[42].searchParam[5].documentation
        == "The kind of resources contained"
    )
    assert inst.rest[0].resource[42].searchParam[5].name == "code"
    assert inst.rest[0].resource[42].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[42].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/group-characteristic"
    )
    assert (
        inst.rest[0].resource[42].searchParam[6].documentation
        == "Kind of characteristic"
    )
    assert inst.rest[0].resource[42].searchParam[6].name == "characteristic"
    assert inst.rest[0].resource[42].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[42].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/group-type"
    )
    assert (
        inst.rest[0].resource[42].searchParam[7].documentation
        == "The type of resources the group contains"
    )
    assert inst.rest[0].resource[42].searchParam[7].name == "type"
    assert inst.rest[0].resource[42].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[42].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/group-identifier"
    )
    assert inst.rest[0].resource[42].searchParam[8].documentation == "Unique id"
    assert inst.rest[0].resource[42].searchParam[8].name == "identifier"
    assert inst.rest[0].resource[42].searchParam[8].type == "token"
    assert inst.rest[0].resource[42].searchRevInclude[0] == "CarePlan.subject"
    assert inst.rest[0].resource[42].searchRevInclude[1] == "CarePlan.patient"
    assert inst.rest[0].resource[42].searchRevInclude[2] == "Communication.recipient"
    assert inst.rest[0].resource[42].searchRevInclude[3] == "Contract.actor"
    assert inst.rest[0].resource[42].searchRevInclude[4] == "DiagnosticOrder.subject"
    assert inst.rest[0].resource[42].searchRevInclude[5] == "DiagnosticOrder.patient"
    assert inst.rest[0].resource[42].searchRevInclude[6] == "DiagnosticReport.subject"
    assert inst.rest[0].resource[42].searchRevInclude[7] == "DiagnosticReport.patient"
    assert inst.rest[0].resource[42].searchRevInclude[8] == "DocumentManifest.subject"
    assert inst.rest[0].resource[42].searchRevInclude[9] == "DocumentManifest.patient"
    assert inst.rest[0].resource[42].searchRevInclude[10] == "DocumentReference.subject"
    assert inst.rest[0].resource[42].searchRevInclude[11] == "DocumentReference.patient"
    assert inst.rest[0].resource[42].searchRevInclude[12] == "Flag.patient"
    assert inst.rest[0].resource[42].searchRevInclude[13] == "Flag.subject"
    assert inst.rest[0].resource[42].searchRevInclude[14] == "Goal.patient"
    assert inst.rest[0].resource[42].searchRevInclude[15] == "Goal.subject"
    assert inst.rest[0].resource[42].searchRevInclude[16] == "List.patient"
    assert inst.rest[0].resource[42].searchRevInclude[17] == "List.subject"
    assert inst.rest[0].resource[42].searchRevInclude[18] == "Media.patient"
    assert inst.rest[0].resource[42].searchRevInclude[19] == "Media.subject"
    assert inst.rest[0].resource[42].searchRevInclude[20] == "Observation.subject"
    assert inst.rest[0].resource[42].searchRevInclude[21] == "Observation.patient"
    assert inst.rest[0].resource[42].searchRevInclude[22] == "Order.patient"
    assert inst.rest[0].resource[42].searchRevInclude[23] == "Order.subject"
    assert inst.rest[0].resource[42].searchRevInclude[24] == "Procedure.patient"
    assert inst.rest[0].resource[42].searchRevInclude[25] == "Procedure.subject"
    assert inst.rest[0].resource[42].searchRevInclude[26] == "ProcedureRequest.patient"
    assert inst.rest[0].resource[42].searchRevInclude[27] == "ProcedureRequest.subject"
    assert inst.rest[0].resource[42].searchRevInclude[28] == "RiskAssessment.patient"
    assert inst.rest[0].resource[42].searchRevInclude[29] == "RiskAssessment.subject"
    assert inst.rest[0].resource[42].searchRevInclude[30] == "Specimen.patient"
    assert inst.rest[0].resource[42].searchRevInclude[31] == "Specimen.subject"
    assert inst.rest[0].resource[42].type == "Group"
    assert inst.rest[0].resource[43].conditionalCreate == True
    assert inst.rest[0].resource[43].conditionalDelete == "multiple"
    assert inst.rest[0].resource[43].conditionalUpdate == True
    assert inst.rest[0].resource[43].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[43].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[43].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[43].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[43].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[43].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[43].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[43].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[43].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[43].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[43].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[43].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[43].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[43].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[43].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[43].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[43].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[43].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[43].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/HealthcareService"
    )
    assert (
        inst.rest[0].resource[43].searchInclude[0] == "HealthcareService.organization"
    )
    assert inst.rest[0].resource[43].searchInclude[1] == "HealthcareService.location"
    assert (
        inst.rest[0].resource[43].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/healthcareservice-servicecategory"
    )
    assert (
        inst.rest[0].resource[43].searchParam[0].documentation
        == "Service Category of the Healthcare Service"
    )
    assert inst.rest[0].resource[43].searchParam[0].name == "servicecategory"
    assert inst.rest[0].resource[43].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[43].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/healthcareservice-organization"
    )
    assert (
        inst.rest[0].resource[43].searchParam[1].documentation
        == "The organization that provides this Healthcare Service"
    )
    assert inst.rest[0].resource[43].searchParam[1].name == "organization"
    assert inst.rest[0].resource[43].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[43].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/healthcareservice-servicetype"
    )
    assert (
        inst.rest[0].resource[43].searchParam[2].documentation
        == "The type of service provided by this healthcare service"
    )
    assert inst.rest[0].resource[43].searchParam[2].name == "servicetype"
    assert inst.rest[0].resource[43].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[43].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/healthcareservice-location"
    )
    assert (
        inst.rest[0].resource[43].searchParam[3].documentation
        == "The location of the Healthcare Service"
    )
    assert inst.rest[0].resource[43].searchParam[3].name == "location"
    assert inst.rest[0].resource[43].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[43].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/healthcareservice-name"
    )
    assert (
        inst.rest[0].resource[43].searchParam[4].documentation
        == "A portion of the Healthcare service name"
    )
    assert inst.rest[0].resource[43].searchParam[4].name == "name"
    assert inst.rest[0].resource[43].searchParam[4].type == "string"
    assert (
        inst.rest[0].resource[43].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/healthcareservice-programname"
    )
    assert (
        inst.rest[0].resource[43].searchParam[5].documentation
        == "One of the Program Names serviced by this HealthcareService"
    )
    assert inst.rest[0].resource[43].searchParam[5].name == "programname"
    assert inst.rest[0].resource[43].searchParam[5].type == "string"
    assert (
        inst.rest[0].resource[43].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/healthcareservice-characteristic"
    )
    assert (
        inst.rest[0].resource[43].searchParam[6].documentation
        == "One of the HealthcareService's characteristics"
    )
    assert inst.rest[0].resource[43].searchParam[6].name == "characteristic"
    assert inst.rest[0].resource[43].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[43].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/healthcareservice-identifier"
    )
    assert (
        inst.rest[0].resource[43].searchParam[7].documentation
        == "External identifiers for this item"
    )
    assert inst.rest[0].resource[43].searchParam[7].name == "identifier"
    assert inst.rest[0].resource[43].searchParam[7].type == "token"
    assert inst.rest[0].resource[43].searchRevInclude[0] == "Account.patient"
    assert inst.rest[0].resource[43].searchRevInclude[1] == "Account.subject"
    assert inst.rest[0].resource[43].searchRevInclude[2] == "Appointment.patient"
    assert inst.rest[0].resource[43].searchRevInclude[3] == "Appointment.practitioner"
    assert inst.rest[0].resource[43].searchRevInclude[4] == "Appointment.location"
    assert inst.rest[0].resource[43].searchRevInclude[5] == "Appointment.actor"
    assert (
        inst.rest[0].resource[43].searchRevInclude[6] == "AppointmentResponse.patient"
    )
    assert (
        inst.rest[0].resource[43].searchRevInclude[7]
        == "AppointmentResponse.practitioner"
    )
    assert (
        inst.rest[0].resource[43].searchRevInclude[8] == "AppointmentResponse.location"
    )
    assert inst.rest[0].resource[43].searchRevInclude[9] == "AppointmentResponse.actor"
    assert inst.rest[0].resource[43].searchRevInclude[10] == "Schedule.actor"
    assert inst.rest[0].resource[43].type == "HealthcareService"
    assert inst.rest[0].resource[44].conditionalCreate == True
    assert inst.rest[0].resource[44].conditionalDelete == "multiple"
    assert inst.rest[0].resource[44].conditionalUpdate == True
    assert inst.rest[0].resource[44].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[44].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[44].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[44].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[44].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[44].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[44].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[44].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[44].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[44].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[44].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[44].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[44].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[44].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[44].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[44].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[44].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[44].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[44].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/ImagingObjectSelection"
    )
    assert inst.rest[0].resource[44].searchInclude[0] == "ImagingObjectSelection.author"
    assert (
        inst.rest[0].resource[44].searchInclude[1] == "ImagingObjectSelection.patient"
    )
    assert (
        inst.rest[0].resource[44].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/imagingobjectselection-selected-study"
    )
    assert (
        inst.rest[0].resource[44].searchParam[0].documentation
        == "Study selected in key DICOM object selection"
    )
    assert inst.rest[0].resource[44].searchParam[0].name == "selected-study"
    assert inst.rest[0].resource[44].searchParam[0].type == "uri"
    assert (
        inst.rest[0].resource[44].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/imagingobjectselection-author"
    )
    assert (
        inst.rest[0].resource[44].searchParam[1].documentation
        == "Author of key DICOM object selection"
    )
    assert inst.rest[0].resource[44].searchParam[1].name == "author"
    assert inst.rest[0].resource[44].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[44].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/imagingobjectselection-title"
    )
    assert (
        inst.rest[0].resource[44].searchParam[2].documentation
        == "Title of key DICOM object selection"
    )
    assert inst.rest[0].resource[44].searchParam[2].name == "title"
    assert inst.rest[0].resource[44].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[44].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/imagingobjectselection-patient"
    )
    assert (
        inst.rest[0].resource[44].searchParam[3].documentation
        == "Subject of key DICOM object selection"
    )
    assert inst.rest[0].resource[44].searchParam[3].name == "patient"
    assert inst.rest[0].resource[44].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[44].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/imagingobjectselection-authoring-time"
    )
    assert (
        inst.rest[0].resource[44].searchParam[4].documentation
        == "Time of key DICOM object selection authoring"
    )
    assert inst.rest[0].resource[44].searchParam[4].name == "authoring-time"
    assert inst.rest[0].resource[44].searchParam[4].type == "date"
    assert (
        inst.rest[0].resource[44].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/imagingobjectselection-identifier"
    )
    assert (
        inst.rest[0].resource[44].searchParam[5].documentation
        == "UID of key DICOM object selection"
    )
    assert inst.rest[0].resource[44].searchParam[5].name == "identifier"
    assert inst.rest[0].resource[44].searchParam[5].type == "uri"
    assert inst.rest[0].resource[44].type == "ImagingObjectSelection"
    assert inst.rest[0].resource[45].conditionalCreate == True
    assert inst.rest[0].resource[45].conditionalDelete == "multiple"
    assert inst.rest[0].resource[45].conditionalUpdate == True
    assert inst.rest[0].resource[45].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[45].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[45].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[45].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[45].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[45].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[45].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[45].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[45].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[45].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[45].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[45].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[45].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[45].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[45].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[45].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[45].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[45].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[45].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/ImagingStudy"
    )
    assert inst.rest[0].resource[45].searchInclude[0] == "ImagingStudy.patient"
    assert inst.rest[0].resource[45].searchInclude[1] == "ImagingStudy.order"
    assert (
        inst.rest[0].resource[45].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/imagingstudy-uid"
    )
    assert (
        inst.rest[0].resource[45].searchParam[0].documentation
        == "The instance unique identifier"
    )
    assert inst.rest[0].resource[45].searchParam[0].name == "uid"
    assert inst.rest[0].resource[45].searchParam[0].type == "uri"
    assert (
        inst.rest[0].resource[45].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/imagingstudy-series"
    )
    assert (
        inst.rest[0].resource[45].searchParam[1].documentation
        == "The identifier of the series of images"
    )
    assert inst.rest[0].resource[45].searchParam[1].name == "series"
    assert inst.rest[0].resource[45].searchParam[1].type == "uri"
    assert (
        inst.rest[0].resource[45].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/imagingstudy-patient"
    )
    assert (
        inst.rest[0].resource[45].searchParam[2].documentation
        == "Who the study is about"
    )
    assert inst.rest[0].resource[45].searchParam[2].name == "patient"
    assert inst.rest[0].resource[45].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[45].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/imagingstudy-order"
    )
    assert (
        inst.rest[0].resource[45].searchParam[3].documentation
        == "The order for the image"
    )
    assert inst.rest[0].resource[45].searchParam[3].name == "order"
    assert inst.rest[0].resource[45].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[45].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/imagingstudy-bodysite"
    )
    assert (
        inst.rest[0].resource[45].searchParam[4].documentation
        == "The body site studied"
    )
    assert inst.rest[0].resource[45].searchParam[4].name == "bodysite"
    assert inst.rest[0].resource[45].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[45].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/imagingstudy-accession"
    )
    assert (
        inst.rest[0].resource[45].searchParam[5].documentation
        == "The accession identifier for the study"
    )
    assert inst.rest[0].resource[45].searchParam[5].name == "accession"
    assert inst.rest[0].resource[45].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[45].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/imagingstudy-study"
    )
    assert (
        inst.rest[0].resource[45].searchParam[6].documentation
        == "The study identifier for the image"
    )
    assert inst.rest[0].resource[45].searchParam[6].name == "study"
    assert inst.rest[0].resource[45].searchParam[6].type == "uri"
    assert (
        inst.rest[0].resource[45].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/imagingstudy-modality"
    )
    assert (
        inst.rest[0].resource[45].searchParam[7].documentation
        == "The modality of the series"
    )
    assert inst.rest[0].resource[45].searchParam[7].name == "modality"
    assert inst.rest[0].resource[45].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[45].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/imagingstudy-started"
    )
    assert (
        inst.rest[0].resource[45].searchParam[8].documentation
        == "When the study was started"
    )
    assert inst.rest[0].resource[45].searchParam[8].name == "started"
    assert inst.rest[0].resource[45].searchParam[8].type == "date"
    assert (
        inst.rest[0].resource[45].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/imagingstudy-dicom-class"
    )
    assert (
        inst.rest[0].resource[45].searchParam[9].documentation
        == "The type of the instance"
    )
    assert inst.rest[0].resource[45].searchParam[9].name == "dicom-class"
    assert inst.rest[0].resource[45].searchParam[9].type == "uri"
    assert inst.rest[0].resource[45].type == "ImagingStudy"
    assert inst.rest[0].resource[46].conditionalCreate == True
    assert inst.rest[0].resource[46].conditionalDelete == "multiple"
    assert inst.rest[0].resource[46].conditionalUpdate == True
    assert inst.rest[0].resource[46].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[46].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[46].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[46].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[46].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[46].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[46].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[46].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[46].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[46].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[46].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[46].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[46].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[46].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[46].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[46].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[46].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[46].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[46].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Immunization"
    )
    assert inst.rest[0].resource[46].searchInclude[0] == "Immunization.reaction"
    assert inst.rest[0].resource[46].searchInclude[1] == "Immunization.requester"
    assert inst.rest[0].resource[46].searchInclude[2] == "Immunization.location"
    assert inst.rest[0].resource[46].searchInclude[3] == "Immunization.patient"
    assert inst.rest[0].resource[46].searchInclude[4] == "Immunization.manufacturer"
    assert inst.rest[0].resource[46].searchInclude[5] == "Immunization.performer"
    assert (
        inst.rest[0].resource[46].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-reaction"
    )
    assert (
        inst.rest[0].resource[46].searchParam[0].documentation
        == "Additional information on reaction"
    )
    assert inst.rest[0].resource[46].searchParam[0].name == "reaction"
    assert inst.rest[0].resource[46].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[46].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-requester"
    )
    assert (
        inst.rest[0].resource[46].searchParam[1].documentation
        == "The practitioner who ordered the vaccination"
    )
    assert inst.rest[0].resource[46].searchParam[1].name == "requester"
    assert inst.rest[0].resource[46].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[46].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-dose-sequence"
    )
    assert (
        inst.rest[0].resource[46].searchParam[2].documentation
        == "Dose number within series"
    )
    assert inst.rest[0].resource[46].searchParam[2].name == "dose-sequence"
    assert inst.rest[0].resource[46].searchParam[2].type == "number"
    assert (
        inst.rest[0].resource[46].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-status"
    )
    assert (
        inst.rest[0].resource[46].searchParam[3].documentation
        == "Immunization event status"
    )
    assert inst.rest[0].resource[46].searchParam[3].name == "status"
    assert inst.rest[0].resource[46].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[46].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-location"
    )
    assert (
        inst.rest[0].resource[46].searchParam[4].documentation
        == "The service delivery location or facility in which the vaccine was / was to be administered"
    )
    assert inst.rest[0].resource[46].searchParam[4].name == "location"
    assert inst.rest[0].resource[46].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[46].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-reason"
    )
    assert (
        inst.rest[0].resource[46].searchParam[5].documentation
        == "Why immunization occurred"
    )
    assert inst.rest[0].resource[46].searchParam[5].name == "reason"
    assert inst.rest[0].resource[46].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[46].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-reaction-date"
    )
    assert (
        inst.rest[0].resource[46].searchParam[6].documentation
        == "When reaction started"
    )
    assert inst.rest[0].resource[46].searchParam[6].name == "reaction-date"
    assert inst.rest[0].resource[46].searchParam[6].type == "date"
    assert (
        inst.rest[0].resource[46].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-notgiven"
    )
    assert (
        inst.rest[0].resource[46].searchParam[7].documentation
        == "Administrations which were not given"
    )
    assert inst.rest[0].resource[46].searchParam[7].name == "notgiven"
    assert inst.rest[0].resource[46].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[46].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-date"
    )
    assert (
        inst.rest[0].resource[46].searchParam[8].documentation
        == "Vaccination  (non)-Administration Date"
    )
    assert inst.rest[0].resource[46].searchParam[8].name == "date"
    assert inst.rest[0].resource[46].searchParam[8].type == "date"
    assert (
        inst.rest[0].resource[46].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-reason-not-given"
    )
    assert (
        inst.rest[0].resource[46].searchParam[9].documentation
        == "Explanation of reason vaccination was not administered"
    )
    assert inst.rest[0].resource[46].searchParam[9].name == "reason-not-given"
    assert inst.rest[0].resource[46].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[46].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-vaccine-code"
    )
    assert (
        inst.rest[0].resource[46].searchParam[10].documentation
        == "Vaccine Product Administered"
    )
    assert inst.rest[0].resource[46].searchParam[10].name == "vaccine-code"
    assert inst.rest[0].resource[46].searchParam[10].type == "token"
    assert (
        inst.rest[0].resource[46].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-patient"
    )
    assert (
        inst.rest[0].resource[46].searchParam[11].documentation
        == "The patient for the vaccination record"
    )
    assert inst.rest[0].resource[46].searchParam[11].name == "patient"
    assert inst.rest[0].resource[46].searchParam[11].type == "reference"
    assert (
        inst.rest[0].resource[46].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-lot-number"
    )
    assert (
        inst.rest[0].resource[46].searchParam[12].documentation == "Vaccine Lot Number"
    )
    assert inst.rest[0].resource[46].searchParam[12].name == "lot-number"
    assert inst.rest[0].resource[46].searchParam[12].type == "string"
    assert (
        inst.rest[0].resource[46].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-manufacturer"
    )
    assert (
        inst.rest[0].resource[46].searchParam[13].documentation
        == "Vaccine Manufacturer"
    )
    assert inst.rest[0].resource[46].searchParam[13].name == "manufacturer"
    assert inst.rest[0].resource[46].searchParam[13].type == "reference"
    assert (
        inst.rest[0].resource[46].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-performer"
    )
    assert (
        inst.rest[0].resource[46].searchParam[14].documentation
        == "The practitioner who administered the vaccination"
    )
    assert inst.rest[0].resource[46].searchParam[14].name == "performer"
    assert inst.rest[0].resource[46].searchParam[14].type == "reference"
    assert (
        inst.rest[0].resource[46].searchParam[15].definition
        == "http://hl7.org/fhir/SearchParameter/immunization-identifier"
    )
    assert (
        inst.rest[0].resource[46].searchParam[15].documentation == "Business identifier"
    )
    assert inst.rest[0].resource[46].searchParam[15].name == "identifier"
    assert inst.rest[0].resource[46].searchParam[15].type == "token"
    assert (
        inst.rest[0].resource[46].searchRevInclude[0]
        == "ImmunizationRecommendation.support"
    )
    assert inst.rest[0].resource[46].type == "Immunization"
    assert inst.rest[0].resource[47].conditionalCreate == True
    assert inst.rest[0].resource[47].conditionalDelete == "multiple"
    assert inst.rest[0].resource[47].conditionalUpdate == True
    assert inst.rest[0].resource[47].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[47].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[47].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[47].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[47].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[47].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[47].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[47].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[47].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[47].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[47].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[47].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[47].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[47].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[47].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[47].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[47].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[47].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[47].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/ImmunizationRecommendation"
    )
    assert (
        inst.rest[0].resource[47].searchInclude[0]
        == "ImmunizationRecommendation.information"
    )
    assert (
        inst.rest[0].resource[47].searchInclude[1]
        == "ImmunizationRecommendation.patient"
    )
    assert (
        inst.rest[0].resource[47].searchInclude[2]
        == "ImmunizationRecommendation.support"
    )
    assert (
        inst.rest[0].resource[47].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/immunizationrecommendation-information"
    )
    assert (
        inst.rest[0].resource[47].searchParam[0].documentation
        == "Patient observations supporting recommendation"
    )
    assert inst.rest[0].resource[47].searchParam[0].name == "information"
    assert inst.rest[0].resource[47].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[47].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/immunizationrecommendation-dose-sequence"
    )
    assert (
        inst.rest[0].resource[47].searchParam[1].documentation
        == "Dose number within sequence"
    )
    assert inst.rest[0].resource[47].searchParam[1].name == "dose-sequence"
    assert inst.rest[0].resource[47].searchParam[1].type == "number"
    assert (
        inst.rest[0].resource[47].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/immunizationrecommendation-patient"
    )
    assert (
        inst.rest[0].resource[47].searchParam[2].documentation
        == "Who this profile is for"
    )
    assert inst.rest[0].resource[47].searchParam[2].name == "patient"
    assert inst.rest[0].resource[47].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[47].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/immunizationrecommendation-support"
    )
    assert (
        inst.rest[0].resource[47].searchParam[3].documentation
        == "Past immunizations supporting recommendation"
    )
    assert inst.rest[0].resource[47].searchParam[3].name == "support"
    assert inst.rest[0].resource[47].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[47].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/immunizationrecommendation-vaccine-type"
    )
    assert (
        inst.rest[0].resource[47].searchParam[4].documentation
        == "Vaccine recommendation applies to"
    )
    assert inst.rest[0].resource[47].searchParam[4].name == "vaccine-type"
    assert inst.rest[0].resource[47].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[47].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/immunizationrecommendation-status"
    )
    assert (
        inst.rest[0].resource[47].searchParam[5].documentation
        == "Vaccine administration status"
    )
    assert inst.rest[0].resource[47].searchParam[5].name == "status"
    assert inst.rest[0].resource[47].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[47].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/immunizationrecommendation-dose-number"
    )
    assert (
        inst.rest[0].resource[47].searchParam[6].documentation
        == "Recommended dose number"
    )
    assert inst.rest[0].resource[47].searchParam[6].name == "dose-number"
    assert inst.rest[0].resource[47].searchParam[6].type == "number"
    assert (
        inst.rest[0].resource[47].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/immunizationrecommendation-date"
    )
    assert (
        inst.rest[0].resource[47].searchParam[7].documentation
        == "Date recommendation created"
    )
    assert inst.rest[0].resource[47].searchParam[7].name == "date"
    assert inst.rest[0].resource[47].searchParam[7].type == "date"
    assert (
        inst.rest[0].resource[47].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/immunizationrecommendation-identifier"
    )
    assert (
        inst.rest[0].resource[47].searchParam[8].documentation == "Business identifier"
    )
    assert inst.rest[0].resource[47].searchParam[8].name == "identifier"
    assert inst.rest[0].resource[47].searchParam[8].type == "token"
    assert inst.rest[0].resource[47].type == "ImmunizationRecommendation"
    assert inst.rest[0].resource[48].conditionalCreate == True
    assert inst.rest[0].resource[48].conditionalDelete == "multiple"
    assert inst.rest[0].resource[48].conditionalUpdate == True
    assert inst.rest[0].resource[48].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[48].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[48].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[48].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[48].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[48].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[48].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[48].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[48].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[48].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[48].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[48].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[48].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[48].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[48].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[48].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[48].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[48].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[48].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/ImplementationGuide"
    )
    assert (
        inst.rest[0].resource[48].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/implementationguide-dependency"
    )
    assert (
        inst.rest[0].resource[48].searchParam[0].documentation
        == "Where to find dependency"
    )
    assert inst.rest[0].resource[48].searchParam[0].name == "dependency"
    assert inst.rest[0].resource[48].searchParam[0].type == "uri"
    assert (
        inst.rest[0].resource[48].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/implementationguide-status"
    )
    assert (
        inst.rest[0].resource[48].searchParam[1].documentation
        == "The current status of the implementation guide"
    )
    assert inst.rest[0].resource[48].searchParam[1].name == "status"
    assert inst.rest[0].resource[48].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[48].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/implementationguide-description"
    )
    assert (
        inst.rest[0].resource[48].searchParam[2].documentation
        == "Text search in the description of the implementation guide"
    )
    assert inst.rest[0].resource[48].searchParam[2].name == "description"
    assert inst.rest[0].resource[48].searchParam[2].type == "string"
    assert (
        inst.rest[0].resource[48].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/implementationguide-name"
    )
    assert (
        inst.rest[0].resource[48].searchParam[3].documentation
        == "Name of the implementation guide"
    )
    assert inst.rest[0].resource[48].searchParam[3].name == "name"
    assert inst.rest[0].resource[48].searchParam[3].type == "string"
    assert (
        inst.rest[0].resource[48].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/implementationguide-context"
    )
    assert (
        inst.rest[0].resource[48].searchParam[4].documentation
        == "A use context assigned to the structure"
    )
    assert inst.rest[0].resource[48].searchParam[4].name == "context"
    assert inst.rest[0].resource[48].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[48].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/implementationguide-experimental"
    )
    assert (
        inst.rest[0].resource[48].searchParam[5].documentation
        == "If for testing purposes, not real usage"
    )
    assert inst.rest[0].resource[48].searchParam[5].name == "experimental"
    assert inst.rest[0].resource[48].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[48].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/implementationguide-date"
    )
    assert (
        inst.rest[0].resource[48].searchParam[6].documentation
        == "The implementation guide publication date"
    )
    assert inst.rest[0].resource[48].searchParam[6].name == "date"
    assert inst.rest[0].resource[48].searchParam[6].type == "date"
    assert (
        inst.rest[0].resource[48].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/implementationguide-url"
    )
    assert (
        inst.rest[0].resource[48].searchParam[7].documentation
        == "Absolute URL used to reference this Implementation Guide"
    )
    assert inst.rest[0].resource[48].searchParam[7].name == "url"
    assert inst.rest[0].resource[48].searchParam[7].type == "uri"
    assert (
        inst.rest[0].resource[48].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/implementationguide-publisher"
    )
    assert (
        inst.rest[0].resource[48].searchParam[8].documentation
        == "Name of the publisher of the implementation guide"
    )
    assert inst.rest[0].resource[48].searchParam[8].name == "publisher"
    assert inst.rest[0].resource[48].searchParam[8].type == "string"
    assert (
        inst.rest[0].resource[48].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/implementationguide-version"
    )
    assert (
        inst.rest[0].resource[48].searchParam[9].documentation
        == "The version identifier of the implementation guide"
    )
    assert inst.rest[0].resource[48].searchParam[9].name == "version"
    assert inst.rest[0].resource[48].searchParam[9].type == "token"
    assert inst.rest[0].resource[48].type == "ImplementationGuide"
    assert inst.rest[0].resource[49].conditionalCreate == True
    assert inst.rest[0].resource[49].conditionalDelete == "multiple"
    assert inst.rest[0].resource[49].conditionalUpdate == True
    assert inst.rest[0].resource[49].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[49].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[49].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[49].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[49].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[49].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[49].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[49].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[49].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[49].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[49].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[49].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[49].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[49].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[49].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[49].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[49].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[49].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[49].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/List"
    )
    assert inst.rest[0].resource[49].searchInclude[0] == "List.patient"
    assert inst.rest[0].resource[49].searchInclude[1] == "List.source"
    assert inst.rest[0].resource[49].searchInclude[2] == "List.subject"
    assert inst.rest[0].resource[49].searchInclude[3] == "List.item"
    assert inst.rest[0].resource[49].searchInclude[4] == "List.encounter"
    assert (
        inst.rest[0].resource[49].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/list-title"
    )
    assert (
        inst.rest[0].resource[49].searchParam[0].documentation
        == "Descriptive name for the list"
    )
    assert inst.rest[0].resource[49].searchParam[0].name == "title"
    assert inst.rest[0].resource[49].searchParam[0].type == "string"
    assert (
        inst.rest[0].resource[49].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/list-patient"
    )
    assert (
        inst.rest[0].resource[49].searchParam[1].documentation
        == "If all resources have the same subject"
    )
    assert inst.rest[0].resource[49].searchParam[1].name == "patient"
    assert inst.rest[0].resource[49].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[49].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/list-source"
    )
    assert (
        inst.rest[0].resource[49].searchParam[2].documentation
        == "Who and/or what defined the list contents (aka Author)"
    )
    assert inst.rest[0].resource[49].searchParam[2].name == "source"
    assert inst.rest[0].resource[49].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[49].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/list-status"
    )
    assert (
        inst.rest[0].resource[49].searchParam[3].documentation
        == "current | retired | entered-in-error"
    )
    assert inst.rest[0].resource[49].searchParam[3].name == "status"
    assert inst.rest[0].resource[49].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[49].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/list-subject"
    )
    assert (
        inst.rest[0].resource[49].searchParam[4].documentation
        == "If all resources have the same subject"
    )
    assert inst.rest[0].resource[49].searchParam[4].name == "subject"
    assert inst.rest[0].resource[49].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[49].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/list-item"
    )
    assert inst.rest[0].resource[49].searchParam[5].documentation == "Actual entry"
    assert inst.rest[0].resource[49].searchParam[5].name == "item"
    assert inst.rest[0].resource[49].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[49].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/list-encounter"
    )
    assert (
        inst.rest[0].resource[49].searchParam[6].documentation
        == "Context in which list created"
    )
    assert inst.rest[0].resource[49].searchParam[6].name == "encounter"
    assert inst.rest[0].resource[49].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[49].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/list-code"
    )
    assert (
        inst.rest[0].resource[49].searchParam[7].documentation
        == "What the purpose of this list is"
    )
    assert inst.rest[0].resource[49].searchParam[7].name == "code"
    assert inst.rest[0].resource[49].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[49].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/list-notes"
    )
    assert (
        inst.rest[0].resource[49].searchParam[8].documentation
        == "Comments about the list"
    )
    assert inst.rest[0].resource[49].searchParam[8].name == "notes"
    assert inst.rest[0].resource[49].searchParam[8].type == "string"
    assert (
        inst.rest[0].resource[49].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/list-date"
    )
    assert (
        inst.rest[0].resource[49].searchParam[9].documentation
        == "When the list was prepared"
    )
    assert inst.rest[0].resource[49].searchParam[9].name == "date"
    assert inst.rest[0].resource[49].searchParam[9].type == "date"
    assert (
        inst.rest[0].resource[49].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/list-empty-reason"
    )
    assert (
        inst.rest[0].resource[49].searchParam[10].documentation == "Why list is empty"
    )
    assert inst.rest[0].resource[49].searchParam[10].name == "empty-reason"
    assert inst.rest[0].resource[49].searchParam[10].type == "token"
    assert inst.rest[0].resource[49].type == "List"
    assert inst.rest[0].resource[50].conditionalCreate == True
    assert inst.rest[0].resource[50].conditionalDelete == "multiple"
    assert inst.rest[0].resource[50].conditionalUpdate == True
    assert inst.rest[0].resource[50].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[50].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[50].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[50].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[50].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[50].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[50].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[50].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[50].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[50].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[50].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[50].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[50].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[50].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[50].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[50].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[50].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[50].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[50].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Location"
    )
    assert inst.rest[0].resource[50].searchInclude[0] == "Location.organization"
    assert inst.rest[0].resource[50].searchInclude[1] == "Location.partof"
    assert (
        inst.rest[0].resource[50].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/location-organization"
    )
    assert (
        inst.rest[0].resource[50].searchParam[0].documentation
        == "Searches for locations that are managed by the provided organization"
    )
    assert inst.rest[0].resource[50].searchParam[0].name == "organization"
    assert inst.rest[0].resource[50].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[50].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/location-address-state"
    )
    assert (
        inst.rest[0].resource[50].searchParam[1].documentation
        == "A state specified in an address"
    )
    assert inst.rest[0].resource[50].searchParam[1].name == "address-state"
    assert inst.rest[0].resource[50].searchParam[1].type == "string"
    assert (
        inst.rest[0].resource[50].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/location-address-city"
    )
    assert (
        inst.rest[0].resource[50].searchParam[2].documentation
        == "A city specified in an address"
    )
    assert inst.rest[0].resource[50].searchParam[2].name == "address-city"
    assert inst.rest[0].resource[50].searchParam[2].type == "string"
    assert (
        inst.rest[0].resource[50].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/location-near"
    )
    assert (
        inst.rest[0].resource[50].searchParam[3].documentation
        == "The coordinates expressed as [lat],[long] (using the WGS84 datum, see notes) to find locations near to (servers may search using a square rather than a circle for efficiency)"
    )
    assert inst.rest[0].resource[50].searchParam[3].name == "near"
    assert inst.rest[0].resource[50].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[50].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/location-partof"
    )
    assert (
        inst.rest[0].resource[50].searchParam[4].documentation
        == "The location of which this location is a part"
    )
    assert inst.rest[0].resource[50].searchParam[4].name == "partof"
    assert inst.rest[0].resource[50].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[50].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/location-status"
    )
    assert (
        inst.rest[0].resource[50].searchParam[5].documentation
        == "Searches for locations with a specific kind of status"
    )
    assert inst.rest[0].resource[50].searchParam[5].name == "status"
    assert inst.rest[0].resource[50].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[50].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/location-address"
    )
    assert (
        inst.rest[0].resource[50].searchParam[6].documentation
        == "A (part of the) address of the location"
    )
    assert inst.rest[0].resource[50].searchParam[6].name == "address"
    assert inst.rest[0].resource[50].searchParam[6].type == "string"
    assert (
        inst.rest[0].resource[50].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/location-address-use"
    )
    assert (
        inst.rest[0].resource[50].searchParam[7].documentation
        == "A use code specified in an address"
    )
    assert inst.rest[0].resource[50].searchParam[7].name == "address-use"
    assert inst.rest[0].resource[50].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[50].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/location-name"
    )
    assert (
        inst.rest[0].resource[50].searchParam[8].documentation
        == "A (portion of the) name of the location"
    )
    assert inst.rest[0].resource[50].searchParam[8].name == "name"
    assert inst.rest[0].resource[50].searchParam[8].type == "string"
    assert (
        inst.rest[0].resource[50].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/location-address-country"
    )
    assert (
        inst.rest[0].resource[50].searchParam[9].documentation
        == "A country specified in an address"
    )
    assert inst.rest[0].resource[50].searchParam[9].name == "address-country"
    assert inst.rest[0].resource[50].searchParam[9].type == "string"
    assert (
        inst.rest[0].resource[50].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/location-near-distance"
    )
    assert (
        inst.rest[0].resource[50].searchParam[10].documentation
        == "A distance quantity to limit the near search to locations within a specific distance"
    )
    assert inst.rest[0].resource[50].searchParam[10].name == "near-distance"
    assert inst.rest[0].resource[50].searchParam[10].type == "token"
    assert (
        inst.rest[0].resource[50].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/location-type"
    )
    assert (
        inst.rest[0].resource[50].searchParam[11].documentation
        == "A code for the type of location"
    )
    assert inst.rest[0].resource[50].searchParam[11].name == "type"
    assert inst.rest[0].resource[50].searchParam[11].type == "token"
    assert (
        inst.rest[0].resource[50].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/location-identifier"
    )
    assert (
        inst.rest[0].resource[50].searchParam[12].documentation
        == "Unique code or number identifying the location to its users"
    )
    assert inst.rest[0].resource[50].searchParam[12].name == "identifier"
    assert inst.rest[0].resource[50].searchParam[12].type == "token"
    assert (
        inst.rest[0].resource[50].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/location-address-postalcode"
    )
    assert (
        inst.rest[0].resource[50].searchParam[13].documentation
        == "A postal code specified in an address"
    )
    assert inst.rest[0].resource[50].searchParam[13].name == "address-postalcode"
    assert inst.rest[0].resource[50].searchParam[13].type == "string"
    assert inst.rest[0].resource[50].searchRevInclude[0] == "Account.patient"
    assert inst.rest[0].resource[50].searchRevInclude[1] == "Account.subject"
    assert inst.rest[0].resource[50].searchRevInclude[2] == "Appointment.patient"
    assert inst.rest[0].resource[50].searchRevInclude[3] == "Appointment.practitioner"
    assert inst.rest[0].resource[50].searchRevInclude[4] == "Appointment.location"
    assert inst.rest[0].resource[50].searchRevInclude[5] == "Appointment.actor"
    assert (
        inst.rest[0].resource[50].searchRevInclude[6] == "AppointmentResponse.patient"
    )
    assert (
        inst.rest[0].resource[50].searchRevInclude[7]
        == "AppointmentResponse.practitioner"
    )
    assert (
        inst.rest[0].resource[50].searchRevInclude[8] == "AppointmentResponse.location"
    )
    assert inst.rest[0].resource[50].searchRevInclude[9] == "AppointmentResponse.actor"
    assert inst.rest[0].resource[50].searchRevInclude[10] == "Contract.actor"
    assert inst.rest[0].resource[50].searchRevInclude[11] == "Device.location"
    assert inst.rest[0].resource[50].searchRevInclude[12] == "DiagnosticOrder.subject"
    assert inst.rest[0].resource[50].searchRevInclude[13] == "DiagnosticOrder.patient"
    assert inst.rest[0].resource[50].searchRevInclude[14] == "DiagnosticReport.subject"
    assert inst.rest[0].resource[50].searchRevInclude[15] == "DiagnosticReport.patient"
    assert inst.rest[0].resource[50].searchRevInclude[16] == "Encounter.location"
    assert inst.rest[0].resource[50].searchRevInclude[17] == "Flag.patient"
    assert inst.rest[0].resource[50].searchRevInclude[18] == "Flag.subject"
    assert (
        inst.rest[0].resource[50].searchRevInclude[19] == "HealthcareService.location"
    )
    assert inst.rest[0].resource[50].searchRevInclude[20] == "Immunization.location"
    assert inst.rest[0].resource[50].searchRevInclude[21] == "List.patient"
    assert inst.rest[0].resource[50].searchRevInclude[22] == "List.subject"
    assert inst.rest[0].resource[50].searchRevInclude[23] == "Location.partof"
    assert (
        inst.rest[0].resource[50].searchRevInclude[24]
        == "MedicationDispense.destination"
    )
    assert inst.rest[0].resource[50].searchRevInclude[25] == "Observation.subject"
    assert inst.rest[0].resource[50].searchRevInclude[26] == "Observation.patient"
    assert inst.rest[0].resource[50].searchRevInclude[27] == "Practitioner.location"
    assert inst.rest[0].resource[50].searchRevInclude[28] == "Procedure.location"
    assert inst.rest[0].resource[50].searchRevInclude[29] == "Provenance.location"
    assert inst.rest[0].resource[50].searchRevInclude[30] == "Schedule.actor"
    assert inst.rest[0].resource[50].type == "Location"
    assert inst.rest[0].resource[51].conditionalCreate == True
    assert inst.rest[0].resource[51].conditionalDelete == "multiple"
    assert inst.rest[0].resource[51].conditionalUpdate == True
    assert inst.rest[0].resource[51].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[51].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[51].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[51].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[51].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[51].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[51].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[51].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[51].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[51].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[51].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[51].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[51].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[51].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[51].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[51].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[51].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[51].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[51].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Media"
    )
    assert inst.rest[0].resource[51].searchInclude[0] == "Media.patient"
    assert inst.rest[0].resource[51].searchInclude[1] == "Media.subject"
    assert inst.rest[0].resource[51].searchInclude[2] == "Media.operator"
    assert (
        inst.rest[0].resource[51].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/media-patient"
    )
    assert (
        inst.rest[0].resource[51].searchParam[0].documentation
        == "Who/What this Media is a record of"
    )
    assert inst.rest[0].resource[51].searchParam[0].name == "patient"
    assert inst.rest[0].resource[51].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[51].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/media-created"
    )
    assert (
        inst.rest[0].resource[51].searchParam[1].documentation
        == "Date attachment was first created"
    )
    assert inst.rest[0].resource[51].searchParam[1].name == "created"
    assert inst.rest[0].resource[51].searchParam[1].type == "date"
    assert (
        inst.rest[0].resource[51].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/media-subject"
    )
    assert (
        inst.rest[0].resource[51].searchParam[2].documentation
        == "Who/What this Media is a record of"
    )
    assert inst.rest[0].resource[51].searchParam[2].name == "subject"
    assert inst.rest[0].resource[51].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[51].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/media-subtype"
    )
    assert (
        inst.rest[0].resource[51].searchParam[3].documentation
        == "The type of acquisition equipment/process"
    )
    assert inst.rest[0].resource[51].searchParam[3].name == "subtype"
    assert inst.rest[0].resource[51].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[51].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/media-view"
    )
    assert (
        inst.rest[0].resource[51].searchParam[4].documentation
        == "Imaging view, e.g. Lateral or Antero-posterior"
    )
    assert inst.rest[0].resource[51].searchParam[4].name == "view"
    assert inst.rest[0].resource[51].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[51].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/media-type"
    )
    assert (
        inst.rest[0].resource[51].searchParam[5].documentation
        == "photo | video | audio"
    )
    assert inst.rest[0].resource[51].searchParam[5].name == "type"
    assert inst.rest[0].resource[51].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[51].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/media-identifier"
    )
    assert (
        inst.rest[0].resource[51].searchParam[6].documentation
        == "Identifier(s) for the image"
    )
    assert inst.rest[0].resource[51].searchParam[6].name == "identifier"
    assert inst.rest[0].resource[51].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[51].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/media-operator"
    )
    assert (
        inst.rest[0].resource[51].searchParam[7].documentation
        == "The person who generated the image"
    )
    assert inst.rest[0].resource[51].searchParam[7].name == "operator"
    assert inst.rest[0].resource[51].searchParam[7].type == "reference"
    assert inst.rest[0].resource[51].searchRevInclude[0] == "DiagnosticReport.image"
    assert inst.rest[0].resource[51].type == "Media"
    assert inst.rest[0].resource[52].conditionalCreate == True
    assert inst.rest[0].resource[52].conditionalDelete == "multiple"
    assert inst.rest[0].resource[52].conditionalUpdate == True
    assert inst.rest[0].resource[52].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[52].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[52].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[52].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[52].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[52].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[52].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[52].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[52].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[52].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[52].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[52].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[52].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[52].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[52].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[52].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[52].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[52].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[52].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Medication"
    )
    assert inst.rest[0].resource[52].searchInclude[0] == "Medication.content"
    assert inst.rest[0].resource[52].searchInclude[1] == "Medication.manufacturer"
    assert inst.rest[0].resource[52].searchInclude[2] == "Medication.ingredient"
    assert (
        inst.rest[0].resource[52].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/medication-content"
    )
    assert (
        inst.rest[0].resource[52].searchParam[0].documentation
        == "A product in the package"
    )
    assert inst.rest[0].resource[52].searchParam[0].name == "content"
    assert inst.rest[0].resource[52].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[52].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/medication-form"
    )
    assert (
        inst.rest[0].resource[52].searchParam[1].documentation
        == "powder | tablets | carton +"
    )
    assert inst.rest[0].resource[52].searchParam[1].name == "form"
    assert inst.rest[0].resource[52].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[52].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/medication-container"
    )
    assert (
        inst.rest[0].resource[52].searchParam[2].documentation
        == "E.g. box, vial, blister-pack"
    )
    assert inst.rest[0].resource[52].searchParam[2].name == "container"
    assert inst.rest[0].resource[52].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[52].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/medication-manufacturer"
    )
    assert (
        inst.rest[0].resource[52].searchParam[3].documentation
        == "Manufacturer of the item"
    )
    assert inst.rest[0].resource[52].searchParam[3].name == "manufacturer"
    assert inst.rest[0].resource[52].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[52].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/medication-ingredient"
    )
    assert (
        inst.rest[0].resource[52].searchParam[4].documentation
        == "The product contained"
    )
    assert inst.rest[0].resource[52].searchParam[4].name == "ingredient"
    assert inst.rest[0].resource[52].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[52].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/medication-code"
    )
    assert (
        inst.rest[0].resource[52].searchParam[5].documentation
        == "Codes that identify this medication"
    )
    assert inst.rest[0].resource[52].searchParam[5].name == "code"
    assert inst.rest[0].resource[52].searchParam[5].type == "token"
    assert inst.rest[0].resource[52].searchRevInclude[0] == "Group.member"
    assert inst.rest[0].resource[52].searchRevInclude[1] == "Medication.content"
    assert inst.rest[0].resource[52].searchRevInclude[2] == "Medication.ingredient"
    assert (
        inst.rest[0].resource[52].searchRevInclude[3]
        == "MedicationAdministration.medication"
    )
    assert (
        inst.rest[0].resource[52].searchRevInclude[4] == "MedicationDispense.medication"
    )
    assert inst.rest[0].resource[52].searchRevInclude[5] == "MedicationOrder.medication"
    assert (
        inst.rest[0].resource[52].searchRevInclude[6]
        == "MedicationStatement.medication"
    )
    assert inst.rest[0].resource[52].type == "Medication"
    assert inst.rest[0].resource[53].conditionalCreate == True
    assert inst.rest[0].resource[53].conditionalDelete == "multiple"
    assert inst.rest[0].resource[53].conditionalUpdate == True
    assert inst.rest[0].resource[53].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[53].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[53].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[53].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[53].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[53].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[53].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[53].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[53].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[53].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[53].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[53].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[53].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[53].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[53].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[53].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[53].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[53].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[53].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/MedicationAdministration"
    )
    assert (
        inst.rest[0].resource[53].searchInclude[0]
        == "MedicationAdministration.medication"
    )
    assert (
        inst.rest[0].resource[53].searchInclude[1] == "MedicationAdministration.patient"
    )
    assert (
        inst.rest[0].resource[53].searchInclude[2]
        == "MedicationAdministration.practitioner"
    )
    assert (
        inst.rest[0].resource[53].searchInclude[3]
        == "MedicationAdministration.prescription"
    )
    assert (
        inst.rest[0].resource[53].searchInclude[4] == "MedicationAdministration.device"
    )
    assert (
        inst.rest[0].resource[53].searchInclude[5]
        == "MedicationAdministration.encounter"
    )
    assert (
        inst.rest[0].resource[53].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/medicationadministration-medication"
    )
    assert (
        inst.rest[0].resource[53].searchParam[0].documentation
        == "Return administrations of this medication resource"
    )
    assert inst.rest[0].resource[53].searchParam[0].name == "medication"
    assert inst.rest[0].resource[53].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[53].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/medicationadministration-effectivetime"
    )
    assert (
        inst.rest[0].resource[53].searchParam[1].documentation
        == "Date administration happened (or did not happen)"
    )
    assert inst.rest[0].resource[53].searchParam[1].name == "effectivetime"
    assert inst.rest[0].resource[53].searchParam[1].type == "date"
    assert (
        inst.rest[0].resource[53].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/medicationadministration-patient"
    )
    assert (
        inst.rest[0].resource[53].searchParam[2].documentation
        == "The identity of a patient to list administrations  for"
    )
    assert inst.rest[0].resource[53].searchParam[2].name == "patient"
    assert inst.rest[0].resource[53].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[53].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/medicationadministration-practitioner"
    )
    assert (
        inst.rest[0].resource[53].searchParam[3].documentation
        == "Who administered substance"
    )
    assert inst.rest[0].resource[53].searchParam[3].name == "practitioner"
    assert inst.rest[0].resource[53].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[53].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/medicationadministration-status"
    )
    assert (
        inst.rest[0].resource[53].searchParam[4].documentation
        == "MedicationAdministration event status (for example one of active/paused/completed/nullified)"
    )
    assert inst.rest[0].resource[53].searchParam[4].name == "status"
    assert inst.rest[0].resource[53].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[53].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/medicationadministration-prescription"
    )
    assert (
        inst.rest[0].resource[53].searchParam[5].documentation
        == "The identity of a prescription to list administrations from"
    )
    assert inst.rest[0].resource[53].searchParam[5].name == "prescription"
    assert inst.rest[0].resource[53].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[53].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/medicationadministration-device"
    )
    assert (
        inst.rest[0].resource[53].searchParam[6].documentation
        == "Return administrations with this administration device identity"
    )
    assert inst.rest[0].resource[53].searchParam[6].name == "device"
    assert inst.rest[0].resource[53].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[53].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/medicationadministration-notgiven"
    )
    assert (
        inst.rest[0].resource[53].searchParam[7].documentation
        == "Administrations that were not made"
    )
    assert inst.rest[0].resource[53].searchParam[7].name == "notgiven"
    assert inst.rest[0].resource[53].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[53].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/medicationadministration-code"
    )
    assert (
        inst.rest[0].resource[53].searchParam[8].documentation
        == "Return administrations of this medication code"
    )
    assert inst.rest[0].resource[53].searchParam[8].name == "code"
    assert inst.rest[0].resource[53].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[53].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/medicationadministration-encounter"
    )
    assert (
        inst.rest[0].resource[53].searchParam[9].documentation
        == "Return administrations that share this encounter"
    )
    assert inst.rest[0].resource[53].searchParam[9].name == "encounter"
    assert inst.rest[0].resource[53].searchParam[9].type == "reference"
    assert (
        inst.rest[0].resource[53].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/medicationadministration-identifier"
    )
    assert (
        inst.rest[0].resource[53].searchParam[10].documentation
        == "Return administrations with this external identifier"
    )
    assert inst.rest[0].resource[53].searchParam[10].name == "identifier"
    assert inst.rest[0].resource[53].searchParam[10].type == "token"
    assert inst.rest[0].resource[53].type == "MedicationAdministration"
    assert inst.rest[0].resource[54].conditionalCreate == True
    assert inst.rest[0].resource[54].conditionalDelete == "multiple"
    assert inst.rest[0].resource[54].conditionalUpdate == True
    assert inst.rest[0].resource[54].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[54].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[54].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[54].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[54].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[54].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[54].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[54].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[54].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[54].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[54].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[54].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[54].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[54].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[54].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[54].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[54].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[54].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[54].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/MedicationDispense"
    )
    assert inst.rest[0].resource[54].searchInclude[0] == "MedicationDispense.medication"
    assert inst.rest[0].resource[54].searchInclude[1] == "MedicationDispense.patient"
    assert inst.rest[0].resource[54].searchInclude[2] == "MedicationDispense.receiver"
    assert (
        inst.rest[0].resource[54].searchInclude[3] == "MedicationDispense.prescription"
    )
    assert (
        inst.rest[0].resource[54].searchInclude[4]
        == "MedicationDispense.responsibleparty"
    )
    assert inst.rest[0].resource[54].searchInclude[5] == "MedicationDispense.dispenser"
    assert (
        inst.rest[0].resource[54].searchInclude[6] == "MedicationDispense.destination"
    )
    assert (
        inst.rest[0].resource[54].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/medicationdispense-medication"
    )
    assert (
        inst.rest[0].resource[54].searchParam[0].documentation
        == "Return dispenses of this medicine resource"
    )
    assert inst.rest[0].resource[54].searchParam[0].name == "medication"
    assert inst.rest[0].resource[54].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[54].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/medicationdispense-patient"
    )
    assert (
        inst.rest[0].resource[54].searchParam[1].documentation
        == "The identity of a patient to list dispenses  for"
    )
    assert inst.rest[0].resource[54].searchParam[1].name == "patient"
    assert inst.rest[0].resource[54].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[54].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/medicationdispense-receiver"
    )
    assert (
        inst.rest[0].resource[54].searchParam[2].documentation
        == "Who collected the medication"
    )
    assert inst.rest[0].resource[54].searchParam[2].name == "receiver"
    assert inst.rest[0].resource[54].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[54].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/medicationdispense-status"
    )
    assert (
        inst.rest[0].resource[54].searchParam[3].documentation
        == "Status of the dispense"
    )
    assert inst.rest[0].resource[54].searchParam[3].name == "status"
    assert inst.rest[0].resource[54].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[54].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/medicationdispense-prescription"
    )
    assert (
        inst.rest[0].resource[54].searchParam[4].documentation
        == "The identity of a prescription to list dispenses from"
    )
    assert inst.rest[0].resource[54].searchParam[4].name == "prescription"
    assert inst.rest[0].resource[54].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[54].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/medicationdispense-responsibleparty"
    )
    assert (
        inst.rest[0].resource[54].searchParam[5].documentation
        == "Return all dispenses with the specified responsible party"
    )
    assert inst.rest[0].resource[54].searchParam[5].name == "responsibleparty"
    assert inst.rest[0].resource[54].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[54].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/medicationdispense-dispenser"
    )
    assert (
        inst.rest[0].resource[54].searchParam[6].documentation
        == "Return all dispenses performed by a specific individual"
    )
    assert inst.rest[0].resource[54].searchParam[6].name == "dispenser"
    assert inst.rest[0].resource[54].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[54].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/medicationdispense-code"
    )
    assert (
        inst.rest[0].resource[54].searchParam[7].documentation
        == "Return dispenses of this medicine code"
    )
    assert inst.rest[0].resource[54].searchParam[7].name == "code"
    assert inst.rest[0].resource[54].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[54].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/medicationdispense-type"
    )
    assert (
        inst.rest[0].resource[54].searchParam[8].documentation
        == "Return all dispenses of a specific type"
    )
    assert inst.rest[0].resource[54].searchParam[8].name == "type"
    assert inst.rest[0].resource[54].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[54].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/medicationdispense-identifier"
    )
    assert (
        inst.rest[0].resource[54].searchParam[9].documentation
        == "Return dispenses with this external identifier"
    )
    assert inst.rest[0].resource[54].searchParam[9].name == "identifier"
    assert inst.rest[0].resource[54].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[54].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/medicationdispense-whenprepared"
    )
    assert (
        inst.rest[0].resource[54].searchParam[10].documentation
        == "Date when medication prepared"
    )
    assert inst.rest[0].resource[54].searchParam[10].name == "whenprepared"
    assert inst.rest[0].resource[54].searchParam[10].type == "date"
    assert (
        inst.rest[0].resource[54].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/medicationdispense-whenhandedover"
    )
    assert (
        inst.rest[0].resource[54].searchParam[11].documentation
        == "Date when medication handed over to patient (outpatient setting), or supplied to ward or clinic (inpatient setting)"
    )
    assert inst.rest[0].resource[54].searchParam[11].name == "whenhandedover"
    assert inst.rest[0].resource[54].searchParam[11].type == "date"
    assert (
        inst.rest[0].resource[54].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/medicationdispense-destination"
    )
    assert (
        inst.rest[0].resource[54].searchParam[12].documentation
        == "Return dispenses that should be sent to a specific destination"
    )
    assert inst.rest[0].resource[54].searchParam[12].name == "destination"
    assert inst.rest[0].resource[54].searchParam[12].type == "reference"
    assert inst.rest[0].resource[54].type == "MedicationDispense"
    assert inst.rest[0].resource[55].conditionalCreate == True
    assert inst.rest[0].resource[55].conditionalDelete == "multiple"
    assert inst.rest[0].resource[55].conditionalUpdate == True
    assert inst.rest[0].resource[55].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[55].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[55].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[55].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[55].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[55].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[55].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[55].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[55].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[55].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[55].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[55].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[55].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[55].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[55].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[55].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[55].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[55].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[55].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/MedicationOrder"
    )
    assert inst.rest[0].resource[55].searchInclude[0] == "MedicationOrder.medication"
    assert inst.rest[0].resource[55].searchInclude[1] == "MedicationOrder.patient"
    assert inst.rest[0].resource[55].searchInclude[2] == "MedicationOrder.prescriber"
    assert inst.rest[0].resource[55].searchInclude[3] == "MedicationOrder.encounter"
    assert (
        inst.rest[0].resource[55].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/medicationorder-medication"
    )
    assert (
        inst.rest[0].resource[55].searchParam[0].documentation
        == "Return administrations of this medication reference"
    )
    assert inst.rest[0].resource[55].searchParam[0].name == "medication"
    assert inst.rest[0].resource[55].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[55].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/medicationorder-datewritten"
    )
    assert (
        inst.rest[0].resource[55].searchParam[1].documentation
        == "Return prescriptions written on this date"
    )
    assert inst.rest[0].resource[55].searchParam[1].name == "datewritten"
    assert inst.rest[0].resource[55].searchParam[1].type == "date"
    assert (
        inst.rest[0].resource[55].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/medicationorder-patient"
    )
    assert (
        inst.rest[0].resource[55].searchParam[2].documentation
        == "The identity of a patient to list orders  for"
    )
    assert inst.rest[0].resource[55].searchParam[2].name == "patient"
    assert inst.rest[0].resource[55].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[55].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/medicationorder-status"
    )
    assert (
        inst.rest[0].resource[55].searchParam[3].documentation
        == "Status of the prescription"
    )
    assert inst.rest[0].resource[55].searchParam[3].name == "status"
    assert inst.rest[0].resource[55].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[55].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/medicationorder-prescriber"
    )
    assert (
        inst.rest[0].resource[55].searchParam[4].documentation
        == "Who ordered the medication(s)"
    )
    assert inst.rest[0].resource[55].searchParam[4].name == "prescriber"
    assert inst.rest[0].resource[55].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[55].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/medicationorder-code"
    )
    assert (
        inst.rest[0].resource[55].searchParam[5].documentation
        == "Return administrations of this medication code"
    )
    assert inst.rest[0].resource[55].searchParam[5].name == "code"
    assert inst.rest[0].resource[55].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[55].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/medicationorder-encounter"
    )
    assert (
        inst.rest[0].resource[55].searchParam[6].documentation
        == "Return prescriptions with this encounter identifier"
    )
    assert inst.rest[0].resource[55].searchParam[6].name == "encounter"
    assert inst.rest[0].resource[55].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[55].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/medicationorder-identifier"
    )
    assert (
        inst.rest[0].resource[55].searchParam[7].documentation
        == "Return prescriptions with this external identifier"
    )
    assert inst.rest[0].resource[55].searchParam[7].name == "identifier"
    assert inst.rest[0].resource[55].searchParam[7].type == "token"
    assert inst.rest[0].resource[55].searchRevInclude[0] == "CarePlan.activityreference"
    assert inst.rest[0].resource[55].searchRevInclude[1] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[55].searchRevInclude[2] == "ClinicalImpression.action"
    assert (
        inst.rest[0].resource[55].searchRevInclude[3]
        == "MedicationAdministration.prescription"
    )
    assert (
        inst.rest[0].resource[55].searchRevInclude[4]
        == "MedicationDispense.prescription"
    )
    assert inst.rest[0].resource[55].type == "MedicationOrder"
    assert inst.rest[0].resource[56].conditionalCreate == True
    assert inst.rest[0].resource[56].conditionalDelete == "multiple"
    assert inst.rest[0].resource[56].conditionalUpdate == True
    assert inst.rest[0].resource[56].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[56].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[56].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[56].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[56].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[56].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[56].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[56].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[56].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[56].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[56].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[56].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[56].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[56].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[56].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[56].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[56].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[56].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[56].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/MedicationStatement"
    )
    assert (
        inst.rest[0].resource[56].searchInclude[0] == "MedicationStatement.medication"
    )
    assert inst.rest[0].resource[56].searchInclude[1] == "MedicationStatement.patient"
    assert inst.rest[0].resource[56].searchInclude[2] == "MedicationStatement.source"
    assert (
        inst.rest[0].resource[56].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/medicationstatement-medication"
    )
    assert (
        inst.rest[0].resource[56].searchParam[0].documentation
        == "Return administrations of this medication reference"
    )
    assert inst.rest[0].resource[56].searchParam[0].name == "medication"
    assert inst.rest[0].resource[56].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[56].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/medicationstatement-patient"
    )
    assert (
        inst.rest[0].resource[56].searchParam[1].documentation
        == "The identity of a patient to list statements  for"
    )
    assert inst.rest[0].resource[56].searchParam[1].name == "patient"
    assert inst.rest[0].resource[56].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[56].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/medicationstatement-source"
    )
    assert (
        inst.rest[0].resource[56].searchParam[2].documentation
        == "Who the information in the statement came from"
    )
    assert inst.rest[0].resource[56].searchParam[2].name == "source"
    assert inst.rest[0].resource[56].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[56].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/medicationstatement-status"
    )
    assert (
        inst.rest[0].resource[56].searchParam[3].documentation
        == "Return statements that match the given status"
    )
    assert inst.rest[0].resource[56].searchParam[3].name == "status"
    assert inst.rest[0].resource[56].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[56].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/medicationstatement-code"
    )
    assert (
        inst.rest[0].resource[56].searchParam[4].documentation
        == "Return administrations of this medication code"
    )
    assert inst.rest[0].resource[56].searchParam[4].name == "code"
    assert inst.rest[0].resource[56].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[56].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/medicationstatement-identifier"
    )
    assert (
        inst.rest[0].resource[56].searchParam[5].documentation
        == "Return statements with this external identifier"
    )
    assert inst.rest[0].resource[56].searchParam[5].name == "identifier"
    assert inst.rest[0].resource[56].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[56].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/medicationstatement-effectivedate"
    )
    assert (
        inst.rest[0].resource[56].searchParam[6].documentation
        == "Date when patient was taking (or not taking) the medication"
    )
    assert inst.rest[0].resource[56].searchParam[6].name == "effectivedate"
    assert inst.rest[0].resource[56].searchParam[6].type == "date"
    assert inst.rest[0].resource[56].type == "MedicationStatement"
    assert inst.rest[0].resource[57].conditionalCreate == True
    assert inst.rest[0].resource[57].conditionalDelete == "multiple"
    assert inst.rest[0].resource[57].conditionalUpdate == True
    assert inst.rest[0].resource[57].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[57].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[57].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[57].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[57].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[57].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[57].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[57].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[57].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[57].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[57].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[57].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[57].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[57].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[57].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[57].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[57].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[57].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[57].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/MessageHeader"
    )
    assert inst.rest[0].resource[57].searchInclude[0] == "MessageHeader.receiver"
    assert inst.rest[0].resource[57].searchInclude[1] == "MessageHeader.responsible"
    assert inst.rest[0].resource[57].searchInclude[2] == "MessageHeader.data"
    assert inst.rest[0].resource[57].searchInclude[3] == "MessageHeader.author"
    assert inst.rest[0].resource[57].searchInclude[4] == "MessageHeader.enterer"
    assert inst.rest[0].resource[57].searchInclude[5] == "MessageHeader.target"
    assert (
        inst.rest[0].resource[57].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-destination-uri"
    )
    assert (
        inst.rest[0].resource[57].searchParam[0].documentation
        == "Actual destination address or id"
    )
    assert inst.rest[0].resource[57].searchParam[0].name == "destination-uri"
    assert inst.rest[0].resource[57].searchParam[0].type == "uri"
    assert (
        inst.rest[0].resource[57].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-receiver"
    )
    assert (
        inst.rest[0].resource[57].searchParam[1].documentation
        == 'Intended "real-world" recipient for the data'
    )
    assert inst.rest[0].resource[57].searchParam[1].name == "receiver"
    assert inst.rest[0].resource[57].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[57].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-responsible"
    )
    assert (
        inst.rest[0].resource[57].searchParam[2].documentation
        == "Final responsibility for event"
    )
    assert inst.rest[0].resource[57].searchParam[2].name == "responsible"
    assert inst.rest[0].resource[57].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[57].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-data"
    )
    assert (
        inst.rest[0].resource[57].searchParam[3].documentation
        == "The actual content of the message"
    )
    assert inst.rest[0].resource[57].searchParam[3].name == "data"
    assert inst.rest[0].resource[57].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[57].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-code"
    )
    assert (
        inst.rest[0].resource[57].searchParam[4].documentation
        == "ok | transient-error | fatal-error"
    )
    assert inst.rest[0].resource[57].searchParam[4].name == "code"
    assert inst.rest[0].resource[57].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[57].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-response-id"
    )
    assert (
        inst.rest[0].resource[57].searchParam[5].documentation
        == "Id of original message"
    )
    assert inst.rest[0].resource[57].searchParam[5].name == "response-id"
    assert inst.rest[0].resource[57].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[57].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-destination"
    )
    assert inst.rest[0].resource[57].searchParam[6].documentation == "Name of system"
    assert inst.rest[0].resource[57].searchParam[6].name == "destination"
    assert inst.rest[0].resource[57].searchParam[6].type == "string"
    assert (
        inst.rest[0].resource[57].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-timestamp"
    )
    assert (
        inst.rest[0].resource[57].searchParam[7].documentation
        == "Time that the message was sent"
    )
    assert inst.rest[0].resource[57].searchParam[7].name == "timestamp"
    assert inst.rest[0].resource[57].searchParam[7].type == "date"
    assert (
        inst.rest[0].resource[57].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-author"
    )
    assert (
        inst.rest[0].resource[57].searchParam[8].documentation
        == "The source of the decision"
    )
    assert inst.rest[0].resource[57].searchParam[8].name == "author"
    assert inst.rest[0].resource[57].searchParam[8].type == "reference"
    assert (
        inst.rest[0].resource[57].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-source-uri"
    )
    assert (
        inst.rest[0].resource[57].searchParam[9].documentation
        == "Actual message source address or id"
    )
    assert inst.rest[0].resource[57].searchParam[9].name == "source-uri"
    assert inst.rest[0].resource[57].searchParam[9].type == "uri"
    assert (
        inst.rest[0].resource[57].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-source"
    )
    assert inst.rest[0].resource[57].searchParam[10].documentation == "Name of system"
    assert inst.rest[0].resource[57].searchParam[10].name == "source"
    assert inst.rest[0].resource[57].searchParam[10].type == "string"
    assert (
        inst.rest[0].resource[57].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-enterer"
    )
    assert (
        inst.rest[0].resource[57].searchParam[11].documentation
        == "The source of the data entry"
    )
    assert inst.rest[0].resource[57].searchParam[11].name == "enterer"
    assert inst.rest[0].resource[57].searchParam[11].type == "reference"
    assert (
        inst.rest[0].resource[57].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-event"
    )
    assert (
        inst.rest[0].resource[57].searchParam[12].documentation
        == "Code for the event this message represents"
    )
    assert inst.rest[0].resource[57].searchParam[12].name == "event"
    assert inst.rest[0].resource[57].searchParam[12].type == "token"
    assert (
        inst.rest[0].resource[57].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/messageheader-target"
    )
    assert (
        inst.rest[0].resource[57].searchParam[13].documentation
        == "Particular delivery destination within the destination"
    )
    assert inst.rest[0].resource[57].searchParam[13].name == "target"
    assert inst.rest[0].resource[57].searchParam[13].type == "reference"
    assert inst.rest[0].resource[57].type == "MessageHeader"
    assert inst.rest[0].resource[58].conditionalCreate == True
    assert inst.rest[0].resource[58].conditionalDelete == "multiple"
    assert inst.rest[0].resource[58].conditionalUpdate == True
    assert inst.rest[0].resource[58].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[58].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[58].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[58].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[58].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[58].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[58].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[58].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[58].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[58].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[58].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[58].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[58].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[58].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[58].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[58].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[58].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[58].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[58].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/NamingSystem"
    )
    assert inst.rest[0].resource[58].searchInclude[0] == "NamingSystem.replaced-by"
    assert (
        inst.rest[0].resource[58].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-responsible"
    )
    assert (
        inst.rest[0].resource[58].searchParam[0].documentation
        == "Who maintains system namespace?"
    )
    assert inst.rest[0].resource[58].searchParam[0].name == "responsible"
    assert inst.rest[0].resource[58].searchParam[0].type == "string"
    assert (
        inst.rest[0].resource[58].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-status"
    )
    assert (
        inst.rest[0].resource[58].searchParam[1].documentation
        == "draft | active | retired"
    )
    assert inst.rest[0].resource[58].searchParam[1].name == "status"
    assert inst.rest[0].resource[58].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[58].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-type"
    )
    assert (
        inst.rest[0].resource[58].searchParam[2].documentation
        == "e.g. driver,  provider,  patient, bank etc."
    )
    assert inst.rest[0].resource[58].searchParam[2].name == "type"
    assert inst.rest[0].resource[58].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[58].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-date"
    )
    assert (
        inst.rest[0].resource[58].searchParam[3].documentation
        == "Publication Date(/time)"
    )
    assert inst.rest[0].resource[58].searchParam[3].name == "date"
    assert inst.rest[0].resource[58].searchParam[3].type == "date"
    assert (
        inst.rest[0].resource[58].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-period"
    )
    assert (
        inst.rest[0].resource[58].searchParam[4].documentation
        == "When is identifier valid?"
    )
    assert inst.rest[0].resource[58].searchParam[4].name == "period"
    assert inst.rest[0].resource[58].searchParam[4].type == "date"
    assert (
        inst.rest[0].resource[58].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-contact"
    )
    assert (
        inst.rest[0].resource[58].searchParam[5].documentation
        == "Name of a individual to contact"
    )
    assert inst.rest[0].resource[58].searchParam[5].name == "contact"
    assert inst.rest[0].resource[58].searchParam[5].type == "string"
    assert (
        inst.rest[0].resource[58].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-kind"
    )
    assert (
        inst.rest[0].resource[58].searchParam[6].documentation
        == "codesystem | identifier | root"
    )
    assert inst.rest[0].resource[58].searchParam[6].name == "kind"
    assert inst.rest[0].resource[58].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[58].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-publisher"
    )
    assert (
        inst.rest[0].resource[58].searchParam[7].documentation
        == "Name of the publisher (Organization or individual)"
    )
    assert inst.rest[0].resource[58].searchParam[7].name == "publisher"
    assert inst.rest[0].resource[58].searchParam[7].type == "string"
    assert (
        inst.rest[0].resource[58].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-id-type"
    )
    assert (
        inst.rest[0].resource[58].searchParam[8].documentation
        == "oid | uuid | uri | other"
    )
    assert inst.rest[0].resource[58].searchParam[8].name == "id-type"
    assert inst.rest[0].resource[58].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[58].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-name"
    )
    assert (
        inst.rest[0].resource[58].searchParam[9].documentation == "Human-readable label"
    )
    assert inst.rest[0].resource[58].searchParam[9].name == "name"
    assert inst.rest[0].resource[58].searchParam[9].type == "string"
    assert (
        inst.rest[0].resource[58].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-context"
    )
    assert (
        inst.rest[0].resource[58].searchParam[10].documentation
        == "Content intends to support these contexts"
    )
    assert inst.rest[0].resource[58].searchParam[10].name == "context"
    assert inst.rest[0].resource[58].searchParam[10].type == "token"
    assert (
        inst.rest[0].resource[58].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-value"
    )
    assert (
        inst.rest[0].resource[58].searchParam[11].documentation
        == "The unique identifier"
    )
    assert inst.rest[0].resource[58].searchParam[11].name == "value"
    assert inst.rest[0].resource[58].searchParam[11].type == "string"
    assert (
        inst.rest[0].resource[58].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-telecom"
    )
    assert (
        inst.rest[0].resource[58].searchParam[12].documentation
        == "Contact details for individual or publisher"
    )
    assert inst.rest[0].resource[58].searchParam[12].name == "telecom"
    assert inst.rest[0].resource[58].searchParam[12].type == "token"
    assert (
        inst.rest[0].resource[58].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/namingsystem-replaced-by"
    )
    assert inst.rest[0].resource[58].searchParam[13].documentation == "Use this instead"
    assert inst.rest[0].resource[58].searchParam[13].name == "replaced-by"
    assert inst.rest[0].resource[58].searchParam[13].type == "reference"
    assert inst.rest[0].resource[58].searchRevInclude[0] == "NamingSystem.replaced-by"
    assert inst.rest[0].resource[58].type == "NamingSystem"
    assert inst.rest[0].resource[59].conditionalCreate == True
    assert inst.rest[0].resource[59].conditionalDelete == "multiple"
    assert inst.rest[0].resource[59].conditionalUpdate == True
    assert inst.rest[0].resource[59].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[59].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[59].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[59].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[59].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[59].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[59].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[59].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[59].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[59].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[59].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[59].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[59].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[59].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[59].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[59].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[59].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[59].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[59].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/NutritionOrder"
    )
    assert inst.rest[0].resource[59].searchInclude[0] == "NutritionOrder.patient"
    assert inst.rest[0].resource[59].searchInclude[1] == "NutritionOrder.provider"
    assert inst.rest[0].resource[59].searchInclude[2] == "NutritionOrder.encounter"
    assert (
        inst.rest[0].resource[59].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/nutritionorder-patient"
    )
    assert (
        inst.rest[0].resource[59].searchParam[0].documentation
        == "The identity of the person who requires the diet, formula or nutritional supplement"
    )
    assert inst.rest[0].resource[59].searchParam[0].name == "patient"
    assert inst.rest[0].resource[59].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[59].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/nutritionorder-status"
    )
    assert (
        inst.rest[0].resource[59].searchParam[1].documentation
        == "Status of the nutrition order."
    )
    assert inst.rest[0].resource[59].searchParam[1].name == "status"
    assert inst.rest[0].resource[59].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[59].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/nutritionorder-supplement"
    )
    assert (
        inst.rest[0].resource[59].searchParam[2].documentation
        == "Type of supplement product requested"
    )
    assert inst.rest[0].resource[59].searchParam[2].name == "supplement"
    assert inst.rest[0].resource[59].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[59].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/nutritionorder-oraldiet"
    )
    assert (
        inst.rest[0].resource[59].searchParam[3].documentation
        == "Type of diet that can be consumed orally (i.e., take via the mouth)."
    )
    assert inst.rest[0].resource[59].searchParam[3].name == "oraldiet"
    assert inst.rest[0].resource[59].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[59].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/nutritionorder-provider"
    )
    assert (
        inst.rest[0].resource[59].searchParam[4].documentation
        == "The identify of the provider who placed the nutrition order"
    )
    assert inst.rest[0].resource[59].searchParam[4].name == "provider"
    assert inst.rest[0].resource[59].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[59].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/nutritionorder-encounter"
    )
    assert (
        inst.rest[0].resource[59].searchParam[5].documentation
        == "Return nutrition orders with this encounter identifier"
    )
    assert inst.rest[0].resource[59].searchParam[5].name == "encounter"
    assert inst.rest[0].resource[59].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[59].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/nutritionorder-datetime"
    )
    assert (
        inst.rest[0].resource[59].searchParam[6].documentation
        == "Return nutrition orders requested on this date"
    )
    assert inst.rest[0].resource[59].searchParam[6].name == "datetime"
    assert inst.rest[0].resource[59].searchParam[6].type == "date"
    assert (
        inst.rest[0].resource[59].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/nutritionorder-additive"
    )
    assert (
        inst.rest[0].resource[59].searchParam[7].documentation
        == "Type of module component to add to the feeding"
    )
    assert inst.rest[0].resource[59].searchParam[7].name == "additive"
    assert inst.rest[0].resource[59].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[59].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/nutritionorder-identifier"
    )
    assert (
        inst.rest[0].resource[59].searchParam[8].documentation
        == "Return nutrition orders with this external identifier"
    )
    assert inst.rest[0].resource[59].searchParam[8].name == "identifier"
    assert inst.rest[0].resource[59].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[59].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/nutritionorder-formula"
    )
    assert (
        inst.rest[0].resource[59].searchParam[9].documentation
        == "Type of enteral or infant formula"
    )
    assert inst.rest[0].resource[59].searchParam[9].name == "formula"
    assert inst.rest[0].resource[59].searchParam[9].type == "token"
    assert inst.rest[0].resource[59].searchRevInclude[0] == "CarePlan.activityreference"
    assert inst.rest[0].resource[59].searchRevInclude[1] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[59].searchRevInclude[2] == "ClinicalImpression.action"
    assert inst.rest[0].resource[59].type == "NutritionOrder"
    assert inst.rest[0].resource[60].conditionalCreate == True
    assert inst.rest[0].resource[60].conditionalDelete == "multiple"
    assert inst.rest[0].resource[60].conditionalUpdate == True
    assert inst.rest[0].resource[60].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[60].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[60].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[60].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[60].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[60].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[60].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[60].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[60].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[60].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[60].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[60].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[60].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[60].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[60].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[60].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[60].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[60].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[60].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Observation"
    )
    assert inst.rest[0].resource[60].searchInclude[0] == "Observation.subject"
    assert inst.rest[0].resource[60].searchInclude[1] == "Observation.encounter"
    assert inst.rest[0].resource[60].searchInclude[2] == "Observation.patient"
    assert inst.rest[0].resource[60].searchInclude[3] == "Observation.specimen"
    assert inst.rest[0].resource[60].searchInclude[4] == "Observation.related-target"
    assert inst.rest[0].resource[60].searchInclude[5] == "Observation.device"
    assert inst.rest[0].resource[60].searchInclude[6] == "Observation.performer"
    assert (
        inst.rest[0].resource[60].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/observation-subject"
    )
    assert (
        inst.rest[0].resource[60].searchParam[0].documentation
        == "The subject that the observation is about"
    )
    assert inst.rest[0].resource[60].searchParam[0].name == "subject"
    assert inst.rest[0].resource[60].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[60].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/observation-encounter"
    )
    assert (
        inst.rest[0].resource[60].searchParam[1].documentation
        == "Healthcare event related to the observation"
    )
    assert inst.rest[0].resource[60].searchParam[1].name == "encounter"
    assert inst.rest[0].resource[60].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[60].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/observation-date"
    )
    assert (
        inst.rest[0].resource[60].searchParam[2].documentation
        == "Obtained date/time. If the obtained element is a period, a date that falls in the period"
    )
    assert inst.rest[0].resource[60].searchParam[2].name == "date"
    assert inst.rest[0].resource[60].searchParam[2].type == "date"
    assert (
        inst.rest[0].resource[60].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/observation-component-value-quantity"
    )
    assert (
        inst.rest[0].resource[60].searchParam[3].documentation
        == "The value of the component observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)"
    )
    assert inst.rest[0].resource[60].searchParam[3].name == "component-value-quantity"
    assert inst.rest[0].resource[60].searchParam[3].type == "quantity"
    assert (
        inst.rest[0].resource[60].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/observation-related"
    )
    assert (
        inst.rest[0].resource[60].searchParam[4].documentation
        == "Related Observations - search on related-type and related-target together"
    )
    assert inst.rest[0].resource[60].searchParam[4].name == "related"
    assert inst.rest[0].resource[60].searchParam[4].type == "composite"
    assert (
        inst.rest[0].resource[60].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/observation-patient"
    )
    assert (
        inst.rest[0].resource[60].searchParam[5].documentation
        == "The subject that the observation is about (if patient)"
    )
    assert inst.rest[0].resource[60].searchParam[5].name == "patient"
    assert inst.rest[0].resource[60].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[60].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/observation-specimen"
    )
    assert (
        inst.rest[0].resource[60].searchParam[6].documentation
        == "Specimen used for this observation"
    )
    assert inst.rest[0].resource[60].searchParam[6].name == "specimen"
    assert inst.rest[0].resource[60].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[60].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/observation-component-value-concept"
    )
    assert (
        inst.rest[0].resource[60].searchParam[7].documentation
        == "The value of the component observation, if the value is a CodeableConcept"
    )
    assert inst.rest[0].resource[60].searchParam[7].name == "component-value-concept"
    assert inst.rest[0].resource[60].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[60].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/observation-component-code-value"
    )
    assert (
        inst.rest[0].resource[60].searchParam[8].documentation
        == "Both component code and one of the component value parameters"
    )
    assert inst.rest[0].resource[60].searchParam[8].name == "component-code-value-[x]"
    assert inst.rest[0].resource[60].searchParam[8].type == "composite"
    assert (
        inst.rest[0].resource[60].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/observation-value-quantity"
    )
    assert (
        inst.rest[0].resource[60].searchParam[9].documentation
        == "The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)"
    )
    assert inst.rest[0].resource[60].searchParam[9].name == "value-quantity"
    assert inst.rest[0].resource[60].searchParam[9].type == "quantity"
    assert (
        inst.rest[0].resource[60].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/observation-value-date"
    )
    assert (
        inst.rest[0].resource[60].searchParam[10].documentation
        == "The value of the observation, if the value is a date or period of time"
    )
    assert inst.rest[0].resource[60].searchParam[10].name == "value-date"
    assert inst.rest[0].resource[60].searchParam[10].type == "date"
    assert (
        inst.rest[0].resource[60].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/observation-value-string"
    )
    assert (
        inst.rest[0].resource[60].searchParam[11].documentation
        == "The value of the observation, if the value is a string, and also searches in CodeableConcept.text"
    )
    assert inst.rest[0].resource[60].searchParam[11].name == "value-string"
    assert inst.rest[0].resource[60].searchParam[11].type == "string"
    assert (
        inst.rest[0].resource[60].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/observation-component-code"
    )
    assert (
        inst.rest[0].resource[60].searchParam[12].documentation
        == "The component code of the observation type"
    )
    assert inst.rest[0].resource[60].searchParam[12].name == "component-code"
    assert inst.rest[0].resource[60].searchParam[12].type == "token"
    assert (
        inst.rest[0].resource[60].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/observation-status"
    )
    assert (
        inst.rest[0].resource[60].searchParam[13].documentation
        == "The status of the observation"
    )
    assert inst.rest[0].resource[60].searchParam[13].name == "status"
    assert inst.rest[0].resource[60].searchParam[13].type == "token"
    assert (
        inst.rest[0].resource[60].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/observation-value-concept"
    )
    assert (
        inst.rest[0].resource[60].searchParam[14].documentation
        == "The value of the observation, if the value is a CodeableConcept"
    )
    assert inst.rest[0].resource[60].searchParam[14].name == "value-concept"
    assert inst.rest[0].resource[60].searchParam[14].type == "token"
    assert (
        inst.rest[0].resource[60].searchParam[15].definition
        == "http://hl7.org/fhir/SearchParameter/observation-code"
    )
    assert (
        inst.rest[0].resource[60].searchParam[15].documentation
        == "The code of the observation type"
    )
    assert inst.rest[0].resource[60].searchParam[15].name == "code"
    assert inst.rest[0].resource[60].searchParam[15].type == "token"
    assert (
        inst.rest[0].resource[60].searchParam[16].definition
        == "http://hl7.org/fhir/SearchParameter/observation-related-target"
    )
    assert (
        inst.rest[0].resource[60].searchParam[16].documentation
        == "Resource that is related to this one"
    )
    assert inst.rest[0].resource[60].searchParam[16].name == "related-target"
    assert inst.rest[0].resource[60].searchParam[16].type == "reference"
    assert (
        inst.rest[0].resource[60].searchParam[17].definition
        == "http://hl7.org/fhir/SearchParameter/observation-data-absent-reason"
    )
    assert (
        inst.rest[0].resource[60].searchParam[17].documentation
        == "The reason why the expected value in the element Observation.value[x] is missing."
    )
    assert inst.rest[0].resource[60].searchParam[17].name == "data-absent-reason"
    assert inst.rest[0].resource[60].searchParam[17].type == "token"
    assert (
        inst.rest[0].resource[60].searchParam[18].definition
        == "http://hl7.org/fhir/SearchParameter/observation-category"
    )
    assert (
        inst.rest[0].resource[60].searchParam[18].documentation
        == "The classification of the type of observation"
    )
    assert inst.rest[0].resource[60].searchParam[18].name == "category"
    assert inst.rest[0].resource[60].searchParam[18].type == "token"
    assert (
        inst.rest[0].resource[60].searchParam[19].definition
        == "http://hl7.org/fhir/SearchParameter/observation-component-data-absent-reason"
    )
    assert (
        inst.rest[0].resource[60].searchParam[19].documentation
        == "The reason why the expected value in the element Observation.component.value[x] is missing."
    )
    assert (
        inst.rest[0].resource[60].searchParam[19].name == "component-data-absent-reason"
    )
    assert inst.rest[0].resource[60].searchParam[19].type == "token"
    assert (
        inst.rest[0].resource[60].searchParam[20].definition
        == "http://hl7.org/fhir/SearchParameter/observation-device"
    )
    assert (
        inst.rest[0].resource[60].searchParam[20].documentation
        == "The Device that generated the observation data."
    )
    assert inst.rest[0].resource[60].searchParam[20].name == "device"
    assert inst.rest[0].resource[60].searchParam[20].type == "reference"
    assert (
        inst.rest[0].resource[60].searchParam[21].definition
        == "http://hl7.org/fhir/SearchParameter/observation-related-type"
    )
    assert (
        inst.rest[0].resource[60].searchParam[21].documentation
        == "has-member | derived-from | sequel-to | replaces | qualified-by | interfered-by"
    )
    assert inst.rest[0].resource[60].searchParam[21].name == "related-type"
    assert inst.rest[0].resource[60].searchParam[21].type == "token"
    assert (
        inst.rest[0].resource[60].searchParam[22].definition
        == "http://hl7.org/fhir/SearchParameter/observation-performer"
    )
    assert (
        inst.rest[0].resource[60].searchParam[22].documentation
        == "Who performed the observation"
    )
    assert inst.rest[0].resource[60].searchParam[22].name == "performer"
    assert inst.rest[0].resource[60].searchParam[22].type == "reference"
    assert (
        inst.rest[0].resource[60].searchParam[23].definition
        == "http://hl7.org/fhir/SearchParameter/observation-identifier"
    )
    assert (
        inst.rest[0].resource[60].searchParam[23].documentation
        == "The unique id for a particular observation"
    )
    assert inst.rest[0].resource[60].searchParam[23].name == "identifier"
    assert inst.rest[0].resource[60].searchParam[23].type == "token"
    assert (
        inst.rest[0].resource[60].searchParam[24].definition
        == "http://hl7.org/fhir/SearchParameter/observation-code-value"
    )
    assert (
        inst.rest[0].resource[60].searchParam[24].documentation
        == "Both code and one of the value parameters"
    )
    assert inst.rest[0].resource[60].searchParam[24].name == "code-value-[x]"
    assert inst.rest[0].resource[60].searchParam[24].type == "composite"
    assert (
        inst.rest[0].resource[60].searchParam[25].definition
        == "http://hl7.org/fhir/SearchParameter/observation-component-value-string"
    )
    assert (
        inst.rest[0].resource[60].searchParam[25].documentation
        == "The value of the component observation, if the value is a string, and also searches in CodeableConcept.text"
    )
    assert inst.rest[0].resource[60].searchParam[25].name == "component-value-string"
    assert inst.rest[0].resource[60].searchParam[25].type == "string"
    assert (
        inst.rest[0].resource[60].searchRevInclude[0]
        == "ClinicalImpression.investigation"
    )
    assert inst.rest[0].resource[60].searchRevInclude[1] == "DiagnosticReport.result"
    assert inst.rest[0].resource[60].searchRevInclude[2] == "Immunization.reaction"
    assert (
        inst.rest[0].resource[60].searchRevInclude[3]
        == "ImmunizationRecommendation.information"
    )
    assert inst.rest[0].resource[60].searchRevInclude[4] == "Observation.related-target"
    assert inst.rest[0].resource[60].type == "Observation"
    assert inst.rest[0].resource[61].conditionalCreate == True
    assert inst.rest[0].resource[61].conditionalDelete == "multiple"
    assert inst.rest[0].resource[61].conditionalUpdate == True
    assert inst.rest[0].resource[61].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[61].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[61].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[61].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[61].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[61].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[61].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[61].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[61].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[61].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[61].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[61].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[61].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[61].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[61].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[61].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[61].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[61].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[61].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/OperationDefinition"
    )
    assert inst.rest[0].resource[61].searchInclude[0] == "OperationDefinition.base"
    assert inst.rest[0].resource[61].searchInclude[1] == "OperationDefinition.profile"
    assert (
        inst.rest[0].resource[61].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/operationdefinition-status"
    )
    assert (
        inst.rest[0].resource[61].searchParam[0].documentation
        == "draft | active | retired"
    )
    assert inst.rest[0].resource[61].searchParam[0].name == "status"
    assert inst.rest[0].resource[61].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[61].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/operationdefinition-code"
    )
    assert (
        inst.rest[0].resource[61].searchParam[1].documentation
        == "Name used to invoke the operation"
    )
    assert inst.rest[0].resource[61].searchParam[1].name == "code"
    assert inst.rest[0].resource[61].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[61].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/operationdefinition-date"
    )
    assert (
        inst.rest[0].resource[61].searchParam[2].documentation
        == "Date for this version of the operation definition"
    )
    assert inst.rest[0].resource[61].searchParam[2].name == "date"
    assert inst.rest[0].resource[61].searchParam[2].type == "date"
    assert (
        inst.rest[0].resource[61].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/operationdefinition-type"
    )
    assert (
        inst.rest[0].resource[61].searchParam[3].documentation
        == "Invoke at resource level for these type"
    )
    assert inst.rest[0].resource[61].searchParam[3].name == "type"
    assert inst.rest[0].resource[61].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[61].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/operationdefinition-url"
    )
    assert (
        inst.rest[0].resource[61].searchParam[4].documentation
        == "Logical URL to reference this operation definition"
    )
    assert inst.rest[0].resource[61].searchParam[4].name == "url"
    assert inst.rest[0].resource[61].searchParam[4].type == "uri"
    assert (
        inst.rest[0].resource[61].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/operationdefinition-kind"
    )
    assert inst.rest[0].resource[61].searchParam[5].documentation == "operation | query"
    assert inst.rest[0].resource[61].searchParam[5].name == "kind"
    assert inst.rest[0].resource[61].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[61].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/operationdefinition-version"
    )
    assert (
        inst.rest[0].resource[61].searchParam[6].documentation
        == "Logical id for this version of the operation definition"
    )
    assert inst.rest[0].resource[61].searchParam[6].name == "version"
    assert inst.rest[0].resource[61].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[61].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/operationdefinition-publisher"
    )
    assert (
        inst.rest[0].resource[61].searchParam[7].documentation
        == "Name of the publisher (Organization or individual)"
    )
    assert inst.rest[0].resource[61].searchParam[7].name == "publisher"
    assert inst.rest[0].resource[61].searchParam[7].type == "string"
    assert (
        inst.rest[0].resource[61].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/operationdefinition-system"
    )
    assert (
        inst.rest[0].resource[61].searchParam[8].documentation
        == "Invoke at the system level?"
    )
    assert inst.rest[0].resource[61].searchParam[8].name == "system"
    assert inst.rest[0].resource[61].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[61].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/operationdefinition-name"
    )
    assert (
        inst.rest[0].resource[61].searchParam[9].documentation
        == "Informal name for this operation"
    )
    assert inst.rest[0].resource[61].searchParam[9].name == "name"
    assert inst.rest[0].resource[61].searchParam[9].type == "string"
    assert (
        inst.rest[0].resource[61].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/operationdefinition-base"
    )
    assert (
        inst.rest[0].resource[61].searchParam[10].documentation
        == "Marks this as a profile of the base"
    )
    assert inst.rest[0].resource[61].searchParam[10].name == "base"
    assert inst.rest[0].resource[61].searchParam[10].type == "reference"
    assert (
        inst.rest[0].resource[61].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/operationdefinition-instance"
    )
    assert (
        inst.rest[0].resource[61].searchParam[11].documentation
        == "Invoke on an instance?"
    )
    assert inst.rest[0].resource[61].searchParam[11].name == "instance"
    assert inst.rest[0].resource[61].searchParam[11].type == "token"
    assert (
        inst.rest[0].resource[61].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/operationdefinition-profile"
    )
    assert (
        inst.rest[0].resource[61].searchParam[12].documentation == "Profile on the type"
    )
    assert inst.rest[0].resource[61].searchParam[12].name == "profile"
    assert inst.rest[0].resource[61].searchParam[12].type == "reference"
    assert inst.rest[0].resource[61].searchRevInclude[0] == "OperationDefinition.base"
    assert inst.rest[0].resource[61].type == "OperationDefinition"
    assert inst.rest[0].resource[62].conditionalCreate == True
    assert inst.rest[0].resource[62].conditionalDelete == "multiple"
    assert inst.rest[0].resource[62].conditionalUpdate == True
    assert inst.rest[0].resource[62].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[62].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[62].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[62].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[62].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[62].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[62].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[62].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[62].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[62].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[62].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[62].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[62].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[62].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[62].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[62].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[62].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[62].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[62].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/OperationOutcome"
    )
    assert inst.rest[0].resource[62].type == "OperationOutcome"
    assert inst.rest[0].resource[63].conditionalCreate == True
    assert inst.rest[0].resource[63].conditionalDelete == "multiple"
    assert inst.rest[0].resource[63].conditionalUpdate == True
    assert inst.rest[0].resource[63].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[63].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[63].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[63].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[63].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[63].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[63].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[63].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[63].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[63].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[63].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[63].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[63].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[63].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[63].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[63].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[63].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[63].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[63].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Order"
    )
    assert inst.rest[0].resource[63].searchInclude[0] == "Order.detail"
    assert inst.rest[0].resource[63].searchInclude[1] == "Order.patient"
    assert inst.rest[0].resource[63].searchInclude[2] == "Order.source"
    assert inst.rest[0].resource[63].searchInclude[3] == "Order.subject"
    assert inst.rest[0].resource[63].searchInclude[4] == "Order.target"
    assert (
        inst.rest[0].resource[63].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/order-detail"
    )
    assert (
        inst.rest[0].resource[63].searchParam[0].documentation
        == "What action is being ordered"
    )
    assert inst.rest[0].resource[63].searchParam[0].name == "detail"
    assert inst.rest[0].resource[63].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[63].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/order-patient"
    )
    assert (
        inst.rest[0].resource[63].searchParam[1].documentation
        == "Patient this order is about"
    )
    assert inst.rest[0].resource[63].searchParam[1].name == "patient"
    assert inst.rest[0].resource[63].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[63].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/order-source"
    )
    assert (
        inst.rest[0].resource[63].searchParam[2].documentation
        == "Who initiated the order"
    )
    assert inst.rest[0].resource[63].searchParam[2].name == "source"
    assert inst.rest[0].resource[63].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[63].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/order-subject"
    )
    assert (
        inst.rest[0].resource[63].searchParam[3].documentation
        == "Patient this order is about"
    )
    assert inst.rest[0].resource[63].searchParam[3].name == "subject"
    assert inst.rest[0].resource[63].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[63].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/order-when"
    )
    assert inst.rest[0].resource[63].searchParam[4].documentation == "A formal schedule"
    assert inst.rest[0].resource[63].searchParam[4].name == "when"
    assert inst.rest[0].resource[63].searchParam[4].type == "date"
    assert (
        inst.rest[0].resource[63].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/order-target"
    )
    assert (
        inst.rest[0].resource[63].searchParam[5].documentation
        == "Who is intended to fulfill the order"
    )
    assert inst.rest[0].resource[63].searchParam[5].name == "target"
    assert inst.rest[0].resource[63].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[63].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/order-whencode"
    )
    assert (
        inst.rest[0].resource[63].searchParam[6].documentation
        == "Code specifies when request should be done. The code may simply be a priority code"
    )
    assert inst.rest[0].resource[63].searchParam[6].name == "when_code"
    assert inst.rest[0].resource[63].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[63].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/order-date"
    )
    assert (
        inst.rest[0].resource[63].searchParam[7].documentation
        == "When the order was made"
    )
    assert inst.rest[0].resource[63].searchParam[7].name == "date"
    assert inst.rest[0].resource[63].searchParam[7].type == "date"
    assert (
        inst.rest[0].resource[63].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/order-identifier"
    )
    assert (
        inst.rest[0].resource[63].searchParam[8].documentation
        == "Instance id from source, target, and/or  others"
    )
    assert inst.rest[0].resource[63].searchParam[8].name == "identifier"
    assert inst.rest[0].resource[63].searchParam[8].type == "token"
    assert inst.rest[0].resource[63].searchRevInclude[0] == "CarePlan.activityreference"
    assert inst.rest[0].resource[63].searchRevInclude[1] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[63].searchRevInclude[2] == "OrderResponse.request"
    assert inst.rest[0].resource[63].type == "Order"
    assert inst.rest[0].resource[64].conditionalCreate == True
    assert inst.rest[0].resource[64].conditionalDelete == "multiple"
    assert inst.rest[0].resource[64].conditionalUpdate == True
    assert inst.rest[0].resource[64].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[64].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[64].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[64].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[64].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[64].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[64].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[64].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[64].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[64].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[64].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[64].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[64].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[64].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[64].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[64].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[64].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[64].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[64].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/OrderResponse"
    )
    assert inst.rest[0].resource[64].searchInclude[0] == "OrderResponse.fulfillment"
    assert inst.rest[0].resource[64].searchInclude[1] == "OrderResponse.request"
    assert inst.rest[0].resource[64].searchInclude[2] == "OrderResponse.who"
    assert (
        inst.rest[0].resource[64].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/orderresponse-fulfillment"
    )
    assert (
        inst.rest[0].resource[64].searchParam[0].documentation
        == "Details of the outcome of performing the order"
    )
    assert inst.rest[0].resource[64].searchParam[0].name == "fulfillment"
    assert inst.rest[0].resource[64].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[64].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/orderresponse-request"
    )
    assert (
        inst.rest[0].resource[64].searchParam[1].documentation
        == "The order that this is a response to"
    )
    assert inst.rest[0].resource[64].searchParam[1].name == "request"
    assert inst.rest[0].resource[64].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[64].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/orderresponse-code"
    )
    assert (
        inst.rest[0].resource[64].searchParam[2].documentation
        == "pending | review | rejected | error | accepted | cancelled | replaced | aborted | completed"
    )
    assert inst.rest[0].resource[64].searchParam[2].name == "code"
    assert inst.rest[0].resource[64].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[64].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/orderresponse-date"
    )
    assert (
        inst.rest[0].resource[64].searchParam[3].documentation
        == "When the response was made"
    )
    assert inst.rest[0].resource[64].searchParam[3].name == "date"
    assert inst.rest[0].resource[64].searchParam[3].type == "date"
    assert (
        inst.rest[0].resource[64].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/orderresponse-identifier"
    )
    assert (
        inst.rest[0].resource[64].searchParam[4].documentation
        == "Identifiers assigned to this order by the orderer or by the receiver"
    )
    assert inst.rest[0].resource[64].searchParam[4].name == "identifier"
    assert inst.rest[0].resource[64].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[64].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/orderresponse-who"
    )
    assert (
        inst.rest[0].resource[64].searchParam[5].documentation
        == "Who made the response"
    )
    assert inst.rest[0].resource[64].searchParam[5].name == "who"
    assert inst.rest[0].resource[64].searchParam[5].type == "reference"
    assert inst.rest[0].resource[64].type == "OrderResponse"
    assert inst.rest[0].resource[65].conditionalCreate == True
    assert inst.rest[0].resource[65].conditionalDelete == "multiple"
    assert inst.rest[0].resource[65].conditionalUpdate == True
    assert inst.rest[0].resource[65].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[65].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[65].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[65].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[65].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[65].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[65].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[65].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[65].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[65].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[65].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[65].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[65].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[65].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[65].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[65].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[65].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[65].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[65].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Organization"
    )
    assert inst.rest[0].resource[65].searchInclude[0] == "Organization.partof"
    assert (
        inst.rest[0].resource[65].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/organization-address-state"
    )
    assert (
        inst.rest[0].resource[65].searchParam[0].documentation
        == "A state specified in an address"
    )
    assert inst.rest[0].resource[65].searchParam[0].name == "address-state"
    assert inst.rest[0].resource[65].searchParam[0].type == "string"
    assert (
        inst.rest[0].resource[65].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/organization-address-city"
    )
    assert (
        inst.rest[0].resource[65].searchParam[1].documentation
        == "A city specified in an address"
    )
    assert inst.rest[0].resource[65].searchParam[1].name == "address-city"
    assert inst.rest[0].resource[65].searchParam[1].type == "string"
    assert (
        inst.rest[0].resource[65].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/organization-phonetic"
    )
    assert (
        inst.rest[0].resource[65].searchParam[2].documentation
        == "A portion of the organization's name using some kind of phonetic matching algorithm"
    )
    assert inst.rest[0].resource[65].searchParam[2].name == "phonetic"
    assert inst.rest[0].resource[65].searchParam[2].type == "string"
    assert (
        inst.rest[0].resource[65].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/organization-partof"
    )
    assert (
        inst.rest[0].resource[65].searchParam[3].documentation
        == "Search all organizations that are part of the given organization"
    )
    assert inst.rest[0].resource[65].searchParam[3].name == "partof"
    assert inst.rest[0].resource[65].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[65].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/organization-address"
    )
    assert (
        inst.rest[0].resource[65].searchParam[4].documentation
        == "A (part of the) address of the Organization"
    )
    assert inst.rest[0].resource[65].searchParam[4].name == "address"
    assert inst.rest[0].resource[65].searchParam[4].type == "string"
    assert (
        inst.rest[0].resource[65].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/organization-address-use"
    )
    assert (
        inst.rest[0].resource[65].searchParam[5].documentation
        == "A use code specified in an address"
    )
    assert inst.rest[0].resource[65].searchParam[5].name == "address-use"
    assert inst.rest[0].resource[65].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[65].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/organization-name"
    )
    assert (
        inst.rest[0].resource[65].searchParam[6].documentation
        == "A portion of the organization's name"
    )
    assert inst.rest[0].resource[65].searchParam[6].name == "name"
    assert inst.rest[0].resource[65].searchParam[6].type == "string"
    assert (
        inst.rest[0].resource[65].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/organization-address-country"
    )
    assert (
        inst.rest[0].resource[65].searchParam[7].documentation
        == "A country specified in an address"
    )
    assert inst.rest[0].resource[65].searchParam[7].name == "address-country"
    assert inst.rest[0].resource[65].searchParam[7].type == "string"
    assert (
        inst.rest[0].resource[65].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/organization-active"
    )
    assert (
        inst.rest[0].resource[65].searchParam[8].documentation
        == "Whether the organization's record is active"
    )
    assert inst.rest[0].resource[65].searchParam[8].name == "active"
    assert inst.rest[0].resource[65].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[65].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/organization-type"
    )
    assert (
        inst.rest[0].resource[65].searchParam[9].documentation
        == "A code for the type of organization"
    )
    assert inst.rest[0].resource[65].searchParam[9].name == "type"
    assert inst.rest[0].resource[65].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[65].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/organization-identifier"
    )
    assert (
        inst.rest[0].resource[65].searchParam[10].documentation
        == "Any identifier for the organization (not the accreditation issuer's identifier)"
    )
    assert inst.rest[0].resource[65].searchParam[10].name == "identifier"
    assert inst.rest[0].resource[65].searchParam[10].type == "token"
    assert (
        inst.rest[0].resource[65].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/organization-address-postalcode"
    )
    assert (
        inst.rest[0].resource[65].searchParam[11].documentation
        == "A postal code specified in an address"
    )
    assert inst.rest[0].resource[65].searchParam[11].name == "address-postalcode"
    assert inst.rest[0].resource[65].searchParam[11].type == "string"
    assert inst.rest[0].resource[65].searchRevInclude[0] == "Account.patient"
    assert inst.rest[0].resource[65].searchRevInclude[1] == "Account.subject"
    assert inst.rest[0].resource[65].searchRevInclude[2] == "Account.owner"
    assert inst.rest[0].resource[65].searchRevInclude[3] == "AuditEvent.patient"
    assert inst.rest[0].resource[65].searchRevInclude[4] == "AuditEvent.participant"
    assert inst.rest[0].resource[65].searchRevInclude[5] == "CarePlan.participant"
    assert inst.rest[0].resource[65].searchRevInclude[6] == "CarePlan.performer"
    assert inst.rest[0].resource[65].searchRevInclude[7] == "Communication.sender"
    assert inst.rest[0].resource[65].searchRevInclude[8] == "Communication.recipient"
    assert (
        inst.rest[0].resource[65].searchRevInclude[9] == "CommunicationRequest.sender"
    )
    assert (
        inst.rest[0].resource[65].searchRevInclude[10]
        == "CommunicationRequest.recipient"
    )
    assert inst.rest[0].resource[65].searchRevInclude[11] == "Composition.attester"
    assert inst.rest[0].resource[65].searchRevInclude[12] == "Contract.signer"
    assert inst.rest[0].resource[65].searchRevInclude[13] == "Contract.actor"
    assert inst.rest[0].resource[65].searchRevInclude[14] == "Coverage.issuer"
    assert inst.rest[0].resource[65].searchRevInclude[15] == "Device.organization"
    assert (
        inst.rest[0].resource[65].searchRevInclude[16] == "DiagnosticReport.performer"
    )
    assert (
        inst.rest[0].resource[65].searchRevInclude[17] == "DocumentManifest.recipient"
    )
    assert inst.rest[0].resource[65].searchRevInclude[18] == "DocumentManifest.author"
    assert inst.rest[0].resource[65].searchRevInclude[19] == "DocumentReference.author"
    assert (
        inst.rest[0].resource[65].searchRevInclude[20] == "DocumentReference.custodian"
    )
    assert (
        inst.rest[0].resource[65].searchRevInclude[21]
        == "DocumentReference.authenticator"
    )
    assert (
        inst.rest[0].resource[65].searchRevInclude[22] == "EpisodeOfCare.organization"
    )
    assert inst.rest[0].resource[65].searchRevInclude[23] == "EpisodeOfCare.team-member"
    assert inst.rest[0].resource[65].searchRevInclude[24] == "Flag.author"
    assert inst.rest[0].resource[65].searchRevInclude[25] == "Flag.patient"
    assert inst.rest[0].resource[65].searchRevInclude[26] == "Flag.subject"
    assert inst.rest[0].resource[65].searchRevInclude[27] == "Goal.patient"
    assert inst.rest[0].resource[65].searchRevInclude[28] == "Goal.subject"
    assert (
        inst.rest[0].resource[65].searchRevInclude[29]
        == "HealthcareService.organization"
    )
    assert (
        inst.rest[0].resource[65].searchRevInclude[30]
        == "ImagingObjectSelection.author"
    )
    assert inst.rest[0].resource[65].searchRevInclude[31] == "Immunization.manufacturer"
    assert inst.rest[0].resource[65].searchRevInclude[32] == "Location.organization"
    assert inst.rest[0].resource[65].searchRevInclude[33] == "Medication.manufacturer"
    assert inst.rest[0].resource[65].searchRevInclude[34] == "MessageHeader.receiver"
    assert inst.rest[0].resource[65].searchRevInclude[35] == "MessageHeader.responsible"
    assert inst.rest[0].resource[65].searchRevInclude[36] == "Observation.performer"
    assert inst.rest[0].resource[65].searchRevInclude[37] == "Order.source"
    assert inst.rest[0].resource[65].searchRevInclude[38] == "Order.target"
    assert inst.rest[0].resource[65].searchRevInclude[39] == "OrderResponse.who"
    assert inst.rest[0].resource[65].searchRevInclude[40] == "Organization.partof"
    assert inst.rest[0].resource[65].searchRevInclude[41] == "Patient.organization"
    assert inst.rest[0].resource[65].searchRevInclude[42] == "Patient.careprovider"
    assert inst.rest[0].resource[65].searchRevInclude[43] == "Person.organization"
    assert inst.rest[0].resource[65].searchRevInclude[44] == "Practitioner.organization"
    assert inst.rest[0].resource[65].searchRevInclude[45] == "Procedure.performer"
    assert (
        inst.rest[0].resource[65].searchRevInclude[46] == "ProcedureRequest.performer"
    )
    assert (
        inst.rest[0].resource[65].searchRevInclude[47] == "ProcessRequest.organization"
    )
    assert (
        inst.rest[0].resource[65].searchRevInclude[48] == "ProcessResponse.organization"
    )
    assert (
        inst.rest[0].resource[65].searchRevInclude[49]
        == "ProcessResponse.requestorganization"
    )
    assert inst.rest[0].resource[65].searchRevInclude[50] == "Provenance.agent"
    assert inst.rest[0].resource[65].searchRevInclude[51] == "ReferralRequest.requester"
    assert inst.rest[0].resource[65].searchRevInclude[52] == "ReferralRequest.recipient"
    assert inst.rest[0].resource[65].searchRevInclude[53] == "SupplyRequest.source"
    assert inst.rest[0].resource[65].searchRevInclude[54] == "SupplyRequest.supplier"
    assert inst.rest[0].resource[65].type == "Organization"
    assert inst.rest[0].resource[66].conditionalCreate == True
    assert inst.rest[0].resource[66].conditionalDelete == "multiple"
    assert inst.rest[0].resource[66].conditionalUpdate == True
    assert inst.rest[0].resource[66].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[66].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[66].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[66].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[66].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[66].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[66].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[66].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[66].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[66].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[66].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[66].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[66].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[66].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[66].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[66].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[66].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[66].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[66].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Patient"
    )
    assert inst.rest[0].resource[66].searchInclude[0] == "Patient.link"
    assert inst.rest[0].resource[66].searchInclude[1] == "Patient.organization"
    assert inst.rest[0].resource[66].searchInclude[2] == "Patient.careprovider"
    assert (
        inst.rest[0].resource[66].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/patient-animal-breed"
    )
    assert (
        inst.rest[0].resource[66].searchParam[0].documentation
        == "The breed for animal patients"
    )
    assert inst.rest[0].resource[66].searchParam[0].name == "animal-breed"
    assert inst.rest[0].resource[66].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[66].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/patient-phone"
    )
    assert (
        inst.rest[0].resource[66].searchParam[1].documentation
        == "A value in a phone contact"
    )
    assert inst.rest[0].resource[66].searchParam[1].name == "phone"
    assert inst.rest[0].resource[66].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[66].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/patient-phonetic"
    )
    assert (
        inst.rest[0].resource[66].searchParam[2].documentation
        == "A portion of either family or given name using some kind of phonetic matching algorithm"
    )
    assert inst.rest[0].resource[66].searchParam[2].name == "phonetic"
    assert inst.rest[0].resource[66].searchParam[2].type == "string"
    assert (
        inst.rest[0].resource[66].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/patient-link"
    )
    assert (
        inst.rest[0].resource[66].searchParam[3].documentation
        == "All patients linked to the given patient"
    )
    assert inst.rest[0].resource[66].searchParam[3].name == "link"
    assert inst.rest[0].resource[66].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[66].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/patient-address-country"
    )
    assert (
        inst.rest[0].resource[66].searchParam[4].documentation
        == "A country specified in an address"
    )
    assert inst.rest[0].resource[66].searchParam[4].name == "address-country"
    assert inst.rest[0].resource[66].searchParam[4].type == "string"
    assert (
        inst.rest[0].resource[66].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/patient-animal-species"
    )
    assert (
        inst.rest[0].resource[66].searchParam[5].documentation
        == "The species for animal patients"
    )
    assert inst.rest[0].resource[66].searchParam[5].name == "animal-species"
    assert inst.rest[0].resource[66].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[66].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/patient-deathdate"
    )
    assert (
        inst.rest[0].resource[66].searchParam[6].documentation
        == "The date of death has been provided and satisfies this search value"
    )
    assert inst.rest[0].resource[66].searchParam[6].name == "deathdate"
    assert inst.rest[0].resource[66].searchParam[6].type == "date"
    assert (
        inst.rest[0].resource[66].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/patient-organization"
    )
    assert (
        inst.rest[0].resource[66].searchParam[7].documentation
        == "The organization at which this person is a patient"
    )
    assert inst.rest[0].resource[66].searchParam[7].name == "organization"
    assert inst.rest[0].resource[66].searchParam[7].type == "reference"
    assert (
        inst.rest[0].resource[66].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/patient-address-city"
    )
    assert (
        inst.rest[0].resource[66].searchParam[8].documentation
        == "A city specified in an address"
    )
    assert inst.rest[0].resource[66].searchParam[8].name == "address-city"
    assert inst.rest[0].resource[66].searchParam[8].type == "string"
    assert (
        inst.rest[0].resource[66].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/patient-address-state"
    )
    assert (
        inst.rest[0].resource[66].searchParam[9].documentation
        == "A state specified in an address"
    )
    assert inst.rest[0].resource[66].searchParam[9].name == "address-state"
    assert inst.rest[0].resource[66].searchParam[9].type == "string"
    assert (
        inst.rest[0].resource[66].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/patient-careprovider"
    )
    assert (
        inst.rest[0].resource[66].searchParam[10].documentation
        == "Patient's nominated care provider, could be a care manager, not the organization that manages the record"
    )
    assert inst.rest[0].resource[66].searchParam[10].name == "careprovider"
    assert inst.rest[0].resource[66].searchParam[10].type == "reference"
    assert (
        inst.rest[0].resource[66].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/patient-given"
    )
    assert (
        inst.rest[0].resource[66].searchParam[11].documentation
        == "A portion of the given name of the patient"
    )
    assert inst.rest[0].resource[66].searchParam[11].name == "given"
    assert inst.rest[0].resource[66].searchParam[11].type == "string"
    assert (
        inst.rest[0].resource[66].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/patient-email"
    )
    assert (
        inst.rest[0].resource[66].searchParam[12].documentation
        == "A value in an email contact"
    )
    assert inst.rest[0].resource[66].searchParam[12].name == "email"
    assert inst.rest[0].resource[66].searchParam[12].type == "token"
    assert (
        inst.rest[0].resource[66].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/patient-address"
    )
    assert (
        inst.rest[0].resource[66].searchParam[13].documentation
        == "An address in any kind of address/part of the patient"
    )
    assert inst.rest[0].resource[66].searchParam[13].name == "address"
    assert inst.rest[0].resource[66].searchParam[13].type == "string"
    assert (
        inst.rest[0].resource[66].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/patient-address-use"
    )
    assert (
        inst.rest[0].resource[66].searchParam[14].documentation
        == "A use code specified in an address"
    )
    assert inst.rest[0].resource[66].searchParam[14].name == "address-use"
    assert inst.rest[0].resource[66].searchParam[14].type == "token"
    assert (
        inst.rest[0].resource[66].searchParam[15].definition
        == "http://hl7.org/fhir/SearchParameter/patient-family"
    )
    assert (
        inst.rest[0].resource[66].searchParam[15].documentation
        == "A portion of the family name of the patient"
    )
    assert inst.rest[0].resource[66].searchParam[15].name == "family"
    assert inst.rest[0].resource[66].searchParam[15].type == "string"
    assert (
        inst.rest[0].resource[66].searchParam[16].definition
        == "http://hl7.org/fhir/SearchParameter/patient-name"
    )
    assert (
        inst.rest[0].resource[66].searchParam[16].documentation
        == "A portion of either family or given name of the patient"
    )
    assert inst.rest[0].resource[66].searchParam[16].name == "name"
    assert inst.rest[0].resource[66].searchParam[16].type == "string"
    assert (
        inst.rest[0].resource[66].searchParam[17].definition
        == "http://hl7.org/fhir/SearchParameter/patient-birthdate"
    )
    assert (
        inst.rest[0].resource[66].searchParam[17].documentation
        == "The patient's date of birth"
    )
    assert inst.rest[0].resource[66].searchParam[17].name == "birthdate"
    assert inst.rest[0].resource[66].searchParam[17].type == "date"
    assert (
        inst.rest[0].resource[66].searchParam[18].definition
        == "http://hl7.org/fhir/SearchParameter/patient-telecom"
    )
    assert (
        inst.rest[0].resource[66].searchParam[18].documentation
        == "The value in any kind of telecom details of the patient"
    )
    assert inst.rest[0].resource[66].searchParam[18].name == "telecom"
    assert inst.rest[0].resource[66].searchParam[18].type == "token"
    assert (
        inst.rest[0].resource[66].searchParam[19].definition
        == "http://hl7.org/fhir/SearchParameter/patient-active"
    )
    assert (
        inst.rest[0].resource[66].searchParam[19].documentation
        == "Whether the patient record is active"
    )
    assert inst.rest[0].resource[66].searchParam[19].name == "active"
    assert inst.rest[0].resource[66].searchParam[19].type == "token"
    assert (
        inst.rest[0].resource[66].searchParam[20].definition
        == "http://hl7.org/fhir/SearchParameter/patient-gender"
    )
    assert (
        inst.rest[0].resource[66].searchParam[20].documentation
        == "Gender of the patient"
    )
    assert inst.rest[0].resource[66].searchParam[20].name == "gender"
    assert inst.rest[0].resource[66].searchParam[20].type == "token"
    assert (
        inst.rest[0].resource[66].searchParam[21].definition
        == "http://hl7.org/fhir/SearchParameter/patient-deceased"
    )
    assert (
        inst.rest[0].resource[66].searchParam[21].documentation
        == "This patient has been marked as deceased, or as a death date entered"
    )
    assert inst.rest[0].resource[66].searchParam[21].name == "deceased"
    assert inst.rest[0].resource[66].searchParam[21].type == "token"
    assert (
        inst.rest[0].resource[66].searchParam[22].definition
        == "http://hl7.org/fhir/SearchParameter/patient-language"
    )
    assert (
        inst.rest[0].resource[66].searchParam[22].documentation
        == "Language code (irrespective of use value)"
    )
    assert inst.rest[0].resource[66].searchParam[22].name == "language"
    assert inst.rest[0].resource[66].searchParam[22].type == "token"
    assert (
        inst.rest[0].resource[66].searchParam[23].definition
        == "http://hl7.org/fhir/SearchParameter/patient-identifier"
    )
    assert (
        inst.rest[0].resource[66].searchParam[23].documentation
        == "A patient identifier"
    )
    assert inst.rest[0].resource[66].searchParam[23].name == "identifier"
    assert inst.rest[0].resource[66].searchParam[23].type == "token"
    assert (
        inst.rest[0].resource[66].searchParam[24].definition
        == "http://hl7.org/fhir/SearchParameter/patient-address-postalcode"
    )
    assert (
        inst.rest[0].resource[66].searchParam[24].documentation
        == "A postalCode specified in an address"
    )
    assert inst.rest[0].resource[66].searchParam[24].name == "address-postalcode"
    assert inst.rest[0].resource[66].searchParam[24].type == "string"
    assert inst.rest[0].resource[66].searchRevInclude[0] == "Account.patient"
    assert inst.rest[0].resource[66].searchRevInclude[1] == "Account.subject"
    assert (
        inst.rest[0].resource[66].searchRevInclude[2] == "AllergyIntolerance.reporter"
    )
    assert inst.rest[0].resource[66].searchRevInclude[3] == "AllergyIntolerance.patient"
    assert (
        inst.rest[0].resource[66].searchRevInclude[4] == "AllergyIntolerance.recorder"
    )
    assert inst.rest[0].resource[66].searchRevInclude[5] == "Appointment.patient"
    assert inst.rest[0].resource[66].searchRevInclude[6] == "Appointment.practitioner"
    assert inst.rest[0].resource[66].searchRevInclude[7] == "Appointment.location"
    assert inst.rest[0].resource[66].searchRevInclude[8] == "Appointment.actor"
    assert (
        inst.rest[0].resource[66].searchRevInclude[9] == "AppointmentResponse.patient"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[10]
        == "AppointmentResponse.practitioner"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[11] == "AppointmentResponse.location"
    )
    assert inst.rest[0].resource[66].searchRevInclude[12] == "AppointmentResponse.actor"
    assert inst.rest[0].resource[66].searchRevInclude[13] == "AuditEvent.patient"
    assert inst.rest[0].resource[66].searchRevInclude[14] == "AuditEvent.participant"
    assert inst.rest[0].resource[66].searchRevInclude[15] == "Basic.author"
    assert inst.rest[0].resource[66].searchRevInclude[16] == "BodySite.patient"
    assert inst.rest[0].resource[66].searchRevInclude[17] == "CarePlan.subject"
    assert inst.rest[0].resource[66].searchRevInclude[18] == "CarePlan.patient"
    assert inst.rest[0].resource[66].searchRevInclude[19] == "CarePlan.participant"
    assert inst.rest[0].resource[66].searchRevInclude[20] == "CarePlan.performer"
    assert inst.rest[0].resource[66].searchRevInclude[21] == "Claim.patient"
    assert (
        inst.rest[0].resource[66].searchRevInclude[22] == "ClinicalImpression.patient"
    )
    assert inst.rest[0].resource[66].searchRevInclude[23] == "Communication.sender"
    assert inst.rest[0].resource[66].searchRevInclude[24] == "Communication.patient"
    assert inst.rest[0].resource[66].searchRevInclude[25] == "Communication.subject"
    assert inst.rest[0].resource[66].searchRevInclude[26] == "Communication.recipient"
    assert (
        inst.rest[0].resource[66].searchRevInclude[27] == "CommunicationRequest.sender"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[28]
        == "CommunicationRequest.requester"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[29] == "CommunicationRequest.patient"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[30] == "CommunicationRequest.subject"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[31]
        == "CommunicationRequest.recipient"
    )
    assert inst.rest[0].resource[66].searchRevInclude[32] == "Composition.author"
    assert inst.rest[0].resource[66].searchRevInclude[33] == "Composition.attester"
    assert inst.rest[0].resource[66].searchRevInclude[34] == "Condition.asserter"
    assert inst.rest[0].resource[66].searchRevInclude[35] == "Condition.patient"
    assert inst.rest[0].resource[66].searchRevInclude[36] == "Contract.signer"
    assert inst.rest[0].resource[66].searchRevInclude[37] == "Contract.actor"
    assert inst.rest[0].resource[66].searchRevInclude[38] == "DetectedIssue.patient"
    assert inst.rest[0].resource[66].searchRevInclude[39] == "Device.patient"
    assert inst.rest[0].resource[66].searchRevInclude[40] == "DeviceUseRequest.patient"
    assert inst.rest[0].resource[66].searchRevInclude[41] == "DeviceUseRequest.subject"
    assert (
        inst.rest[0].resource[66].searchRevInclude[42] == "DeviceUseStatement.patient"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[43] == "DeviceUseStatement.subject"
    )
    assert inst.rest[0].resource[66].searchRevInclude[44] == "DiagnosticOrder.subject"
    assert inst.rest[0].resource[66].searchRevInclude[45] == "DiagnosticOrder.patient"
    assert inst.rest[0].resource[66].searchRevInclude[46] == "DiagnosticReport.subject"
    assert inst.rest[0].resource[66].searchRevInclude[47] == "DiagnosticReport.patient"
    assert inst.rest[0].resource[66].searchRevInclude[48] == "DocumentManifest.subject"
    assert (
        inst.rest[0].resource[66].searchRevInclude[49] == "DocumentManifest.recipient"
    )
    assert inst.rest[0].resource[66].searchRevInclude[50] == "DocumentManifest.author"
    assert inst.rest[0].resource[66].searchRevInclude[51] == "DocumentManifest.patient"
    assert inst.rest[0].resource[66].searchRevInclude[52] == "DocumentReference.subject"
    assert inst.rest[0].resource[66].searchRevInclude[53] == "DocumentReference.author"
    assert inst.rest[0].resource[66].searchRevInclude[54] == "DocumentReference.patient"
    assert inst.rest[0].resource[66].searchRevInclude[55] == "Encounter.patient"
    assert inst.rest[0].resource[66].searchRevInclude[56] == "EnrollmentRequest.patient"
    assert inst.rest[0].resource[66].searchRevInclude[57] == "EnrollmentRequest.subject"
    assert inst.rest[0].resource[66].searchRevInclude[58] == "EpisodeOfCare.patient"
    assert (
        inst.rest[0].resource[66].searchRevInclude[59] == "FamilyMemberHistory.patient"
    )
    assert inst.rest[0].resource[66].searchRevInclude[60] == "Flag.author"
    assert inst.rest[0].resource[66].searchRevInclude[61] == "Flag.patient"
    assert inst.rest[0].resource[66].searchRevInclude[62] == "Flag.subject"
    assert inst.rest[0].resource[66].searchRevInclude[63] == "Goal.patient"
    assert inst.rest[0].resource[66].searchRevInclude[64] == "Goal.subject"
    assert inst.rest[0].resource[66].searchRevInclude[65] == "Group.member"
    assert (
        inst.rest[0].resource[66].searchRevInclude[66]
        == "ImagingObjectSelection.author"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[67]
        == "ImagingObjectSelection.patient"
    )
    assert inst.rest[0].resource[66].searchRevInclude[68] == "ImagingStudy.patient"
    assert inst.rest[0].resource[66].searchRevInclude[69] == "Immunization.patient"
    assert (
        inst.rest[0].resource[66].searchRevInclude[70]
        == "ImmunizationRecommendation.patient"
    )
    assert inst.rest[0].resource[66].searchRevInclude[71] == "List.patient"
    assert inst.rest[0].resource[66].searchRevInclude[72] == "List.source"
    assert inst.rest[0].resource[66].searchRevInclude[73] == "List.subject"
    assert inst.rest[0].resource[66].searchRevInclude[74] == "Media.patient"
    assert inst.rest[0].resource[66].searchRevInclude[75] == "Media.subject"
    assert (
        inst.rest[0].resource[66].searchRevInclude[76]
        == "MedicationAdministration.patient"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[77]
        == "MedicationAdministration.practitioner"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[78] == "MedicationDispense.patient"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[79] == "MedicationDispense.receiver"
    )
    assert inst.rest[0].resource[66].searchRevInclude[80] == "MedicationOrder.patient"
    assert (
        inst.rest[0].resource[66].searchRevInclude[81] == "MedicationStatement.patient"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[82] == "MedicationStatement.source"
    )
    assert inst.rest[0].resource[66].searchRevInclude[83] == "NutritionOrder.patient"
    assert inst.rest[0].resource[66].searchRevInclude[84] == "Observation.subject"
    assert inst.rest[0].resource[66].searchRevInclude[85] == "Observation.patient"
    assert inst.rest[0].resource[66].searchRevInclude[86] == "Observation.performer"
    assert inst.rest[0].resource[66].searchRevInclude[87] == "Order.patient"
    assert inst.rest[0].resource[66].searchRevInclude[88] == "Order.subject"
    assert inst.rest[0].resource[66].searchRevInclude[89] == "Patient.link"
    assert inst.rest[0].resource[66].searchRevInclude[90] == "Person.link"
    assert inst.rest[0].resource[66].searchRevInclude[91] == "Person.relatedperson"
    assert inst.rest[0].resource[66].searchRevInclude[92] == "Person.patient"
    assert inst.rest[0].resource[66].searchRevInclude[93] == "Person.practitioner"
    assert inst.rest[0].resource[66].searchRevInclude[94] == "Procedure.patient"
    assert inst.rest[0].resource[66].searchRevInclude[95] == "Procedure.subject"
    assert inst.rest[0].resource[66].searchRevInclude[96] == "Procedure.performer"
    assert inst.rest[0].resource[66].searchRevInclude[97] == "ProcedureRequest.orderer"
    assert inst.rest[0].resource[66].searchRevInclude[98] == "ProcedureRequest.patient"
    assert inst.rest[0].resource[66].searchRevInclude[99] == "ProcedureRequest.subject"
    assert (
        inst.rest[0].resource[66].searchRevInclude[100] == "ProcedureRequest.performer"
    )
    assert inst.rest[0].resource[66].searchRevInclude[101] == "Provenance.agent"
    assert (
        inst.rest[0].resource[66].searchRevInclude[102]
        == "QuestionnaireResponse.author"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[103]
        == "QuestionnaireResponse.source"
    )
    assert (
        inst.rest[0].resource[66].searchRevInclude[104] == "ReferralRequest.requester"
    )
    assert inst.rest[0].resource[66].searchRevInclude[105] == "ReferralRequest.patient"
    assert inst.rest[0].resource[66].searchRevInclude[106] == "RelatedPerson.patient"
    assert inst.rest[0].resource[66].searchRevInclude[107] == "RiskAssessment.patient"
    assert inst.rest[0].resource[66].searchRevInclude[108] == "RiskAssessment.subject"
    assert inst.rest[0].resource[66].searchRevInclude[109] == "Schedule.actor"
    assert inst.rest[0].resource[66].searchRevInclude[110] == "Specimen.patient"
    assert inst.rest[0].resource[66].searchRevInclude[111] == "Specimen.subject"
    assert inst.rest[0].resource[66].searchRevInclude[112] == "SupplyDelivery.patient"
    assert inst.rest[0].resource[66].searchRevInclude[113] == "SupplyRequest.patient"
    assert inst.rest[0].resource[66].searchRevInclude[114] == "SupplyRequest.source"
    assert (
        inst.rest[0].resource[66].searchRevInclude[115] == "VisionPrescription.patient"
    )
    assert inst.rest[0].resource[66].type == "Patient"
    assert inst.rest[0].resource[67].conditionalCreate == True
    assert inst.rest[0].resource[67].conditionalDelete == "multiple"
    assert inst.rest[0].resource[67].conditionalUpdate == True
    assert inst.rest[0].resource[67].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[67].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[67].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[67].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[67].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[67].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[67].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[67].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[67].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[67].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[67].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[67].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[67].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[67].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[67].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[67].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[67].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[67].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[67].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/PaymentNotice"
    )
    assert (
        inst.rest[0].resource[67].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/paymentnotice-identifier"
    )
    assert (
        inst.rest[0].resource[67].searchParam[0].documentation
        == "The business identifier of the Eligibility"
    )
    assert inst.rest[0].resource[67].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[67].searchParam[0].type == "token"
    assert inst.rest[0].resource[67].type == "PaymentNotice"
    assert inst.rest[0].resource[68].conditionalCreate == True
    assert inst.rest[0].resource[68].conditionalDelete == "multiple"
    assert inst.rest[0].resource[68].conditionalUpdate == True
    assert inst.rest[0].resource[68].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[68].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[68].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[68].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[68].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[68].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[68].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[68].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[68].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[68].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[68].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[68].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[68].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[68].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[68].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[68].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[68].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[68].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[68].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/PaymentReconciliation"
    )
    assert (
        inst.rest[0].resource[68].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/paymentreconciliation-identifier"
    )
    assert (
        inst.rest[0].resource[68].searchParam[0].documentation
        == "The business identifier of the Explanation of Benefit"
    )
    assert inst.rest[0].resource[68].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[68].searchParam[0].type == "token"
    assert inst.rest[0].resource[68].type == "PaymentReconciliation"
    assert inst.rest[0].resource[69].conditionalCreate == True
    assert inst.rest[0].resource[69].conditionalDelete == "multiple"
    assert inst.rest[0].resource[69].conditionalUpdate == True
    assert inst.rest[0].resource[69].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[69].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[69].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[69].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[69].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[69].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[69].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[69].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[69].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[69].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[69].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[69].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[69].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[69].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[69].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[69].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[69].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[69].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[69].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Person"
    )
    assert inst.rest[0].resource[69].searchInclude[0] == "Person.link"
    assert inst.rest[0].resource[69].searchInclude[1] == "Person.relatedperson"
    assert inst.rest[0].resource[69].searchInclude[2] == "Person.organization"
    assert inst.rest[0].resource[69].searchInclude[3] == "Person.patient"
    assert inst.rest[0].resource[69].searchInclude[4] == "Person.practitioner"
    assert (
        inst.rest[0].resource[69].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/person-phone"
    )
    assert (
        inst.rest[0].resource[69].searchParam[0].documentation
        == "A value in a phone contact"
    )
    assert inst.rest[0].resource[69].searchParam[0].name == "phone"
    assert inst.rest[0].resource[69].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[69].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/person-phonetic"
    )
    assert (
        inst.rest[0].resource[69].searchParam[1].documentation
        == "A portion of name using some kind of phonetic matching algorithm"
    )
    assert inst.rest[0].resource[69].searchParam[1].name == "phonetic"
    assert inst.rest[0].resource[69].searchParam[1].type == "string"
    assert (
        inst.rest[0].resource[69].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/person-link"
    )
    assert (
        inst.rest[0].resource[69].searchParam[2].documentation
        == "Any link has this Patient, Person, RelatedPerson or Practitioner reference"
    )
    assert inst.rest[0].resource[69].searchParam[2].name == "link"
    assert inst.rest[0].resource[69].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[69].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/person-address-country"
    )
    assert (
        inst.rest[0].resource[69].searchParam[3].documentation
        == "A country specified in an address"
    )
    assert inst.rest[0].resource[69].searchParam[3].name == "address-country"
    assert inst.rest[0].resource[69].searchParam[3].type == "string"
    assert (
        inst.rest[0].resource[69].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/person-relatedperson"
    )
    assert (
        inst.rest[0].resource[69].searchParam[4].documentation
        == "The Person links to this RelatedPerson"
    )
    assert inst.rest[0].resource[69].searchParam[4].name == "relatedperson"
    assert inst.rest[0].resource[69].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[69].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/person-organization"
    )
    assert (
        inst.rest[0].resource[69].searchParam[5].documentation
        == "The organization at which this person record is being managed"
    )
    assert inst.rest[0].resource[69].searchParam[5].name == "organization"
    assert inst.rest[0].resource[69].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[69].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/person-patient"
    )
    assert (
        inst.rest[0].resource[69].searchParam[6].documentation
        == "The Person links to this Patient"
    )
    assert inst.rest[0].resource[69].searchParam[6].name == "patient"
    assert inst.rest[0].resource[69].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[69].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/person-address-city"
    )
    assert (
        inst.rest[0].resource[69].searchParam[7].documentation
        == "A city specified in an address"
    )
    assert inst.rest[0].resource[69].searchParam[7].name == "address-city"
    assert inst.rest[0].resource[69].searchParam[7].type == "string"
    assert (
        inst.rest[0].resource[69].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/person-address-state"
    )
    assert (
        inst.rest[0].resource[69].searchParam[8].documentation
        == "A state specified in an address"
    )
    assert inst.rest[0].resource[69].searchParam[8].name == "address-state"
    assert inst.rest[0].resource[69].searchParam[8].type == "string"
    assert (
        inst.rest[0].resource[69].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/person-practitioner"
    )
    assert (
        inst.rest[0].resource[69].searchParam[9].documentation
        == "The Person links to this Practitioner"
    )
    assert inst.rest[0].resource[69].searchParam[9].name == "practitioner"
    assert inst.rest[0].resource[69].searchParam[9].type == "reference"
    assert (
        inst.rest[0].resource[69].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/person-email"
    )
    assert (
        inst.rest[0].resource[69].searchParam[10].documentation
        == "A value in an email contact"
    )
    assert inst.rest[0].resource[69].searchParam[10].name == "email"
    assert inst.rest[0].resource[69].searchParam[10].type == "token"
    assert (
        inst.rest[0].resource[69].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/person-address"
    )
    assert (
        inst.rest[0].resource[69].searchParam[11].documentation
        == "An address in any kind of address/part"
    )
    assert inst.rest[0].resource[69].searchParam[11].name == "address"
    assert inst.rest[0].resource[69].searchParam[11].type == "string"
    assert (
        inst.rest[0].resource[69].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/person-address-use"
    )
    assert (
        inst.rest[0].resource[69].searchParam[12].documentation
        == "A use code specified in an address"
    )
    assert inst.rest[0].resource[69].searchParam[12].name == "address-use"
    assert inst.rest[0].resource[69].searchParam[12].type == "token"
    assert (
        inst.rest[0].resource[69].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/person-name"
    )
    assert (
        inst.rest[0].resource[69].searchParam[13].documentation
        == "A portion of name in any name part"
    )
    assert inst.rest[0].resource[69].searchParam[13].name == "name"
    assert inst.rest[0].resource[69].searchParam[13].type == "string"
    assert (
        inst.rest[0].resource[69].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/person-birthdate"
    )
    assert (
        inst.rest[0].resource[69].searchParam[14].documentation
        == "The person's date of birth"
    )
    assert inst.rest[0].resource[69].searchParam[14].name == "birthdate"
    assert inst.rest[0].resource[69].searchParam[14].type == "date"
    assert (
        inst.rest[0].resource[69].searchParam[15].definition
        == "http://hl7.org/fhir/SearchParameter/person-telecom"
    )
    assert (
        inst.rest[0].resource[69].searchParam[15].documentation
        == "The value in any kind of contact"
    )
    assert inst.rest[0].resource[69].searchParam[15].name == "telecom"
    assert inst.rest[0].resource[69].searchParam[15].type == "token"
    assert (
        inst.rest[0].resource[69].searchParam[16].definition
        == "http://hl7.org/fhir/SearchParameter/person-gender"
    )
    assert (
        inst.rest[0].resource[69].searchParam[16].documentation
        == "The gender of the person"
    )
    assert inst.rest[0].resource[69].searchParam[16].name == "gender"
    assert inst.rest[0].resource[69].searchParam[16].type == "token"
    assert (
        inst.rest[0].resource[69].searchParam[17].definition
        == "http://hl7.org/fhir/SearchParameter/person-identifier"
    )
    assert (
        inst.rest[0].resource[69].searchParam[17].documentation == "A person Identifier"
    )
    assert inst.rest[0].resource[69].searchParam[17].name == "identifier"
    assert inst.rest[0].resource[69].searchParam[17].type == "token"
    assert (
        inst.rest[0].resource[69].searchParam[18].definition
        == "http://hl7.org/fhir/SearchParameter/person-address-postalcode"
    )
    assert (
        inst.rest[0].resource[69].searchParam[18].documentation
        == "A postal code specified in an address"
    )
    assert inst.rest[0].resource[69].searchParam[18].name == "address-postalcode"
    assert inst.rest[0].resource[69].searchParam[18].type == "string"
    assert inst.rest[0].resource[69].searchRevInclude[0] == "Person.link"
    assert inst.rest[0].resource[69].searchRevInclude[1] == "Person.relatedperson"
    assert inst.rest[0].resource[69].searchRevInclude[2] == "Person.patient"
    assert inst.rest[0].resource[69].searchRevInclude[3] == "Person.practitioner"
    assert inst.rest[0].resource[69].type == "Person"
    assert inst.rest[0].resource[70].conditionalCreate == True
    assert inst.rest[0].resource[70].conditionalDelete == "multiple"
    assert inst.rest[0].resource[70].conditionalUpdate == True
    assert inst.rest[0].resource[70].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[70].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[70].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[70].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[70].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[70].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[70].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[70].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[70].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[70].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[70].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[70].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[70].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[70].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[70].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[70].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[70].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[70].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[70].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Practitioner"
    )
    assert inst.rest[0].resource[70].searchInclude[0] == "Practitioner.location"
    assert inst.rest[0].resource[70].searchInclude[1] == "Practitioner.organization"
    assert (
        inst.rest[0].resource[70].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-phone"
    )
    assert (
        inst.rest[0].resource[70].searchParam[0].documentation
        == "A value in a phone contact"
    )
    assert inst.rest[0].resource[70].searchParam[0].name == "phone"
    assert inst.rest[0].resource[70].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[70].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-phonetic"
    )
    assert (
        inst.rest[0].resource[70].searchParam[1].documentation
        == "A portion of either family or given name using some kind of phonetic matching algorithm"
    )
    assert inst.rest[0].resource[70].searchParam[1].name == "phonetic"
    assert inst.rest[0].resource[70].searchParam[1].type == "string"
    assert (
        inst.rest[0].resource[70].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-location"
    )
    assert (
        inst.rest[0].resource[70].searchParam[2].documentation
        == "One of the locations at which this practitioner provides care"
    )
    assert inst.rest[0].resource[70].searchParam[2].name == "location"
    assert inst.rest[0].resource[70].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[70].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-communication"
    )
    assert (
        inst.rest[0].resource[70].searchParam[3].documentation
        == "One of the languages that the practitioner can communicate with"
    )
    assert inst.rest[0].resource[70].searchParam[3].name == "communication"
    assert inst.rest[0].resource[70].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[70].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-address-country"
    )
    assert (
        inst.rest[0].resource[70].searchParam[4].documentation
        == "A country specified in an address"
    )
    assert inst.rest[0].resource[70].searchParam[4].name == "address-country"
    assert inst.rest[0].resource[70].searchParam[4].type == "string"
    assert (
        inst.rest[0].resource[70].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-organization"
    )
    assert (
        inst.rest[0].resource[70].searchParam[5].documentation
        == "The identity of the organization the practitioner represents / acts on behalf of"
    )
    assert inst.rest[0].resource[70].searchParam[5].name == "organization"
    assert inst.rest[0].resource[70].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[70].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-address-city"
    )
    assert (
        inst.rest[0].resource[70].searchParam[6].documentation
        == "A city specified in an address"
    )
    assert inst.rest[0].resource[70].searchParam[6].name == "address-city"
    assert inst.rest[0].resource[70].searchParam[6].type == "string"
    assert (
        inst.rest[0].resource[70].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-address-state"
    )
    assert (
        inst.rest[0].resource[70].searchParam[7].documentation
        == "A state specified in an address"
    )
    assert inst.rest[0].resource[70].searchParam[7].name == "address-state"
    assert inst.rest[0].resource[70].searchParam[7].type == "string"
    assert (
        inst.rest[0].resource[70].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-given"
    )
    assert (
        inst.rest[0].resource[70].searchParam[8].documentation
        == "A portion of the given name"
    )
    assert inst.rest[0].resource[70].searchParam[8].name == "given"
    assert inst.rest[0].resource[70].searchParam[8].type == "string"
    assert (
        inst.rest[0].resource[70].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-email"
    )
    assert (
        inst.rest[0].resource[70].searchParam[9].documentation
        == "A value in an email contact"
    )
    assert inst.rest[0].resource[70].searchParam[9].name == "email"
    assert inst.rest[0].resource[70].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[70].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-address"
    )
    assert (
        inst.rest[0].resource[70].searchParam[10].documentation
        == "An address in any kind of address/part"
    )
    assert inst.rest[0].resource[70].searchParam[10].name == "address"
    assert inst.rest[0].resource[70].searchParam[10].type == "string"
    assert (
        inst.rest[0].resource[70].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-address-use"
    )
    assert (
        inst.rest[0].resource[70].searchParam[11].documentation
        == "A use code specified in an address"
    )
    assert inst.rest[0].resource[70].searchParam[11].name == "address-use"
    assert inst.rest[0].resource[70].searchParam[11].type == "token"
    assert (
        inst.rest[0].resource[70].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-family"
    )
    assert (
        inst.rest[0].resource[70].searchParam[12].documentation
        == "A portion of the family name"
    )
    assert inst.rest[0].resource[70].searchParam[12].name == "family"
    assert inst.rest[0].resource[70].searchParam[12].type == "string"
    assert (
        inst.rest[0].resource[70].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-name"
    )
    assert (
        inst.rest[0].resource[70].searchParam[13].documentation
        == "A portion of either family or given name"
    )
    assert inst.rest[0].resource[70].searchParam[13].name == "name"
    assert inst.rest[0].resource[70].searchParam[13].type == "string"
    assert (
        inst.rest[0].resource[70].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-telecom"
    )
    assert (
        inst.rest[0].resource[70].searchParam[14].documentation
        == "The value in any kind of contact"
    )
    assert inst.rest[0].resource[70].searchParam[14].name == "telecom"
    assert inst.rest[0].resource[70].searchParam[14].type == "token"
    assert (
        inst.rest[0].resource[70].searchParam[15].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-role"
    )
    assert (
        inst.rest[0].resource[70].searchParam[15].documentation
        == "The practitioner can perform this role at for the organization"
    )
    assert inst.rest[0].resource[70].searchParam[15].name == "role"
    assert inst.rest[0].resource[70].searchParam[15].type == "token"
    assert (
        inst.rest[0].resource[70].searchParam[16].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-gender"
    )
    assert (
        inst.rest[0].resource[70].searchParam[16].documentation
        == "Gender of the practitioner"
    )
    assert inst.rest[0].resource[70].searchParam[16].name == "gender"
    assert inst.rest[0].resource[70].searchParam[16].type == "token"
    assert (
        inst.rest[0].resource[70].searchParam[17].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-specialty"
    )
    assert (
        inst.rest[0].resource[70].searchParam[17].documentation
        == "The practitioner has this specialty at an organization"
    )
    assert inst.rest[0].resource[70].searchParam[17].name == "specialty"
    assert inst.rest[0].resource[70].searchParam[17].type == "token"
    assert (
        inst.rest[0].resource[70].searchParam[18].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-identifier"
    )
    assert (
        inst.rest[0].resource[70].searchParam[18].documentation
        == "A practitioner's Identifier"
    )
    assert inst.rest[0].resource[70].searchParam[18].name == "identifier"
    assert inst.rest[0].resource[70].searchParam[18].type == "token"
    assert (
        inst.rest[0].resource[70].searchParam[19].definition
        == "http://hl7.org/fhir/SearchParameter/practitioner-address-postalcode"
    )
    assert (
        inst.rest[0].resource[70].searchParam[19].documentation
        == "A postalCode specified in an address"
    )
    assert inst.rest[0].resource[70].searchParam[19].name == "address-postalcode"
    assert inst.rest[0].resource[70].searchParam[19].type == "string"
    assert inst.rest[0].resource[70].searchRevInclude[0] == "Account.patient"
    assert inst.rest[0].resource[70].searchRevInclude[1] == "Account.subject"
    assert (
        inst.rest[0].resource[70].searchRevInclude[2] == "AllergyIntolerance.reporter"
    )
    assert (
        inst.rest[0].resource[70].searchRevInclude[3] == "AllergyIntolerance.recorder"
    )
    assert inst.rest[0].resource[70].searchRevInclude[4] == "Appointment.patient"
    assert inst.rest[0].resource[70].searchRevInclude[5] == "Appointment.practitioner"
    assert inst.rest[0].resource[70].searchRevInclude[6] == "Appointment.location"
    assert inst.rest[0].resource[70].searchRevInclude[7] == "Appointment.actor"
    assert (
        inst.rest[0].resource[70].searchRevInclude[8] == "AppointmentResponse.patient"
    )
    assert (
        inst.rest[0].resource[70].searchRevInclude[9]
        == "AppointmentResponse.practitioner"
    )
    assert (
        inst.rest[0].resource[70].searchRevInclude[10] == "AppointmentResponse.location"
    )
    assert inst.rest[0].resource[70].searchRevInclude[11] == "AppointmentResponse.actor"
    assert inst.rest[0].resource[70].searchRevInclude[12] == "AuditEvent.patient"
    assert inst.rest[0].resource[70].searchRevInclude[13] == "AuditEvent.participant"
    assert inst.rest[0].resource[70].searchRevInclude[14] == "Basic.author"
    assert inst.rest[0].resource[70].searchRevInclude[15] == "CarePlan.participant"
    assert inst.rest[0].resource[70].searchRevInclude[16] == "CarePlan.performer"
    assert inst.rest[0].resource[70].searchRevInclude[17] == "Claim.provider"
    assert (
        inst.rest[0].resource[70].searchRevInclude[18] == "ClinicalImpression.assessor"
    )
    assert inst.rest[0].resource[70].searchRevInclude[19] == "Communication.sender"
    assert inst.rest[0].resource[70].searchRevInclude[20] == "Communication.recipient"
    assert (
        inst.rest[0].resource[70].searchRevInclude[21] == "CommunicationRequest.sender"
    )
    assert (
        inst.rest[0].resource[70].searchRevInclude[22]
        == "CommunicationRequest.requester"
    )
    assert (
        inst.rest[0].resource[70].searchRevInclude[23]
        == "CommunicationRequest.recipient"
    )
    assert inst.rest[0].resource[70].searchRevInclude[24] == "Composition.author"
    assert inst.rest[0].resource[70].searchRevInclude[25] == "Composition.attester"
    assert inst.rest[0].resource[70].searchRevInclude[26] == "Condition.asserter"
    assert inst.rest[0].resource[70].searchRevInclude[27] == "Contract.signer"
    assert inst.rest[0].resource[70].searchRevInclude[28] == "Contract.actor"
    assert inst.rest[0].resource[70].searchRevInclude[29] == "DetectedIssue.author"
    assert inst.rest[0].resource[70].searchRevInclude[30] == "DiagnosticOrder.orderer"
    assert inst.rest[0].resource[70].searchRevInclude[31] == "DiagnosticOrder.actor"
    assert (
        inst.rest[0].resource[70].searchRevInclude[32] == "DiagnosticReport.performer"
    )
    assert inst.rest[0].resource[70].searchRevInclude[33] == "DocumentManifest.subject"
    assert (
        inst.rest[0].resource[70].searchRevInclude[34] == "DocumentManifest.recipient"
    )
    assert inst.rest[0].resource[70].searchRevInclude[35] == "DocumentManifest.author"
    assert inst.rest[0].resource[70].searchRevInclude[36] == "DocumentManifest.patient"
    assert inst.rest[0].resource[70].searchRevInclude[37] == "DocumentReference.subject"
    assert inst.rest[0].resource[70].searchRevInclude[38] == "DocumentReference.author"
    assert inst.rest[0].resource[70].searchRevInclude[39] == "DocumentReference.patient"
    assert (
        inst.rest[0].resource[70].searchRevInclude[40]
        == "DocumentReference.authenticator"
    )
    assert inst.rest[0].resource[70].searchRevInclude[41] == "Encounter.practitioner"
    assert inst.rest[0].resource[70].searchRevInclude[42] == "Encounter.participant"
    assert (
        inst.rest[0].resource[70].searchRevInclude[43] == "EpisodeOfCare.care-manager"
    )
    assert inst.rest[0].resource[70].searchRevInclude[44] == "EpisodeOfCare.team-member"
    assert inst.rest[0].resource[70].searchRevInclude[45] == "Flag.author"
    assert inst.rest[0].resource[70].searchRevInclude[46] == "Flag.patient"
    assert inst.rest[0].resource[70].searchRevInclude[47] == "Flag.subject"
    assert inst.rest[0].resource[70].searchRevInclude[48] == "Group.member"
    assert (
        inst.rest[0].resource[70].searchRevInclude[49]
        == "ImagingObjectSelection.author"
    )
    assert inst.rest[0].resource[70].searchRevInclude[50] == "Immunization.requester"
    assert inst.rest[0].resource[70].searchRevInclude[51] == "Immunization.performer"
    assert inst.rest[0].resource[70].searchRevInclude[52] == "List.source"
    assert inst.rest[0].resource[70].searchRevInclude[53] == "Media.patient"
    assert inst.rest[0].resource[70].searchRevInclude[54] == "Media.subject"
    assert inst.rest[0].resource[70].searchRevInclude[55] == "Media.operator"
    assert (
        inst.rest[0].resource[70].searchRevInclude[56]
        == "MedicationAdministration.practitioner"
    )
    assert (
        inst.rest[0].resource[70].searchRevInclude[57] == "MedicationDispense.receiver"
    )
    assert (
        inst.rest[0].resource[70].searchRevInclude[58]
        == "MedicationDispense.responsibleparty"
    )
    assert (
        inst.rest[0].resource[70].searchRevInclude[59] == "MedicationDispense.dispenser"
    )
    assert (
        inst.rest[0].resource[70].searchRevInclude[60] == "MedicationOrder.prescriber"
    )
    assert (
        inst.rest[0].resource[70].searchRevInclude[61] == "MedicationStatement.source"
    )
    assert inst.rest[0].resource[70].searchRevInclude[62] == "MessageHeader.receiver"
    assert inst.rest[0].resource[70].searchRevInclude[63] == "MessageHeader.responsible"
    assert inst.rest[0].resource[70].searchRevInclude[64] == "MessageHeader.author"
    assert inst.rest[0].resource[70].searchRevInclude[65] == "MessageHeader.enterer"
    assert inst.rest[0].resource[70].searchRevInclude[66] == "NutritionOrder.provider"
    assert inst.rest[0].resource[70].searchRevInclude[67] == "Observation.performer"
    assert inst.rest[0].resource[70].searchRevInclude[68] == "Order.source"
    assert inst.rest[0].resource[70].searchRevInclude[69] == "Order.target"
    assert inst.rest[0].resource[70].searchRevInclude[70] == "OrderResponse.who"
    assert inst.rest[0].resource[70].searchRevInclude[71] == "Patient.careprovider"
    assert inst.rest[0].resource[70].searchRevInclude[72] == "Person.link"
    assert inst.rest[0].resource[70].searchRevInclude[73] == "Person.relatedperson"
    assert inst.rest[0].resource[70].searchRevInclude[74] == "Person.patient"
    assert inst.rest[0].resource[70].searchRevInclude[75] == "Person.practitioner"
    assert inst.rest[0].resource[70].searchRevInclude[76] == "Procedure.performer"
    assert inst.rest[0].resource[70].searchRevInclude[77] == "ProcedureRequest.orderer"
    assert (
        inst.rest[0].resource[70].searchRevInclude[78] == "ProcedureRequest.performer"
    )
    assert inst.rest[0].resource[70].searchRevInclude[79] == "ProcessRequest.provider"
    assert (
        inst.rest[0].resource[70].searchRevInclude[80]
        == "ProcessResponse.requestprovider"
    )
    assert inst.rest[0].resource[70].searchRevInclude[81] == "Provenance.agent"
    assert (
        inst.rest[0].resource[70].searchRevInclude[82] == "QuestionnaireResponse.author"
    )
    assert (
        inst.rest[0].resource[70].searchRevInclude[83] == "QuestionnaireResponse.source"
    )
    assert inst.rest[0].resource[70].searchRevInclude[84] == "ReferralRequest.requester"
    assert inst.rest[0].resource[70].searchRevInclude[85] == "ReferralRequest.recipient"
    assert inst.rest[0].resource[70].searchRevInclude[86] == "RiskAssessment.performer"
    assert inst.rest[0].resource[70].searchRevInclude[87] == "Schedule.actor"
    assert inst.rest[0].resource[70].searchRevInclude[88] == "Specimen.collector"
    assert inst.rest[0].resource[70].searchRevInclude[89] == "SupplyDelivery.receiver"
    assert inst.rest[0].resource[70].searchRevInclude[90] == "SupplyDelivery.supplier"
    assert inst.rest[0].resource[70].searchRevInclude[91] == "SupplyRequest.source"
    assert (
        inst.rest[0].resource[70].searchRevInclude[92]
        == "VisionPrescription.prescriber"
    )
    assert inst.rest[0].resource[70].type == "Practitioner"
    assert inst.rest[0].resource[71].conditionalCreate == True
    assert inst.rest[0].resource[71].conditionalDelete == "multiple"
    assert inst.rest[0].resource[71].conditionalUpdate == True
    assert inst.rest[0].resource[71].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[71].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[71].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[71].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[71].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[71].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[71].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[71].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[71].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[71].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[71].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[71].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[71].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[71].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[71].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[71].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[71].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[71].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[71].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Procedure"
    )
    assert inst.rest[0].resource[71].searchInclude[0] == "Procedure.patient"
    assert inst.rest[0].resource[71].searchInclude[1] == "Procedure.location"
    assert inst.rest[0].resource[71].searchInclude[2] == "Procedure.subject"
    assert inst.rest[0].resource[71].searchInclude[3] == "Procedure.performer"
    assert inst.rest[0].resource[71].searchInclude[4] == "Procedure.encounter"
    assert (
        inst.rest[0].resource[71].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/procedure-patient"
    )
    assert (
        inst.rest[0].resource[71].searchParam[0].documentation
        == "Search by subject - a patient"
    )
    assert inst.rest[0].resource[71].searchParam[0].name == "patient"
    assert inst.rest[0].resource[71].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[71].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/procedure-location"
    )
    assert (
        inst.rest[0].resource[71].searchParam[1].documentation
        == "Where the procedure happened"
    )
    assert inst.rest[0].resource[71].searchParam[1].name == "location"
    assert inst.rest[0].resource[71].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[71].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/procedure-subject"
    )
    assert inst.rest[0].resource[71].searchParam[2].documentation == "Search by subject"
    assert inst.rest[0].resource[71].searchParam[2].name == "subject"
    assert inst.rest[0].resource[71].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[71].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/procedure-performer"
    )
    assert (
        inst.rest[0].resource[71].searchParam[3].documentation
        == "The reference to the practitioner"
    )
    assert inst.rest[0].resource[71].searchParam[3].name == "performer"
    assert inst.rest[0].resource[71].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[71].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/procedure-encounter"
    )
    assert (
        inst.rest[0].resource[71].searchParam[4].documentation
        == "The encounter associated with the procedure"
    )
    assert inst.rest[0].resource[71].searchParam[4].name == "encounter"
    assert inst.rest[0].resource[71].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[71].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/procedure-code"
    )
    assert (
        inst.rest[0].resource[71].searchParam[5].documentation
        == "A code to identify a  procedure"
    )
    assert inst.rest[0].resource[71].searchParam[5].name == "code"
    assert inst.rest[0].resource[71].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[71].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/procedure-date"
    )
    assert (
        inst.rest[0].resource[71].searchParam[6].documentation
        == "Date/Period the procedure was performed"
    )
    assert inst.rest[0].resource[71].searchParam[6].name == "date"
    assert inst.rest[0].resource[71].searchParam[6].type == "date"
    assert (
        inst.rest[0].resource[71].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/procedure-identifier"
    )
    assert (
        inst.rest[0].resource[71].searchParam[7].documentation
        == "A unique identifier for a procedure"
    )
    assert inst.rest[0].resource[71].searchParam[7].name == "identifier"
    assert inst.rest[0].resource[71].searchParam[7].type == "token"
    assert inst.rest[0].resource[71].searchRevInclude[0] == "ClinicalImpression.action"
    assert inst.rest[0].resource[71].searchRevInclude[1] == "Encounter.condition"
    assert inst.rest[0].resource[71].searchRevInclude[2] == "Encounter.indication"
    assert inst.rest[0].resource[71].searchRevInclude[3] == "Encounter.procedure"
    assert inst.rest[0].resource[71].type == "Procedure"
    assert inst.rest[0].resource[72].conditionalCreate == True
    assert inst.rest[0].resource[72].conditionalDelete == "multiple"
    assert inst.rest[0].resource[72].conditionalUpdate == True
    assert inst.rest[0].resource[72].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[72].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[72].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[72].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[72].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[72].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[72].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[72].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[72].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[72].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[72].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[72].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[72].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[72].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[72].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[72].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[72].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[72].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[72].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/ProcedureRequest"
    )
    assert inst.rest[0].resource[72].searchInclude[0] == "ProcedureRequest.orderer"
    assert inst.rest[0].resource[72].searchInclude[1] == "ProcedureRequest.patient"
    assert inst.rest[0].resource[72].searchInclude[2] == "ProcedureRequest.subject"
    assert inst.rest[0].resource[72].searchInclude[3] == "ProcedureRequest.performer"
    assert inst.rest[0].resource[72].searchInclude[4] == "ProcedureRequest.encounter"
    assert (
        inst.rest[0].resource[72].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/procedurerequest-orderer"
    )
    assert inst.rest[0].resource[72].searchParam[0].documentation == "Who made request"
    assert inst.rest[0].resource[72].searchParam[0].name == "orderer"
    assert inst.rest[0].resource[72].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[72].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/procedurerequest-patient"
    )
    assert (
        inst.rest[0].resource[72].searchParam[1].documentation
        == "Search by subject - a patient"
    )
    assert inst.rest[0].resource[72].searchParam[1].name == "patient"
    assert inst.rest[0].resource[72].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[72].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/procedurerequest-subject"
    )
    assert inst.rest[0].resource[72].searchParam[2].documentation == "Search by subject"
    assert inst.rest[0].resource[72].searchParam[2].name == "subject"
    assert inst.rest[0].resource[72].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[72].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/procedurerequest-performer"
    )
    assert (
        inst.rest[0].resource[72].searchParam[3].documentation
        == "Who should perform the procedure"
    )
    assert inst.rest[0].resource[72].searchParam[3].name == "performer"
    assert inst.rest[0].resource[72].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[72].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/procedurerequest-encounter"
    )
    assert (
        inst.rest[0].resource[72].searchParam[4].documentation
        == "Encounter request created during"
    )
    assert inst.rest[0].resource[72].searchParam[4].name == "encounter"
    assert inst.rest[0].resource[72].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[72].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/procedurerequest-identifier"
    )
    assert (
        inst.rest[0].resource[72].searchParam[5].documentation
        == "A unique identifier of the Procedure Request"
    )
    assert inst.rest[0].resource[72].searchParam[5].name == "identifier"
    assert inst.rest[0].resource[72].searchParam[5].type == "token"
    assert inst.rest[0].resource[72].searchRevInclude[0] == "CarePlan.activityreference"
    assert inst.rest[0].resource[72].searchRevInclude[1] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[72].searchRevInclude[2] == "ClinicalImpression.action"
    assert inst.rest[0].resource[72].searchRevInclude[3] == "DiagnosticReport.request"
    assert inst.rest[0].resource[72].type == "ProcedureRequest"
    assert inst.rest[0].resource[73].conditionalCreate == True
    assert inst.rest[0].resource[73].conditionalDelete == "multiple"
    assert inst.rest[0].resource[73].conditionalUpdate == True
    assert inst.rest[0].resource[73].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[73].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[73].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[73].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[73].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[73].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[73].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[73].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[73].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[73].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[73].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[73].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[73].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[73].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[73].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[73].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[73].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[73].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[73].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/ProcessRequest"
    )
    assert inst.rest[0].resource[73].searchInclude[0] == "ProcessRequest.organization"
    assert inst.rest[0].resource[73].searchInclude[1] == "ProcessRequest.provider"
    assert (
        inst.rest[0].resource[73].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/processrequest-organization"
    )
    assert (
        inst.rest[0].resource[73].searchParam[0].documentation
        == "The organization who generated this request"
    )
    assert inst.rest[0].resource[73].searchParam[0].name == "organization"
    assert inst.rest[0].resource[73].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[73].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/processrequest-action"
    )
    assert (
        inst.rest[0].resource[73].searchParam[1].documentation
        == "The action requested by this resource"
    )
    assert inst.rest[0].resource[73].searchParam[1].name == "action"
    assert inst.rest[0].resource[73].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[73].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/processrequest-provider"
    )
    assert (
        inst.rest[0].resource[73].searchParam[2].documentation
        == "The provider who regenerated this request"
    )
    assert inst.rest[0].resource[73].searchParam[2].name == "provider"
    assert inst.rest[0].resource[73].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[73].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/processrequest-identifier"
    )
    assert (
        inst.rest[0].resource[73].searchParam[3].documentation
        == "The business identifier of the ProcessRequest"
    )
    assert inst.rest[0].resource[73].searchParam[3].name == "identifier"
    assert inst.rest[0].resource[73].searchParam[3].type == "token"
    assert inst.rest[0].resource[73].searchRevInclude[0] == "CarePlan.activityreference"
    assert inst.rest[0].resource[73].searchRevInclude[1] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[73].type == "ProcessRequest"
    assert inst.rest[0].resource[74].conditionalCreate == True
    assert inst.rest[0].resource[74].conditionalDelete == "multiple"
    assert inst.rest[0].resource[74].conditionalUpdate == True
    assert inst.rest[0].resource[74].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[74].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[74].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[74].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[74].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[74].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[74].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[74].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[74].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[74].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[74].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[74].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[74].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[74].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[74].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[74].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[74].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[74].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[74].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/ProcessResponse"
    )
    assert inst.rest[0].resource[74].searchInclude[0] == "ProcessResponse.organization"
    assert (
        inst.rest[0].resource[74].searchInclude[1] == "ProcessResponse.requestprovider"
    )
    assert inst.rest[0].resource[74].searchInclude[2] == "ProcessResponse.request"
    assert (
        inst.rest[0].resource[74].searchInclude[3]
        == "ProcessResponse.requestorganization"
    )
    assert (
        inst.rest[0].resource[74].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/processresponse-organization"
    )
    assert (
        inst.rest[0].resource[74].searchParam[0].documentation
        == "The organization who generated this resource"
    )
    assert inst.rest[0].resource[74].searchParam[0].name == "organization"
    assert inst.rest[0].resource[74].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[74].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/processresponse-requestprovider"
    )
    assert (
        inst.rest[0].resource[74].searchParam[1].documentation
        == "The Provider who is responsible the request transaction"
    )
    assert inst.rest[0].resource[74].searchParam[1].name == "requestprovider"
    assert inst.rest[0].resource[74].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[74].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/processresponse-request"
    )
    assert (
        inst.rest[0].resource[74].searchParam[2].documentation
        == "The reference to the claim"
    )
    assert inst.rest[0].resource[74].searchParam[2].name == "request"
    assert inst.rest[0].resource[74].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[74].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/processresponse-requestorganization"
    )
    assert (
        inst.rest[0].resource[74].searchParam[3].documentation
        == "The Organization who is responsible the request transaction"
    )
    assert inst.rest[0].resource[74].searchParam[3].name == "requestorganization"
    assert inst.rest[0].resource[74].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[74].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/processresponse-identifier"
    )
    assert (
        inst.rest[0].resource[74].searchParam[4].documentation
        == "The business identifier of the Explanation of Benefit"
    )
    assert inst.rest[0].resource[74].searchParam[4].name == "identifier"
    assert inst.rest[0].resource[74].searchParam[4].type == "token"
    assert inst.rest[0].resource[74].type == "ProcessResponse"
    assert inst.rest[0].resource[75].conditionalCreate == True
    assert inst.rest[0].resource[75].conditionalDelete == "multiple"
    assert inst.rest[0].resource[75].conditionalUpdate == True
    assert inst.rest[0].resource[75].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[75].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[75].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[75].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[75].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[75].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[75].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[75].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[75].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[75].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[75].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[75].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[75].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[75].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[75].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[75].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[75].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[75].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[75].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Provenance"
    )
    assert inst.rest[0].resource[75].searchInclude[0] == "Provenance.patient"
    assert inst.rest[0].resource[75].searchInclude[1] == "Provenance.location"
    assert inst.rest[0].resource[75].searchInclude[2] == "Provenance.target"
    assert inst.rest[0].resource[75].searchInclude[3] == "Provenance.agent"
    assert (
        inst.rest[0].resource[75].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/provenance-sigtype"
    )
    assert (
        inst.rest[0].resource[75].searchParam[0].documentation
        == "Indication of the reason the entity signed the object(s)"
    )
    assert inst.rest[0].resource[75].searchParam[0].name == "sigtype"
    assert inst.rest[0].resource[75].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[75].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/provenance-patient"
    )
    assert (
        inst.rest[0].resource[75].searchParam[1].documentation
        == "Target Reference(s) (usually version specific)"
    )
    assert inst.rest[0].resource[75].searchParam[1].name == "patient"
    assert inst.rest[0].resource[75].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[75].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/provenance-location"
    )
    assert (
        inst.rest[0].resource[75].searchParam[2].documentation
        == "Where the activity occurred, if relevant"
    )
    assert inst.rest[0].resource[75].searchParam[2].name == "location"
    assert inst.rest[0].resource[75].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[75].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/provenance-start"
    )
    assert (
        inst.rest[0].resource[75].searchParam[3].documentation
        == "Starting time with inclusive boundary"
    )
    assert inst.rest[0].resource[75].searchParam[3].name == "start"
    assert inst.rest[0].resource[75].searchParam[3].type == "date"
    assert (
        inst.rest[0].resource[75].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/provenance-entity"
    )
    assert (
        inst.rest[0].resource[75].searchParam[4].documentation == "Identity of entity"
    )
    assert inst.rest[0].resource[75].searchParam[4].name == "entity"
    assert inst.rest[0].resource[75].searchParam[4].type == "uri"
    assert (
        inst.rest[0].resource[75].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/provenance-userid"
    )
    assert (
        inst.rest[0].resource[75].searchParam[5].documentation
        == "Authorization-system identifier for the agent"
    )
    assert inst.rest[0].resource[75].searchParam[5].name == "userid"
    assert inst.rest[0].resource[75].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[75].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/provenance-target"
    )
    assert (
        inst.rest[0].resource[75].searchParam[6].documentation
        == "Target Reference(s) (usually version specific)"
    )
    assert inst.rest[0].resource[75].searchParam[6].name == "target"
    assert inst.rest[0].resource[75].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[75].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/provenance-agent"
    )
    assert (
        inst.rest[0].resource[75].searchParam[7].documentation
        == "Individual, device or organization playing role"
    )
    assert inst.rest[0].resource[75].searchParam[7].name == "agent"
    assert inst.rest[0].resource[75].searchParam[7].type == "reference"
    assert (
        inst.rest[0].resource[75].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/provenance-entitytype"
    )
    assert (
        inst.rest[0].resource[75].searchParam[8].documentation
        == "The type of resource in this entity"
    )
    assert inst.rest[0].resource[75].searchParam[8].name == "entitytype"
    assert inst.rest[0].resource[75].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[75].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/provenance-end"
    )
    assert (
        inst.rest[0].resource[75].searchParam[9].documentation
        == "End time with inclusive boundary, if not ongoing"
    )
    assert inst.rest[0].resource[75].searchParam[9].name == "end"
    assert inst.rest[0].resource[75].searchParam[9].type == "date"
    assert inst.rest[0].resource[75].type == "Provenance"
    assert inst.rest[0].resource[76].conditionalCreate == True
    assert inst.rest[0].resource[76].conditionalDelete == "multiple"
    assert inst.rest[0].resource[76].conditionalUpdate == True
    assert inst.rest[0].resource[76].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[76].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[76].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[76].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[76].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[76].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[76].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[76].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[76].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[76].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[76].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[76].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[76].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[76].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[76].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[76].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[76].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[76].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[76].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Questionnaire"
    )
    assert (
        inst.rest[0].resource[76].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire-title"
    )
    assert (
        inst.rest[0].resource[76].searchParam[0].documentation
        == "All or part of the name of the questionnaire (title for the root group of the questionnaire)"
    )
    assert inst.rest[0].resource[76].searchParam[0].name == "title"
    assert inst.rest[0].resource[76].searchParam[0].type == "string"
    assert (
        inst.rest[0].resource[76].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire-status"
    )
    assert (
        inst.rest[0].resource[76].searchParam[1].documentation
        == "The status of the questionnaire"
    )
    assert inst.rest[0].resource[76].searchParam[1].name == "status"
    assert inst.rest[0].resource[76].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[76].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire-code"
    )
    assert (
        inst.rest[0].resource[76].searchParam[2].documentation
        == "A code that corresponds to the questionnaire or one of its groups"
    )
    assert inst.rest[0].resource[76].searchParam[2].name == "code"
    assert inst.rest[0].resource[76].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[76].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire-date"
    )
    assert (
        inst.rest[0].resource[76].searchParam[3].documentation
        == "When the questionnaire was last changed"
    )
    assert inst.rest[0].resource[76].searchParam[3].name == "date"
    assert inst.rest[0].resource[76].searchParam[3].type == "date"
    assert (
        inst.rest[0].resource[76].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire-identifier"
    )
    assert (
        inst.rest[0].resource[76].searchParam[4].documentation
        == "An identifier for the questionnaire"
    )
    assert inst.rest[0].resource[76].searchParam[4].name == "identifier"
    assert inst.rest[0].resource[76].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[76].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire-version"
    )
    assert (
        inst.rest[0].resource[76].searchParam[5].documentation
        == "The business version of the questionnaire"
    )
    assert inst.rest[0].resource[76].searchParam[5].name == "version"
    assert inst.rest[0].resource[76].searchParam[5].type == "string"
    assert (
        inst.rest[0].resource[76].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire-publisher"
    )
    assert (
        inst.rest[0].resource[76].searchParam[6].documentation
        == "The author of the questionnaire"
    )
    assert inst.rest[0].resource[76].searchParam[6].name == "publisher"
    assert inst.rest[0].resource[76].searchParam[6].type == "string"
    assert (
        inst.rest[0].resource[76].searchRevInclude[0]
        == "QuestionnaireResponse.questionnaire"
    )
    assert inst.rest[0].resource[76].type == "Questionnaire"
    assert inst.rest[0].resource[77].conditionalCreate == True
    assert inst.rest[0].resource[77].conditionalDelete == "multiple"
    assert inst.rest[0].resource[77].conditionalUpdate == True
    assert inst.rest[0].resource[77].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[77].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[77].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[77].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[77].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[77].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[77].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[77].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[77].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[77].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[77].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[77].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[77].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[77].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[77].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[77].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[77].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[77].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[77].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse"
    )
    assert inst.rest[0].resource[77].searchInclude[0] == "QuestionnaireResponse.author"
    assert (
        inst.rest[0].resource[77].searchInclude[1]
        == "QuestionnaireResponse.questionnaire"
    )
    assert inst.rest[0].resource[77].searchInclude[2] == "QuestionnaireResponse.patient"
    assert inst.rest[0].resource[77].searchInclude[3] == "QuestionnaireResponse.source"
    assert inst.rest[0].resource[77].searchInclude[4] == "QuestionnaireResponse.subject"
    assert (
        inst.rest[0].resource[77].searchInclude[5] == "QuestionnaireResponse.encounter"
    )
    assert (
        inst.rest[0].resource[77].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse-author"
    )
    assert (
        inst.rest[0].resource[77].searchParam[0].documentation
        == "The author of the questionnaire"
    )
    assert inst.rest[0].resource[77].searchParam[0].name == "author"
    assert inst.rest[0].resource[77].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[77].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse-questionnaire"
    )
    assert (
        inst.rest[0].resource[77].searchParam[1].documentation
        == "The questionnaire the answers are provided for"
    )
    assert inst.rest[0].resource[77].searchParam[1].name == "questionnaire"
    assert inst.rest[0].resource[77].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[77].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse-patient"
    )
    assert (
        inst.rest[0].resource[77].searchParam[2].documentation
        == "The patient that is the subject of the questionnaire"
    )
    assert inst.rest[0].resource[77].searchParam[2].name == "patient"
    assert inst.rest[0].resource[77].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[77].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse-authored"
    )
    assert (
        inst.rest[0].resource[77].searchParam[3].documentation
        == "When the questionnaire was authored"
    )
    assert inst.rest[0].resource[77].searchParam[3].name == "authored"
    assert inst.rest[0].resource[77].searchParam[3].type == "date"
    assert (
        inst.rest[0].resource[77].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse-source"
    )
    assert (
        inst.rest[0].resource[77].searchParam[4].documentation
        == "The person who answered the questions"
    )
    assert inst.rest[0].resource[77].searchParam[4].name == "source"
    assert inst.rest[0].resource[77].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[77].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse-status"
    )
    assert (
        inst.rest[0].resource[77].searchParam[5].documentation
        == "The status of the questionnaire response"
    )
    assert inst.rest[0].resource[77].searchParam[5].name == "status"
    assert inst.rest[0].resource[77].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[77].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse-subject"
    )
    assert (
        inst.rest[0].resource[77].searchParam[6].documentation
        == "The subject of the questionnaire"
    )
    assert inst.rest[0].resource[77].searchParam[6].name == "subject"
    assert inst.rest[0].resource[77].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[77].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse-encounter"
    )
    assert (
        inst.rest[0].resource[77].searchParam[7].documentation
        == "Encounter during which questionnaire was authored"
    )
    assert inst.rest[0].resource[77].searchParam[7].name == "encounter"
    assert inst.rest[0].resource[77].searchParam[7].type == "reference"
    assert (
        inst.rest[0].resource[77].searchRevInclude[0]
        == "ClinicalImpression.investigation"
    )
    assert inst.rest[0].resource[77].searchRevInclude[1] == "Observation.related-target"
    assert inst.rest[0].resource[77].type == "QuestionnaireResponse"
    assert inst.rest[0].resource[78].conditionalCreate == True
    assert inst.rest[0].resource[78].conditionalDelete == "multiple"
    assert inst.rest[0].resource[78].conditionalUpdate == True
    assert inst.rest[0].resource[78].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[78].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[78].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[78].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[78].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[78].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[78].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[78].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[78].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[78].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[78].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[78].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[78].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[78].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[78].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[78].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[78].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[78].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[78].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/ReferralRequest"
    )
    assert inst.rest[0].resource[78].searchInclude[0] == "ReferralRequest.requester"
    assert inst.rest[0].resource[78].searchInclude[1] == "ReferralRequest.patient"
    assert inst.rest[0].resource[78].searchInclude[2] == "ReferralRequest.recipient"
    assert (
        inst.rest[0].resource[78].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/referralrequest-requester"
    )
    assert (
        inst.rest[0].resource[78].searchParam[0].documentation
        == "Requester of referral / transfer of care"
    )
    assert inst.rest[0].resource[78].searchParam[0].name == "requester"
    assert inst.rest[0].resource[78].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[78].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/referralrequest-patient"
    )
    assert (
        inst.rest[0].resource[78].searchParam[1].documentation
        == "Who the referral is about"
    )
    assert inst.rest[0].resource[78].searchParam[1].name == "patient"
    assert inst.rest[0].resource[78].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[78].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/referralrequest-status"
    )
    assert (
        inst.rest[0].resource[78].searchParam[2].documentation
        == "The status of the referral"
    )
    assert inst.rest[0].resource[78].searchParam[2].name == "status"
    assert inst.rest[0].resource[78].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[78].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/referralrequest-priority"
    )
    assert (
        inst.rest[0].resource[78].searchParam[3].documentation
        == "The priority assigned to the referral"
    )
    assert inst.rest[0].resource[78].searchParam[3].name == "priority"
    assert inst.rest[0].resource[78].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[78].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/referralrequest-type"
    )
    assert (
        inst.rest[0].resource[78].searchParam[4].documentation
        == "The type of the referral"
    )
    assert inst.rest[0].resource[78].searchParam[4].name == "type"
    assert inst.rest[0].resource[78].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[78].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/referralrequest-date"
    )
    assert (
        inst.rest[0].resource[78].searchParam[5].documentation
        == "Creation or activation date"
    )
    assert inst.rest[0].resource[78].searchParam[5].name == "date"
    assert inst.rest[0].resource[78].searchParam[5].type == "date"
    assert (
        inst.rest[0].resource[78].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/referralrequest-specialty"
    )
    assert (
        inst.rest[0].resource[78].searchParam[6].documentation
        == "The specialty that the referral is for"
    )
    assert inst.rest[0].resource[78].searchParam[6].name == "specialty"
    assert inst.rest[0].resource[78].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[78].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/referralrequest-recipient"
    )
    assert (
        inst.rest[0].resource[78].searchParam[7].documentation
        == "The person that the referral was sent to"
    )
    assert inst.rest[0].resource[78].searchParam[7].name == "recipient"
    assert inst.rest[0].resource[78].searchParam[7].type == "reference"
    assert inst.rest[0].resource[78].searchRevInclude[0] == "CarePlan.activityreference"
    assert inst.rest[0].resource[78].searchRevInclude[1] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[78].searchRevInclude[2] == "ClinicalImpression.action"
    assert inst.rest[0].resource[78].searchRevInclude[3] == "DiagnosticReport.request"
    assert inst.rest[0].resource[78].searchRevInclude[4] == "Encounter.incomingreferral"
    assert (
        inst.rest[0].resource[78].searchRevInclude[5]
        == "EpisodeOfCare.incomingreferral"
    )
    assert inst.rest[0].resource[78].type == "ReferralRequest"
    assert inst.rest[0].resource[79].conditionalCreate == True
    assert inst.rest[0].resource[79].conditionalDelete == "multiple"
    assert inst.rest[0].resource[79].conditionalUpdate == True
    assert inst.rest[0].resource[79].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[79].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[79].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[79].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[79].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[79].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[79].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[79].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[79].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[79].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[79].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[79].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[79].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[79].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[79].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[79].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[79].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[79].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[79].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/RelatedPerson"
    )
    assert inst.rest[0].resource[79].searchInclude[0] == "RelatedPerson.patient"
    assert (
        inst.rest[0].resource[79].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-phone"
    )
    assert (
        inst.rest[0].resource[79].searchParam[0].documentation
        == "A value in a phone contact"
    )
    assert inst.rest[0].resource[79].searchParam[0].name == "phone"
    assert inst.rest[0].resource[79].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[79].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-phonetic"
    )
    assert (
        inst.rest[0].resource[79].searchParam[1].documentation
        == "A portion of name using some kind of phonetic matching algorithm"
    )
    assert inst.rest[0].resource[79].searchParam[1].name == "phonetic"
    assert inst.rest[0].resource[79].searchParam[1].type == "string"
    assert (
        inst.rest[0].resource[79].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-address-country"
    )
    assert (
        inst.rest[0].resource[79].searchParam[2].documentation
        == "A country specified in an address"
    )
    assert inst.rest[0].resource[79].searchParam[2].name == "address-country"
    assert inst.rest[0].resource[79].searchParam[2].type == "string"
    assert (
        inst.rest[0].resource[79].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-patient"
    )
    assert (
        inst.rest[0].resource[79].searchParam[3].documentation
        == "The patient this person is related to"
    )
    assert inst.rest[0].resource[79].searchParam[3].name == "patient"
    assert inst.rest[0].resource[79].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[79].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-address-city"
    )
    assert (
        inst.rest[0].resource[79].searchParam[4].documentation
        == "A city specified in an address"
    )
    assert inst.rest[0].resource[79].searchParam[4].name == "address-city"
    assert inst.rest[0].resource[79].searchParam[4].type == "string"
    assert (
        inst.rest[0].resource[79].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-address-state"
    )
    assert (
        inst.rest[0].resource[79].searchParam[5].documentation
        == "A state specified in an address"
    )
    assert inst.rest[0].resource[79].searchParam[5].name == "address-state"
    assert inst.rest[0].resource[79].searchParam[5].type == "string"
    assert (
        inst.rest[0].resource[79].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-email"
    )
    assert (
        inst.rest[0].resource[79].searchParam[6].documentation
        == "A value in an email contact"
    )
    assert inst.rest[0].resource[79].searchParam[6].name == "email"
    assert inst.rest[0].resource[79].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[79].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-address"
    )
    assert (
        inst.rest[0].resource[79].searchParam[7].documentation
        == "An address in any kind of address/part"
    )
    assert inst.rest[0].resource[79].searchParam[7].name == "address"
    assert inst.rest[0].resource[79].searchParam[7].type == "string"
    assert (
        inst.rest[0].resource[79].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-address-use"
    )
    assert (
        inst.rest[0].resource[79].searchParam[8].documentation
        == "A use code specified in an address"
    )
    assert inst.rest[0].resource[79].searchParam[8].name == "address-use"
    assert inst.rest[0].resource[79].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[79].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-name"
    )
    assert (
        inst.rest[0].resource[79].searchParam[9].documentation
        == "A portion of name in any name part"
    )
    assert inst.rest[0].resource[79].searchParam[9].name == "name"
    assert inst.rest[0].resource[79].searchParam[9].type == "string"
    assert (
        inst.rest[0].resource[79].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-birthdate"
    )
    assert (
        inst.rest[0].resource[79].searchParam[10].documentation
        == "The Related Person's date of birth"
    )
    assert inst.rest[0].resource[79].searchParam[10].name == "birthdate"
    assert inst.rest[0].resource[79].searchParam[10].type == "date"
    assert (
        inst.rest[0].resource[79].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-telecom"
    )
    assert (
        inst.rest[0].resource[79].searchParam[11].documentation
        == "The value in any kind of contact"
    )
    assert inst.rest[0].resource[79].searchParam[11].name == "telecom"
    assert inst.rest[0].resource[79].searchParam[11].type == "token"
    assert (
        inst.rest[0].resource[79].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-gender"
    )
    assert (
        inst.rest[0].resource[79].searchParam[12].documentation
        == "Gender of the person"
    )
    assert inst.rest[0].resource[79].searchParam[12].name == "gender"
    assert inst.rest[0].resource[79].searchParam[12].type == "token"
    assert (
        inst.rest[0].resource[79].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-identifier"
    )
    assert (
        inst.rest[0].resource[79].searchParam[13].documentation
        == "A patient Identifier"
    )
    assert inst.rest[0].resource[79].searchParam[13].name == "identifier"
    assert inst.rest[0].resource[79].searchParam[13].type == "token"
    assert (
        inst.rest[0].resource[79].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/relatedperson-address-postalcode"
    )
    assert (
        inst.rest[0].resource[79].searchParam[14].documentation
        == "A postal code specified in an address"
    )
    assert inst.rest[0].resource[79].searchParam[14].name == "address-postalcode"
    assert inst.rest[0].resource[79].searchParam[14].type == "string"
    assert (
        inst.rest[0].resource[79].searchRevInclude[0] == "AllergyIntolerance.reporter"
    )
    assert inst.rest[0].resource[79].searchRevInclude[1] == "Appointment.patient"
    assert inst.rest[0].resource[79].searchRevInclude[2] == "Appointment.practitioner"
    assert inst.rest[0].resource[79].searchRevInclude[3] == "Appointment.location"
    assert inst.rest[0].resource[79].searchRevInclude[4] == "Appointment.actor"
    assert (
        inst.rest[0].resource[79].searchRevInclude[5] == "AppointmentResponse.patient"
    )
    assert (
        inst.rest[0].resource[79].searchRevInclude[6]
        == "AppointmentResponse.practitioner"
    )
    assert (
        inst.rest[0].resource[79].searchRevInclude[7] == "AppointmentResponse.location"
    )
    assert inst.rest[0].resource[79].searchRevInclude[8] == "AppointmentResponse.actor"
    assert inst.rest[0].resource[79].searchRevInclude[9] == "AuditEvent.patient"
    assert inst.rest[0].resource[79].searchRevInclude[10] == "AuditEvent.participant"
    assert inst.rest[0].resource[79].searchRevInclude[11] == "Basic.author"
    assert inst.rest[0].resource[79].searchRevInclude[12] == "CarePlan.participant"
    assert inst.rest[0].resource[79].searchRevInclude[13] == "CarePlan.performer"
    assert inst.rest[0].resource[79].searchRevInclude[14] == "Communication.sender"
    assert inst.rest[0].resource[79].searchRevInclude[15] == "Communication.recipient"
    assert (
        inst.rest[0].resource[79].searchRevInclude[16] == "CommunicationRequest.sender"
    )
    assert (
        inst.rest[0].resource[79].searchRevInclude[17]
        == "CommunicationRequest.requester"
    )
    assert (
        inst.rest[0].resource[79].searchRevInclude[18]
        == "CommunicationRequest.recipient"
    )
    assert inst.rest[0].resource[79].searchRevInclude[19] == "Composition.author"
    assert inst.rest[0].resource[79].searchRevInclude[20] == "Contract.signer"
    assert inst.rest[0].resource[79].searchRevInclude[21] == "Contract.actor"
    assert (
        inst.rest[0].resource[79].searchRevInclude[22] == "DocumentManifest.recipient"
    )
    assert inst.rest[0].resource[79].searchRevInclude[23] == "DocumentManifest.author"
    assert inst.rest[0].resource[79].searchRevInclude[24] == "DocumentReference.author"
    assert inst.rest[0].resource[79].searchRevInclude[25] == "Encounter.practitioner"
    assert inst.rest[0].resource[79].searchRevInclude[26] == "Encounter.participant"
    assert (
        inst.rest[0].resource[79].searchRevInclude[27]
        == "ImagingObjectSelection.author"
    )
    assert (
        inst.rest[0].resource[79].searchRevInclude[28]
        == "MedicationAdministration.practitioner"
    )
    assert (
        inst.rest[0].resource[79].searchRevInclude[29] == "MedicationStatement.source"
    )
    assert inst.rest[0].resource[79].searchRevInclude[30] == "Observation.performer"
    assert inst.rest[0].resource[79].searchRevInclude[31] == "Person.link"
    assert inst.rest[0].resource[79].searchRevInclude[32] == "Person.relatedperson"
    assert inst.rest[0].resource[79].searchRevInclude[33] == "Person.patient"
    assert inst.rest[0].resource[79].searchRevInclude[34] == "Person.practitioner"
    assert inst.rest[0].resource[79].searchRevInclude[35] == "Procedure.performer"
    assert inst.rest[0].resource[79].searchRevInclude[36] == "ProcedureRequest.orderer"
    assert (
        inst.rest[0].resource[79].searchRevInclude[37] == "ProcedureRequest.performer"
    )
    assert inst.rest[0].resource[79].searchRevInclude[38] == "Provenance.agent"
    assert (
        inst.rest[0].resource[79].searchRevInclude[39] == "QuestionnaireResponse.author"
    )
    assert (
        inst.rest[0].resource[79].searchRevInclude[40] == "QuestionnaireResponse.source"
    )
    assert inst.rest[0].resource[79].searchRevInclude[41] == "Schedule.actor"
    assert inst.rest[0].resource[79].type == "RelatedPerson"
    assert inst.rest[0].resource[80].conditionalCreate == True
    assert inst.rest[0].resource[80].conditionalDelete == "multiple"
    assert inst.rest[0].resource[80].conditionalUpdate == True
    assert inst.rest[0].resource[80].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[80].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[80].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[80].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[80].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[80].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[80].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[80].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[80].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[80].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[80].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[80].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[80].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[80].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[80].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[80].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[80].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[80].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[80].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/RiskAssessment"
    )
    assert inst.rest[0].resource[80].searchInclude[0] == "RiskAssessment.patient"
    assert inst.rest[0].resource[80].searchInclude[1] == "RiskAssessment.condition"
    assert inst.rest[0].resource[80].searchInclude[2] == "RiskAssessment.subject"
    assert inst.rest[0].resource[80].searchInclude[3] == "RiskAssessment.performer"
    assert inst.rest[0].resource[80].searchInclude[4] == "RiskAssessment.encounter"
    assert (
        inst.rest[0].resource[80].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/riskassessment-patient"
    )
    assert (
        inst.rest[0].resource[80].searchParam[0].documentation
        == "Who/what does assessment apply to?"
    )
    assert inst.rest[0].resource[80].searchParam[0].name == "patient"
    assert inst.rest[0].resource[80].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[80].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/riskassessment-condition"
    )
    assert (
        inst.rest[0].resource[80].searchParam[1].documentation == "Condition assessed"
    )
    assert inst.rest[0].resource[80].searchParam[1].name == "condition"
    assert inst.rest[0].resource[80].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[80].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/riskassessment-subject"
    )
    assert (
        inst.rest[0].resource[80].searchParam[2].documentation
        == "Who/what does assessment apply to?"
    )
    assert inst.rest[0].resource[80].searchParam[2].name == "subject"
    assert inst.rest[0].resource[80].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[80].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/riskassessment-performer"
    )
    assert (
        inst.rest[0].resource[80].searchParam[3].documentation == "Who did assessment?"
    )
    assert inst.rest[0].resource[80].searchParam[3].name == "performer"
    assert inst.rest[0].resource[80].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[80].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/riskassessment-method"
    )
    assert (
        inst.rest[0].resource[80].searchParam[4].documentation == "Evaluation mechanism"
    )
    assert inst.rest[0].resource[80].searchParam[4].name == "method"
    assert inst.rest[0].resource[80].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[80].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/riskassessment-encounter"
    )
    assert (
        inst.rest[0].resource[80].searchParam[5].documentation
        == "Where was assessment performed?"
    )
    assert inst.rest[0].resource[80].searchParam[5].name == "encounter"
    assert inst.rest[0].resource[80].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[80].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/riskassessment-date"
    )
    assert (
        inst.rest[0].resource[80].searchParam[6].documentation
        == "When was assessment made?"
    )
    assert inst.rest[0].resource[80].searchParam[6].name == "date"
    assert inst.rest[0].resource[80].searchParam[6].type == "date"
    assert (
        inst.rest[0].resource[80].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/riskassessment-identifier"
    )
    assert (
        inst.rest[0].resource[80].searchParam[7].documentation
        == "Unique identifier for the assessment"
    )
    assert inst.rest[0].resource[80].searchParam[7].name == "identifier"
    assert inst.rest[0].resource[80].searchParam[7].type == "token"
    assert inst.rest[0].resource[80].type == "RiskAssessment"
    assert inst.rest[0].resource[81].conditionalCreate == True
    assert inst.rest[0].resource[81].conditionalDelete == "multiple"
    assert inst.rest[0].resource[81].conditionalUpdate == True
    assert inst.rest[0].resource[81].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[81].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[81].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[81].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[81].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[81].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[81].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[81].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[81].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[81].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[81].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[81].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[81].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[81].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[81].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[81].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[81].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[81].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[81].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Schedule"
    )
    assert inst.rest[0].resource[81].searchInclude[0] == "Schedule.actor"
    assert (
        inst.rest[0].resource[81].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/schedule-actor"
    )
    assert (
        inst.rest[0].resource[81].searchParam[0].documentation
        == "The individual(HealthcareService, Practitioner, Location, ...) to find a Schedule for"
    )
    assert inst.rest[0].resource[81].searchParam[0].name == "actor"
    assert inst.rest[0].resource[81].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[81].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/schedule-date"
    )
    assert (
        inst.rest[0].resource[81].searchParam[1].documentation
        == "Search for Schedule resources that have a period that contains this date specified"
    )
    assert inst.rest[0].resource[81].searchParam[1].name == "date"
    assert inst.rest[0].resource[81].searchParam[1].type == "date"
    assert (
        inst.rest[0].resource[81].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/schedule-type"
    )
    assert (
        inst.rest[0].resource[81].searchParam[2].documentation
        == "The type of appointments that can be booked into associated slot(s)"
    )
    assert inst.rest[0].resource[81].searchParam[2].name == "type"
    assert inst.rest[0].resource[81].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[81].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/schedule-identifier"
    )
    assert (
        inst.rest[0].resource[81].searchParam[3].documentation
        == "A Schedule Identifier"
    )
    assert inst.rest[0].resource[81].searchParam[3].name == "identifier"
    assert inst.rest[0].resource[81].searchParam[3].type == "token"
    assert inst.rest[0].resource[81].searchRevInclude[0] == "Slot.schedule"
    assert inst.rest[0].resource[81].type == "Schedule"
    assert inst.rest[0].resource[82].conditionalCreate == True
    assert inst.rest[0].resource[82].conditionalDelete == "multiple"
    assert inst.rest[0].resource[82].conditionalUpdate == True
    assert inst.rest[0].resource[82].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[82].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[82].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[82].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[82].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[82].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[82].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[82].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[82].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[82].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[82].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[82].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[82].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[82].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[82].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[82].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[82].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[82].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[82].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/SearchParameter"
    )
    assert (
        inst.rest[0].resource[82].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/searchparameter-description"
    )
    assert (
        inst.rest[0].resource[82].searchParam[0].documentation
        == "Documentation for  search parameter"
    )
    assert inst.rest[0].resource[82].searchParam[0].name == "description"
    assert inst.rest[0].resource[82].searchParam[0].type == "string"
    assert (
        inst.rest[0].resource[82].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/searchparameter-name"
    )
    assert (
        inst.rest[0].resource[82].searchParam[1].documentation
        == "Informal name for this search parameter"
    )
    assert inst.rest[0].resource[82].searchParam[1].name == "name"
    assert inst.rest[0].resource[82].searchParam[1].type == "string"
    assert (
        inst.rest[0].resource[82].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/searchparameter-target"
    )
    assert (
        inst.rest[0].resource[82].searchParam[2].documentation
        == "Types of resource (if a resource reference)"
    )
    assert inst.rest[0].resource[82].searchParam[2].name == "target"
    assert inst.rest[0].resource[82].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[82].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/searchparameter-base"
    )
    assert (
        inst.rest[0].resource[82].searchParam[3].documentation
        == "The resource type this search parameter applies to"
    )
    assert inst.rest[0].resource[82].searchParam[3].name == "base"
    assert inst.rest[0].resource[82].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[82].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/searchparameter-code"
    )
    assert inst.rest[0].resource[82].searchParam[4].documentation == "Code used in URL"
    assert inst.rest[0].resource[82].searchParam[4].name == "code"
    assert inst.rest[0].resource[82].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[82].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/searchparameter-type"
    )
    assert (
        inst.rest[0].resource[82].searchParam[5].documentation
        == "number | date | string | token | reference | composite | quantity | uri"
    )
    assert inst.rest[0].resource[82].searchParam[5].name == "type"
    assert inst.rest[0].resource[82].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[82].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/searchparameter-url"
    )
    assert (
        inst.rest[0].resource[82].searchParam[6].documentation
        == "Absolute URL used to reference this search parameter"
    )
    assert inst.rest[0].resource[82].searchParam[6].name == "url"
    assert inst.rest[0].resource[82].searchParam[6].type == "uri"
    assert inst.rest[0].resource[82].type == "SearchParameter"
    assert inst.rest[0].resource[83].conditionalCreate == True
    assert inst.rest[0].resource[83].conditionalDelete == "multiple"
    assert inst.rest[0].resource[83].conditionalUpdate == True
    assert inst.rest[0].resource[83].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[83].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[83].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[83].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[83].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[83].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[83].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[83].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[83].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[83].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[83].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[83].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[83].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[83].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[83].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[83].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[83].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[83].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[83].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Slot"
    )
    assert inst.rest[0].resource[83].searchInclude[0] == "Slot.schedule"
    assert (
        inst.rest[0].resource[83].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/slot-fb-type"
    )
    assert (
        inst.rest[0].resource[83].searchParam[0].documentation
        == "The free/busy status of the appointment"
    )
    assert inst.rest[0].resource[83].searchParam[0].name == "fb-type"
    assert inst.rest[0].resource[83].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[83].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/slot-schedule"
    )
    assert (
        inst.rest[0].resource[83].searchParam[1].documentation
        == "The Schedule Resource that we are seeking a slot within"
    )
    assert inst.rest[0].resource[83].searchParam[1].name == "schedule"
    assert inst.rest[0].resource[83].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[83].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/slot-start"
    )
    assert (
        inst.rest[0].resource[83].searchParam[2].documentation
        == "Appointment date/time."
    )
    assert inst.rest[0].resource[83].searchParam[2].name == "start"
    assert inst.rest[0].resource[83].searchParam[2].type == "date"
    assert (
        inst.rest[0].resource[83].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/slot-slot-type"
    )
    assert (
        inst.rest[0].resource[83].searchParam[3].documentation
        == "The type of appointments that can be booked into the slot"
    )
    assert inst.rest[0].resource[83].searchParam[3].name == "slot-type"
    assert inst.rest[0].resource[83].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[83].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/slot-identifier"
    )
    assert inst.rest[0].resource[83].searchParam[4].documentation == "A Slot Identifier"
    assert inst.rest[0].resource[83].searchParam[4].name == "identifier"
    assert inst.rest[0].resource[83].searchParam[4].type == "token"
    assert inst.rest[0].resource[83].type == "Slot"
    assert inst.rest[0].resource[84].conditionalCreate == True
    assert inst.rest[0].resource[84].conditionalDelete == "multiple"
    assert inst.rest[0].resource[84].conditionalUpdate == True
    assert inst.rest[0].resource[84].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[84].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[84].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[84].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[84].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[84].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[84].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[84].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[84].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[84].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[84].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[84].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[84].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[84].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[84].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[84].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[84].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[84].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[84].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Specimen"
    )
    assert inst.rest[0].resource[84].searchInclude[0] == "Specimen.collector"
    assert inst.rest[0].resource[84].searchInclude[1] == "Specimen.patient"
    assert inst.rest[0].resource[84].searchInclude[2] == "Specimen.subject"
    assert inst.rest[0].resource[84].searchInclude[3] == "Specimen.parent"
    assert (
        inst.rest[0].resource[84].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/specimen-collector"
    )
    assert (
        inst.rest[0].resource[84].searchParam[0].documentation
        == "Who collected the specimen"
    )
    assert inst.rest[0].resource[84].searchParam[0].name == "collector"
    assert inst.rest[0].resource[84].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[84].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/specimen-container-id"
    )
    assert (
        inst.rest[0].resource[84].searchParam[1].documentation
        == "The unique identifier associated with the specimen container"
    )
    assert inst.rest[0].resource[84].searchParam[1].name == "container-id"
    assert inst.rest[0].resource[84].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[84].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/specimen-patient"
    )
    assert (
        inst.rest[0].resource[84].searchParam[2].documentation
        == "The patient the specimen comes from"
    )
    assert inst.rest[0].resource[84].searchParam[2].name == "patient"
    assert inst.rest[0].resource[84].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[84].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/specimen-bodysite"
    )
    assert (
        inst.rest[0].resource[84].searchParam[3].documentation
        == "The code for the body site from where the specimen originated"
    )
    assert inst.rest[0].resource[84].searchParam[3].name == "bodysite"
    assert inst.rest[0].resource[84].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[84].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/specimen-container"
    )
    assert (
        inst.rest[0].resource[84].searchParam[4].documentation
        == "The kind of specimen container"
    )
    assert inst.rest[0].resource[84].searchParam[4].name == "container"
    assert inst.rest[0].resource[84].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[84].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/specimen-collected"
    )
    assert (
        inst.rest[0].resource[84].searchParam[5].documentation
        == "The date the specimen was collected"
    )
    assert inst.rest[0].resource[84].searchParam[5].name == "collected"
    assert inst.rest[0].resource[84].searchParam[5].type == "date"
    assert (
        inst.rest[0].resource[84].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/specimen-subject"
    )
    assert (
        inst.rest[0].resource[84].searchParam[6].documentation
        == "The subject of the specimen"
    )
    assert inst.rest[0].resource[84].searchParam[6].name == "subject"
    assert inst.rest[0].resource[84].searchParam[6].type == "reference"
    assert (
        inst.rest[0].resource[84].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/specimen-accession"
    )
    assert (
        inst.rest[0].resource[84].searchParam[7].documentation
        == "The accession number associated with the specimen"
    )
    assert inst.rest[0].resource[84].searchParam[7].name == "accession"
    assert inst.rest[0].resource[84].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[84].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/specimen-parent"
    )
    assert (
        inst.rest[0].resource[84].searchParam[8].documentation
        == "The parent of the specimen"
    )
    assert inst.rest[0].resource[84].searchParam[8].name == "parent"
    assert inst.rest[0].resource[84].searchParam[8].type == "reference"
    assert (
        inst.rest[0].resource[84].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/specimen-type"
    )
    assert inst.rest[0].resource[84].searchParam[9].documentation == "The specimen type"
    assert inst.rest[0].resource[84].searchParam[9].name == "type"
    assert inst.rest[0].resource[84].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[84].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/specimen-identifier"
    )
    assert (
        inst.rest[0].resource[84].searchParam[10].documentation
        == "The unique identifier associated with the specimen"
    )
    assert inst.rest[0].resource[84].searchParam[10].name == "identifier"
    assert inst.rest[0].resource[84].searchParam[10].type == "token"
    assert inst.rest[0].resource[84].searchRevInclude[0] == "DiagnosticOrder.specimen"
    assert inst.rest[0].resource[84].searchRevInclude[1] == "DiagnosticReport.specimen"
    assert inst.rest[0].resource[84].searchRevInclude[2] == "Media.patient"
    assert inst.rest[0].resource[84].searchRevInclude[3] == "Media.subject"
    assert inst.rest[0].resource[84].searchRevInclude[4] == "Observation.specimen"
    assert inst.rest[0].resource[84].searchRevInclude[5] == "Specimen.parent"
    assert inst.rest[0].resource[84].type == "Specimen"
    assert inst.rest[0].resource[85].conditionalCreate == True
    assert inst.rest[0].resource[85].conditionalDelete == "multiple"
    assert inst.rest[0].resource[85].conditionalUpdate == True
    assert inst.rest[0].resource[85].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[85].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[85].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[85].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[85].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[85].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[85].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[85].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[85].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[85].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[85].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[85].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[85].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[85].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[85].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[85].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[85].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[85].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[85].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
    )
    assert inst.rest[0].resource[85].searchInclude[0] == "StructureDefinition.valueset"
    assert (
        inst.rest[0].resource[85].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-abstract"
    )
    assert (
        inst.rest[0].resource[85].searchParam[0].documentation
        == "Whether the structure is abstract"
    )
    assert inst.rest[0].resource[85].searchParam[0].name == "abstract"
    assert inst.rest[0].resource[85].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[85].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-status"
    )
    assert (
        inst.rest[0].resource[85].searchParam[1].documentation
        == "The current status of the profile"
    )
    assert inst.rest[0].resource[85].searchParam[1].name == "status"
    assert inst.rest[0].resource[85].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[85].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-experimental"
    )
    assert (
        inst.rest[0].resource[85].searchParam[2].documentation
        == "If for testing purposes, not real usage"
    )
    assert inst.rest[0].resource[85].searchParam[2].name == "experimental"
    assert inst.rest[0].resource[85].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[85].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-display"
    )
    assert (
        inst.rest[0].resource[85].searchParam[3].documentation
        == "Use this name when displaying the value"
    )
    assert inst.rest[0].resource[85].searchParam[3].name == "display"
    assert inst.rest[0].resource[85].searchParam[3].type == "string"
    assert (
        inst.rest[0].resource[85].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-ext-context"
    )
    assert (
        inst.rest[0].resource[85].searchParam[4].documentation
        == "Where the extension can be used in instances"
    )
    assert inst.rest[0].resource[85].searchParam[4].name == "ext-context"
    assert inst.rest[0].resource[85].searchParam[4].type == "string"
    assert (
        inst.rest[0].resource[85].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-code"
    )
    assert (
        inst.rest[0].resource[85].searchParam[5].documentation
        == "A code for the profile"
    )
    assert inst.rest[0].resource[85].searchParam[5].name == "code"
    assert inst.rest[0].resource[85].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[85].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-date"
    )
    assert (
        inst.rest[0].resource[85].searchParam[6].documentation
        == "The profile publication date"
    )
    assert inst.rest[0].resource[85].searchParam[6].name == "date"
    assert inst.rest[0].resource[85].searchParam[6].type == "date"
    assert (
        inst.rest[0].resource[85].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-type"
    )
    assert (
        inst.rest[0].resource[85].searchParam[7].documentation
        == "Any datatype or resource, including abstract ones"
    )
    assert inst.rest[0].resource[85].searchParam[7].name == "type"
    assert inst.rest[0].resource[85].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[85].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-url"
    )
    assert (
        inst.rest[0].resource[85].searchParam[8].documentation
        == "Absolute URL used to reference this StructureDefinition"
    )
    assert inst.rest[0].resource[85].searchParam[8].name == "url"
    assert inst.rest[0].resource[85].searchParam[8].type == "uri"
    assert (
        inst.rest[0].resource[85].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-kind"
    )
    assert (
        inst.rest[0].resource[85].searchParam[9].documentation
        == "datatype | resource | logical"
    )
    assert inst.rest[0].resource[85].searchParam[9].name == "kind"
    assert inst.rest[0].resource[85].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[85].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-version"
    )
    assert (
        inst.rest[0].resource[85].searchParam[10].documentation
        == "The version identifier of the profile"
    )
    assert inst.rest[0].resource[85].searchParam[10].name == "version"
    assert inst.rest[0].resource[85].searchParam[10].type == "token"
    assert (
        inst.rest[0].resource[85].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-publisher"
    )
    assert (
        inst.rest[0].resource[85].searchParam[11].documentation
        == "Name of the publisher of the profile"
    )
    assert inst.rest[0].resource[85].searchParam[11].name == "publisher"
    assert inst.rest[0].resource[85].searchParam[11].type == "string"
    assert (
        inst.rest[0].resource[85].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-base-path"
    )
    assert (
        inst.rest[0].resource[85].searchParam[12].documentation
        == "Path that identifies the base element"
    )
    assert inst.rest[0].resource[85].searchParam[12].name == "base-path"
    assert inst.rest[0].resource[85].searchParam[12].type == "token"
    assert (
        inst.rest[0].resource[85].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-valueset"
    )
    assert (
        inst.rest[0].resource[85].searchParam[13].documentation
        == "A vocabulary binding reference"
    )
    assert inst.rest[0].resource[85].searchParam[13].name == "valueset"
    assert inst.rest[0].resource[85].searchParam[13].type == "reference"
    assert (
        inst.rest[0].resource[85].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-context-type"
    )
    assert (
        inst.rest[0].resource[85].searchParam[14].documentation
        == "resource | datatype | mapping | extension"
    )
    assert inst.rest[0].resource[85].searchParam[14].name == "context-type"
    assert inst.rest[0].resource[85].searchParam[14].type == "token"
    assert (
        inst.rest[0].resource[85].searchParam[15].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-description"
    )
    assert (
        inst.rest[0].resource[85].searchParam[15].documentation
        == "Text search in the description of the profile"
    )
    assert inst.rest[0].resource[85].searchParam[15].name == "description"
    assert inst.rest[0].resource[85].searchParam[15].type == "string"
    assert (
        inst.rest[0].resource[85].searchParam[16].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-name"
    )
    assert (
        inst.rest[0].resource[85].searchParam[16].documentation == "Name of the profile"
    )
    assert inst.rest[0].resource[85].searchParam[16].name == "name"
    assert inst.rest[0].resource[85].searchParam[16].type == "string"
    assert (
        inst.rest[0].resource[85].searchParam[17].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-base"
    )
    assert (
        inst.rest[0].resource[85].searchParam[17].documentation
        == "Structure that this set of constraints applies to"
    )
    assert inst.rest[0].resource[85].searchParam[17].name == "base"
    assert inst.rest[0].resource[85].searchParam[17].type == "uri"
    assert (
        inst.rest[0].resource[85].searchParam[18].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-context"
    )
    assert (
        inst.rest[0].resource[85].searchParam[18].documentation
        == "A use context assigned to the structure"
    )
    assert inst.rest[0].resource[85].searchParam[18].name == "context"
    assert inst.rest[0].resource[85].searchParam[18].type == "token"
    assert (
        inst.rest[0].resource[85].searchParam[19].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-path"
    )
    assert (
        inst.rest[0].resource[85].searchParam[19].documentation
        == "A path that is constrained in the profile"
    )
    assert inst.rest[0].resource[85].searchParam[19].name == "path"
    assert inst.rest[0].resource[85].searchParam[19].type == "token"
    assert (
        inst.rest[0].resource[85].searchParam[20].definition
        == "http://hl7.org/fhir/SearchParameter/structuredefinition-identifier"
    )
    assert (
        inst.rest[0].resource[85].searchParam[20].documentation
        == "The identifier of the profile"
    )
    assert inst.rest[0].resource[85].searchParam[20].name == "identifier"
    assert inst.rest[0].resource[85].searchParam[20].type == "token"
    assert inst.rest[0].resource[85].searchRevInclude[0] == "ConceptMap.sourceuri"
    assert inst.rest[0].resource[85].searchRevInclude[1] == "ConceptMap.source"
    assert inst.rest[0].resource[85].searchRevInclude[2] == "ConceptMap.target"
    assert (
        inst.rest[0].resource[85].searchRevInclude[3] == "Conformance.supported-profile"
    )
    assert inst.rest[0].resource[85].searchRevInclude[4] == "Conformance.profile"
    assert (
        inst.rest[0].resource[85].searchRevInclude[5] == "OperationDefinition.profile"
    )
    assert inst.rest[0].resource[85].type == "StructureDefinition"
    assert inst.rest[0].resource[86].conditionalCreate == True
    assert inst.rest[0].resource[86].conditionalDelete == "multiple"
    assert inst.rest[0].resource[86].conditionalUpdate == True
    assert inst.rest[0].resource[86].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[86].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[86].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[86].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[86].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[86].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[86].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[86].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[86].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[86].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[86].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[86].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[86].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[86].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[86].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[86].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[86].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[86].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[86].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Subscription"
    )
    assert (
        inst.rest[0].resource[86].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/subscription-criteria"
    )
    assert (
        inst.rest[0].resource[86].searchParam[0].documentation
        == "Rule for server push criteria"
    )
    assert inst.rest[0].resource[86].searchParam[0].name == "criteria"
    assert inst.rest[0].resource[86].searchParam[0].type == "string"
    assert (
        inst.rest[0].resource[86].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/subscription-status"
    )
    assert (
        inst.rest[0].resource[86].searchParam[1].documentation
        == "requested | active | error | off"
    )
    assert inst.rest[0].resource[86].searchParam[1].name == "status"
    assert inst.rest[0].resource[86].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[86].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/subscription-tag"
    )
    assert (
        inst.rest[0].resource[86].searchParam[2].documentation
        == "A tag to add to matching resources"
    )
    assert inst.rest[0].resource[86].searchParam[2].name == "tag"
    assert inst.rest[0].resource[86].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[86].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/subscription-payload"
    )
    assert (
        inst.rest[0].resource[86].searchParam[3].documentation
        == "Mimetype to send, or blank for no payload"
    )
    assert inst.rest[0].resource[86].searchParam[3].name == "payload"
    assert inst.rest[0].resource[86].searchParam[3].type == "string"
    assert (
        inst.rest[0].resource[86].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/subscription-type"
    )
    assert (
        inst.rest[0].resource[86].searchParam[4].documentation
        == "rest-hook | websocket | email | sms | message"
    )
    assert inst.rest[0].resource[86].searchParam[4].name == "type"
    assert inst.rest[0].resource[86].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[86].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/subscription-contact"
    )
    assert (
        inst.rest[0].resource[86].searchParam[5].documentation
        == "Contact details for source (e.g. troubleshooting)"
    )
    assert inst.rest[0].resource[86].searchParam[5].name == "contact"
    assert inst.rest[0].resource[86].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[86].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/subscription-url"
    )
    assert (
        inst.rest[0].resource[86].searchParam[6].documentation
        == "Where the channel points to"
    )
    assert inst.rest[0].resource[86].searchParam[6].name == "url"
    assert inst.rest[0].resource[86].searchParam[6].type == "uri"
    assert inst.rest[0].resource[86].type == "Subscription"
    assert inst.rest[0].resource[87].conditionalCreate == True
    assert inst.rest[0].resource[87].conditionalDelete == "multiple"
    assert inst.rest[0].resource[87].conditionalUpdate == True
    assert inst.rest[0].resource[87].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[87].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[87].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[87].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[87].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[87].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[87].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[87].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[87].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[87].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[87].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[87].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[87].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[87].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[87].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[87].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[87].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[87].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[87].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/Substance"
    )
    assert inst.rest[0].resource[87].searchInclude[0] == "Substance.substance"
    assert (
        inst.rest[0].resource[87].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/substance-substance"
    )
    assert (
        inst.rest[0].resource[87].searchParam[0].documentation
        == "A component of the substance"
    )
    assert inst.rest[0].resource[87].searchParam[0].name == "substance"
    assert inst.rest[0].resource[87].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[87].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/substance-container-identifier"
    )
    assert (
        inst.rest[0].resource[87].searchParam[1].documentation
        == "Identifier of the package/container"
    )
    assert inst.rest[0].resource[87].searchParam[1].name == "container-identifier"
    assert inst.rest[0].resource[87].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[87].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/substance-category"
    )
    assert (
        inst.rest[0].resource[87].searchParam[2].documentation
        == "The category of the substance"
    )
    assert inst.rest[0].resource[87].searchParam[2].name == "category"
    assert inst.rest[0].resource[87].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[87].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/substance-quantity"
    )
    assert (
        inst.rest[0].resource[87].searchParam[3].documentation
        == "Amount of substance in the package"
    )
    assert inst.rest[0].resource[87].searchParam[3].name == "quantity"
    assert inst.rest[0].resource[87].searchParam[3].type == "quantity"
    assert (
        inst.rest[0].resource[87].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/substance-code"
    )
    assert (
        inst.rest[0].resource[87].searchParam[4].documentation
        == "The code of the substance"
    )
    assert inst.rest[0].resource[87].searchParam[4].name == "code"
    assert inst.rest[0].resource[87].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[87].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/substance-identifier"
    )
    assert (
        inst.rest[0].resource[87].searchParam[5].documentation
        == "Unique identifier for the substance"
    )
    assert inst.rest[0].resource[87].searchParam[5].name == "identifier"
    assert inst.rest[0].resource[87].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[87].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/substance-expiry"
    )
    assert (
        inst.rest[0].resource[87].searchParam[6].documentation
        == "Expiry date of package or container of substance"
    )
    assert inst.rest[0].resource[87].searchParam[6].name == "expiry"
    assert inst.rest[0].resource[87].searchParam[6].type == "date"
    assert inst.rest[0].resource[87].searchRevInclude[0] == "Contract.actor"
    assert inst.rest[0].resource[87].searchRevInclude[1] == "Group.member"
    assert inst.rest[0].resource[87].searchRevInclude[2] == "Medication.ingredient"
    assert inst.rest[0].resource[87].searchRevInclude[3] == "Order.patient"
    assert inst.rest[0].resource[87].searchRevInclude[4] == "Order.subject"
    assert inst.rest[0].resource[87].searchRevInclude[5] == "Specimen.patient"
    assert inst.rest[0].resource[87].searchRevInclude[6] == "Specimen.subject"
    assert inst.rest[0].resource[87].searchRevInclude[7] == "Substance.substance"
    assert inst.rest[0].resource[87].type == "Substance"
    assert inst.rest[0].resource[88].conditionalCreate == True
    assert inst.rest[0].resource[88].conditionalDelete == "multiple"
    assert inst.rest[0].resource[88].conditionalUpdate == True
    assert inst.rest[0].resource[88].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[88].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[88].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[88].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[88].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[88].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[88].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[88].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[88].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[88].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[88].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[88].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[88].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[88].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[88].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[88].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[88].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[88].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[88].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/SupplyDelivery"
    )
    assert inst.rest[0].resource[88].searchInclude[0] == "SupplyDelivery.patient"
    assert inst.rest[0].resource[88].searchInclude[1] == "SupplyDelivery.receiver"
    assert inst.rest[0].resource[88].searchInclude[2] == "SupplyDelivery.supplier"
    assert (
        inst.rest[0].resource[88].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/supplydelivery-patient"
    )
    assert (
        inst.rest[0].resource[88].searchParam[0].documentation
        == "Patient for whom the item is supplied"
    )
    assert inst.rest[0].resource[88].searchParam[0].name == "patient"
    assert inst.rest[0].resource[88].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[88].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/supplydelivery-receiver"
    )
    assert (
        inst.rest[0].resource[88].searchParam[1].documentation
        == "Who collected the Supply"
    )
    assert inst.rest[0].resource[88].searchParam[1].name == "receiver"
    assert inst.rest[0].resource[88].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[88].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/supplydelivery-status"
    )
    assert (
        inst.rest[0].resource[88].searchParam[2].documentation
        == "in-progress | completed | abandoned"
    )
    assert inst.rest[0].resource[88].searchParam[2].name == "status"
    assert inst.rest[0].resource[88].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[88].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/supplydelivery-identifier"
    )
    assert (
        inst.rest[0].resource[88].searchParam[3].documentation == "External identifier"
    )
    assert inst.rest[0].resource[88].searchParam[3].name == "identifier"
    assert inst.rest[0].resource[88].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[88].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/supplydelivery-supplier"
    )
    assert inst.rest[0].resource[88].searchParam[4].documentation == "Dispenser"
    assert inst.rest[0].resource[88].searchParam[4].name == "supplier"
    assert inst.rest[0].resource[88].searchParam[4].type == "reference"
    assert inst.rest[0].resource[88].type == "SupplyDelivery"
    assert inst.rest[0].resource[89].conditionalCreate == True
    assert inst.rest[0].resource[89].conditionalDelete == "multiple"
    assert inst.rest[0].resource[89].conditionalUpdate == True
    assert inst.rest[0].resource[89].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[89].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[89].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[89].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[89].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[89].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[89].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[89].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[89].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[89].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[89].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[89].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[89].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[89].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[89].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[89].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[89].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[89].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[89].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/SupplyRequest"
    )
    assert inst.rest[0].resource[89].searchInclude[0] == "SupplyRequest.patient"
    assert inst.rest[0].resource[89].searchInclude[1] == "SupplyRequest.source"
    assert inst.rest[0].resource[89].searchInclude[2] == "SupplyRequest.supplier"
    assert (
        inst.rest[0].resource[89].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/supplyrequest-patient"
    )
    assert (
        inst.rest[0].resource[89].searchParam[0].documentation
        == "Patient for whom the item is supplied"
    )
    assert inst.rest[0].resource[89].searchParam[0].name == "patient"
    assert inst.rest[0].resource[89].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[89].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/supplyrequest-source"
    )
    assert (
        inst.rest[0].resource[89].searchParam[1].documentation
        == "Who initiated this order"
    )
    assert inst.rest[0].resource[89].searchParam[1].name == "source"
    assert inst.rest[0].resource[89].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[89].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/supplyrequest-status"
    )
    assert (
        inst.rest[0].resource[89].searchParam[2].documentation
        == "requested | completed | failed | cancelled"
    )
    assert inst.rest[0].resource[89].searchParam[2].name == "status"
    assert inst.rest[0].resource[89].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[89].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/supplyrequest-date"
    )
    assert (
        inst.rest[0].resource[89].searchParam[3].documentation
        == "When the request was made"
    )
    assert inst.rest[0].resource[89].searchParam[3].name == "date"
    assert inst.rest[0].resource[89].searchParam[3].type == "date"
    assert (
        inst.rest[0].resource[89].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/supplyrequest-identifier"
    )
    assert inst.rest[0].resource[89].searchParam[4].documentation == "Unique identifier"
    assert inst.rest[0].resource[89].searchParam[4].name == "identifier"
    assert inst.rest[0].resource[89].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[89].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/supplyrequest-supplier"
    )
    assert (
        inst.rest[0].resource[89].searchParam[5].documentation
        == "Who is intended to fulfill the request"
    )
    assert inst.rest[0].resource[89].searchParam[5].name == "supplier"
    assert inst.rest[0].resource[89].searchParam[5].type == "reference"
    assert (
        inst.rest[0].resource[89].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/supplyrequest-kind"
    )
    assert (
        inst.rest[0].resource[89].searchParam[6].documentation
        == "The kind of supply (central, non-stock, etc.)"
    )
    assert inst.rest[0].resource[89].searchParam[6].name == "kind"
    assert inst.rest[0].resource[89].searchParam[6].type == "token"
    assert inst.rest[0].resource[89].searchRevInclude[0] == "CarePlan.activityreference"
    assert inst.rest[0].resource[89].searchRevInclude[1] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[89].searchRevInclude[2] == "ClinicalImpression.action"
    assert inst.rest[0].resource[89].type == "SupplyRequest"
    assert inst.rest[0].resource[90].conditionalCreate == True
    assert inst.rest[0].resource[90].conditionalDelete == "multiple"
    assert inst.rest[0].resource[90].conditionalUpdate == True
    assert inst.rest[0].resource[90].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[90].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[90].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[90].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[90].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[90].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[90].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[90].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[90].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[90].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[90].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[90].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[90].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[90].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[90].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[90].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[90].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[90].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[90].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/TestScript"
    )
    assert (
        inst.rest[0].resource[90].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/testscript-testscript-test-capability"
    )
    assert (
        inst.rest[0].resource[90].searchParam[0].documentation
        == "TestScript test required and validated capability"
    )
    assert inst.rest[0].resource[90].searchParam[0].name == "testscript-test-capability"
    assert inst.rest[0].resource[90].searchParam[0].type == "string"
    assert (
        inst.rest[0].resource[90].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/testscript-testscript-setup-capability"
    )
    assert (
        inst.rest[0].resource[90].searchParam[1].documentation
        == "TestScript setup required and validated capability"
    )
    assert (
        inst.rest[0].resource[90].searchParam[1].name == "testscript-setup-capability"
    )
    assert inst.rest[0].resource[90].searchParam[1].type == "string"
    assert (
        inst.rest[0].resource[90].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/testscript-description"
    )
    assert (
        inst.rest[0].resource[90].searchParam[2].documentation
        == "Natural language description of the TestScript"
    )
    assert inst.rest[0].resource[90].searchParam[2].name == "description"
    assert inst.rest[0].resource[90].searchParam[2].type == "string"
    assert (
        inst.rest[0].resource[90].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/testscript-name"
    )
    assert (
        inst.rest[0].resource[90].searchParam[3].documentation
        == "Informal name for this TestScript"
    )
    assert inst.rest[0].resource[90].searchParam[3].name == "name"
    assert inst.rest[0].resource[90].searchParam[3].type == "string"
    assert (
        inst.rest[0].resource[90].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/testscript-testscript-capability"
    )
    assert (
        inst.rest[0].resource[90].searchParam[4].documentation
        == "TestScript required and validated capability"
    )
    assert inst.rest[0].resource[90].searchParam[4].name == "testscript-capability"
    assert inst.rest[0].resource[90].searchParam[4].type == "string"
    assert (
        inst.rest[0].resource[90].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/testscript-identifier"
    )
    assert (
        inst.rest[0].resource[90].searchParam[5].documentation == "External identifier"
    )
    assert inst.rest[0].resource[90].searchParam[5].name == "identifier"
    assert inst.rest[0].resource[90].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[90].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/testscript-url"
    )
    assert (
        inst.rest[0].resource[90].searchParam[6].documentation
        == "Absolute URL used to reference this TestScript"
    )
    assert inst.rest[0].resource[90].searchParam[6].name == "url"
    assert inst.rest[0].resource[90].searchParam[6].type == "uri"
    assert inst.rest[0].resource[90].type == "TestScript"
    assert inst.rest[0].resource[91].conditionalCreate == True
    assert inst.rest[0].resource[91].conditionalDelete == "multiple"
    assert inst.rest[0].resource[91].conditionalUpdate == True
    assert inst.rest[0].resource[91].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[91].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[91].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[91].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[91].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[91].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[91].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[91].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[91].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[91].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[91].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[91].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[91].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[91].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[91].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[91].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[91].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[91].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[91].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/ValueSet"
    )
    assert (
        inst.rest[0].resource[91].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/valueset-system"
    )
    assert (
        inst.rest[0].resource[91].searchParam[0].documentation
        == "The system for any codes defined by this value set"
    )
    assert inst.rest[0].resource[91].searchParam[0].name == "system"
    assert inst.rest[0].resource[91].searchParam[0].type == "uri"
    assert (
        inst.rest[0].resource[91].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/valueset-expansion"
    )
    assert (
        inst.rest[0].resource[91].searchParam[1].documentation
        == "Uniquely identifies this expansion"
    )
    assert inst.rest[0].resource[91].searchParam[1].name == "expansion"
    assert inst.rest[0].resource[91].searchParam[1].type == "uri"
    assert (
        inst.rest[0].resource[91].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/valueset-status"
    )
    assert (
        inst.rest[0].resource[91].searchParam[2].documentation
        == "The status of the value set"
    )
    assert inst.rest[0].resource[91].searchParam[2].name == "status"
    assert inst.rest[0].resource[91].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[91].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/valueset-description"
    )
    assert (
        inst.rest[0].resource[91].searchParam[3].documentation
        == "Text search in the description of the value set"
    )
    assert inst.rest[0].resource[91].searchParam[3].name == "description"
    assert inst.rest[0].resource[91].searchParam[3].type == "string"
    assert (
        inst.rest[0].resource[91].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/valueset-name"
    )
    assert (
        inst.rest[0].resource[91].searchParam[4].documentation
        == "The name of the value set"
    )
    assert inst.rest[0].resource[91].searchParam[4].name == "name"
    assert inst.rest[0].resource[91].searchParam[4].type == "string"
    assert (
        inst.rest[0].resource[91].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/valueset-context"
    )
    assert (
        inst.rest[0].resource[91].searchParam[5].documentation
        == "A use context assigned to the value set"
    )
    assert inst.rest[0].resource[91].searchParam[5].name == "context"
    assert inst.rest[0].resource[91].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[91].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/valueset-code"
    )
    assert (
        inst.rest[0].resource[91].searchParam[6].documentation
        == "A code defined in the value set"
    )
    assert inst.rest[0].resource[91].searchParam[6].name == "code"
    assert inst.rest[0].resource[91].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[91].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/valueset-date"
    )
    assert (
        inst.rest[0].resource[91].searchParam[7].documentation
        == "The value set publication date"
    )
    assert inst.rest[0].resource[91].searchParam[7].name == "date"
    assert inst.rest[0].resource[91].searchParam[7].type == "date"
    assert (
        inst.rest[0].resource[91].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/valueset-identifier"
    )
    assert (
        inst.rest[0].resource[91].searchParam[8].documentation
        == "The identifier for the value set"
    )
    assert inst.rest[0].resource[91].searchParam[8].name == "identifier"
    assert inst.rest[0].resource[91].searchParam[8].type == "token"
    assert (
        inst.rest[0].resource[91].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/valueset-reference"
    )
    assert (
        inst.rest[0].resource[91].searchParam[9].documentation
        == "A code system included or excluded in the value set or an imported value set"
    )
    assert inst.rest[0].resource[91].searchParam[9].name == "reference"
    assert inst.rest[0].resource[91].searchParam[9].type == "uri"
    assert (
        inst.rest[0].resource[91].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/valueset-url"
    )
    assert (
        inst.rest[0].resource[91].searchParam[10].documentation
        == "The logical URL for the value set"
    )
    assert inst.rest[0].resource[91].searchParam[10].name == "url"
    assert inst.rest[0].resource[91].searchParam[10].type == "uri"
    assert (
        inst.rest[0].resource[91].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/valueset-publisher"
    )
    assert (
        inst.rest[0].resource[91].searchParam[11].documentation
        == "Name of the publisher of the value set"
    )
    assert inst.rest[0].resource[91].searchParam[11].name == "publisher"
    assert inst.rest[0].resource[91].searchParam[11].type == "string"
    assert (
        inst.rest[0].resource[91].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/valueset-version"
    )
    assert (
        inst.rest[0].resource[91].searchParam[12].documentation
        == "The version identifier of the value set"
    )
    assert inst.rest[0].resource[91].searchParam[12].name == "version"
    assert inst.rest[0].resource[91].searchParam[12].type == "token"
    assert inst.rest[0].resource[91].searchRevInclude[0] == "ConceptMap.sourceuri"
    assert inst.rest[0].resource[91].searchRevInclude[1] == "ConceptMap.source"
    assert inst.rest[0].resource[91].searchRevInclude[2] == "ConceptMap.target"
    assert (
        inst.rest[0].resource[91].searchRevInclude[3] == "StructureDefinition.valueset"
    )
    assert inst.rest[0].resource[91].type == "ValueSet"
    assert inst.rest[0].resource[92].conditionalCreate == True
    assert inst.rest[0].resource[92].conditionalDelete == "multiple"
    assert inst.rest[0].resource[92].conditionalUpdate == True
    assert inst.rest[0].resource[92].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[92].interaction[0].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[92].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[92].interaction[1].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[92].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[92].interaction[2].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[92].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[92].interaction[3].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[92].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[92].interaction[4].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[92].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[92].interaction[5].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[92].interaction[6].code == "history-type"
    assert (
        inst.rest[0].resource[92].interaction[6].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[92].interaction[7].code == "create"
    assert (
        inst.rest[0].resource[92].interaction[7].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert inst.rest[0].resource[92].interaction[8].code == "search-type"
    assert (
        inst.rest[0].resource[92].interaction[8].documentation
        == "Implemented per the specification (or Insert other doco here)"
    )
    assert (
        inst.rest[0].resource[92].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/VisionPrescription"
    )
    assert inst.rest[0].resource[92].searchInclude[0] == "VisionPrescription.patient"
    assert inst.rest[0].resource[92].searchInclude[1] == "VisionPrescription.prescriber"
    assert inst.rest[0].resource[92].searchInclude[2] == "VisionPrescription.encounter"
    assert (
        inst.rest[0].resource[92].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/visionprescription-datewritten"
    )
    assert (
        inst.rest[0].resource[92].searchParam[0].documentation
        == "Return prescriptions written on this date"
    )
    assert inst.rest[0].resource[92].searchParam[0].name == "datewritten"
    assert inst.rest[0].resource[92].searchParam[0].type == "date"
    assert (
        inst.rest[0].resource[92].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/visionprescription-patient"
    )
    assert (
        inst.rest[0].resource[92].searchParam[1].documentation
        == "The identity of a patient to list dispenses for"
    )
    assert inst.rest[0].resource[92].searchParam[1].name == "patient"
    assert inst.rest[0].resource[92].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[92].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/visionprescription-prescriber"
    )
    assert (
        inst.rest[0].resource[92].searchParam[2].documentation
        == "Who authorizes the vision product"
    )
    assert inst.rest[0].resource[92].searchParam[2].name == "prescriber"
    assert inst.rest[0].resource[92].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[92].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/visionprescription-encounter"
    )
    assert (
        inst.rest[0].resource[92].searchParam[3].documentation
        == "Return prescriptions with this encounter identifier"
    )
    assert inst.rest[0].resource[92].searchParam[3].name == "encounter"
    assert inst.rest[0].resource[92].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[92].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/visionprescription-identifier"
    )
    assert (
        inst.rest[0].resource[92].searchParam[4].documentation
        == "Return prescriptions with this external identifier"
    )
    assert inst.rest[0].resource[92].searchParam[4].name == "identifier"
    assert inst.rest[0].resource[92].searchParam[4].type == "token"
    assert inst.rest[0].resource[92].searchRevInclude[0] == "CarePlan.activityreference"
    assert inst.rest[0].resource[92].searchRevInclude[1] == "ClinicalImpression.plan"
    assert inst.rest[0].resource[92].type == "VisionPrescription"
    assert (
        inst.rest[0].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/resource-security"
    )
    assert (
        inst.rest[0].searchParam[0].documentation
        == "Security Labels applied to this resource"
    )
    assert inst.rest[0].searchParam[0].name == "_security"
    assert inst.rest[0].searchParam[0].type == "token"
    assert (
        inst.rest[0].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/resource-lastUpdated"
    )
    assert (
        inst.rest[0].searchParam[1].documentation
        == "When the resource version last changed"
    )
    assert inst.rest[0].searchParam[1].name == "_lastUpdated"
    assert inst.rest[0].searchParam[1].type == "date"
    assert (
        inst.rest[0].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/resource-text"
    )
    assert (
        inst.rest[0].searchParam[2].documentation
        == "Search on the narrative of the resource"
    )
    assert inst.rest[0].searchParam[2].name == "_text"
    assert inst.rest[0].searchParam[2].type == "string"
    assert (
        inst.rest[0].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/resource-id"
    )
    assert inst.rest[0].searchParam[3].documentation == "Logical id of this artifact"
    assert inst.rest[0].searchParam[3].name == "_id"
    assert inst.rest[0].searchParam[3].type == "token"
    assert (
        inst.rest[0].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/resource-content"
    )
    assert (
        inst.rest[0].searchParam[4].documentation
        == "Search on the entire content of the resource"
    )
    assert inst.rest[0].searchParam[4].name == "_content"
    assert inst.rest[0].searchParam[4].type == "string"
    assert (
        inst.rest[0].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/resource-profile"
    )
    assert (
        inst.rest[0].searchParam[5].documentation
        == "Profiles this resource claims to conform to"
    )
    assert inst.rest[0].searchParam[5].name == "_profile"
    assert inst.rest[0].searchParam[5].type == "uri"
    assert (
        inst.rest[0].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/resource-query"
    )
    assert (
        inst.rest[0].searchParam[6].documentation
        == "A custom search profile that describes a specific defined query operation"
    )
    assert inst.rest[0].searchParam[6].name == "_query"
    assert inst.rest[0].searchParam[6].type == "token"
    assert (
        inst.rest[0].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/resource-tag"
    )
    assert inst.rest[0].searchParam[7].documentation == "Tags applied to this resource"
    assert inst.rest[0].searchParam[7].name == "_tag"
    assert inst.rest[0].searchParam[7].type == "token"
    assert inst.rest[0].security.cors == True
    assert (
        inst.rest[0].security.description
        == "This is the conformance statement to declare that the server supports SMART-on-FHIR. See the SMART-on-FHIR docs for the extension that would go with such a server"
    )
    assert inst.rest[0].security.service[0].coding[0].code == "SMART-on-FHIR"
    assert inst.rest[0].security.service[0].coding[0].display == "SMART-on-FHIR"
    assert (
        inst.rest[0].security.service[0].coding[0].system
        == "http://hl7.org/fhir/restful-security-service"
    )
    assert inst.rest[0].security.service[0].text == "See http://docs.smarthealthit.org/"
    assert inst.rest[0].transactionMode == "both"
    assert inst.software.name == "Insert your softwware name here..."
    assert inst.status == "draft"
    assert inst.text.status == "generated"
    assert inst.url == "http://hl7.org/fhir/Conformance/base"
    assert inst.version == "1.0.2-7202"


def test_Conformance_2(base_settings):
    filename = base_settings["unittest_data_dir"] / "conformance-base2.canonical.json"
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_2(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_2(inst2)


def impl_Conformance_2(inst):
    assert inst.acceptUnknown == "no"
    assert inst.contact[0].telecom[0].system == "other"
    assert inst.contact[0].telecom[0].value == "http://hl7.org/fhir"
    assert inst.date == parse_datetime("2015-10-24T07:41:03+11:00")
    assert (
        inst.description
        == "This is the base conformance statement for FHIR. It represents a server that provides the none of the functionality defined by FHIR. It is provided to use as a template for system designers to build their own conformance statements from. A conformance profile has to contain something, so this contains a read of a Conformance Statement"
    )
    assert inst.experimental == True
    assert inst.fhirVersion == "1.0.2"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "base2"
    assert inst.kind == "capability"
    assert inst.name == "Base FHIR Conformance Statement (Empty)"
    assert inst.publisher == "FHIR Project Team"
    assert inst.rest[0].documentation == "An empty conformance statement"
    assert inst.rest[0].mode == "server"
    assert inst.rest[0].resource[0].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Read Conformance Resource"
    )
    assert inst.rest[0].resource[0].type == "Conformance"
    assert inst.rest[0].security.cors == True
    assert (
        inst.rest[0].security.description
        == "This is the conformance statement to declare that the server supports SMART-on-FHIR. See the SMART-on-FHIR docs for the extension that would go with such a server"
    )
    assert inst.rest[0].security.service[0].coding[0].code == "SMART-on-FHIR"
    assert inst.rest[0].security.service[0].coding[0].display == "SMART-on-FHIR"
    assert (
        inst.rest[0].security.service[0].coding[0].system
        == "http://hl7.org/fhir/restful-security-service"
    )
    assert inst.rest[0].security.service[0].text == "See http://docs.smarthealthit.org/"
    assert inst.software.name == "Insert your softwware name here..."
    assert inst.status == "draft"
    assert inst.text.status == "generated"
    assert inst.url == "http://hl7.org/fhir/Conformance/base2"
    assert inst.version == "1.0.2-7202"


def test_Conformance_3(base_settings):
    filename = (
        base_settings["unittest_data_dir"]
        / "conformance-daf-query-requestor.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_3(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_3(inst2)


def impl_Conformance_3(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert inst.contact[0].telecom[0].value == "http://www.healthit.gov/"
    assert inst.date == parse_date("2015-04-02")
    assert (
        inst.description
        == "This profile defines the expected capabilities of the DAF Responder actor when conforming to the DAF FHIR implementation guide."
    )
    assert inst.fhirVersion == "1.0.2"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-daf-query-requestor"
    assert inst.kind == "requirements"
    assert inst.name == "DAF Requestor"
    assert inst.publisher == "U.S. Office of the National Coordinator (ONC)"
    assert (
        inst.rest[0].documentation
        == "The DAF Requestor SHOULD support querying of one or more FHIR resources using appropriate DAF profile(s), RESTful operations defined for the profile, Search parameters identified for the profile."
    )
    assert inst.rest[0].mode == "client"
    assert inst.rest[0].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows discovery of existing DAFPatient resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[0].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific DAFPatients by id"
    )
    assert (
        inst.rest[0].resource[0].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Allows review of changes to DAFPatient instance over time"
    )
    assert (
        inst.rest[0].resource[0].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[0].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFPatient instance"
    )
    assert (
        inst.rest[0].resource[0].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[0].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-patient"
    )
    assert (
        inst.rest[0].resource[0].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-name"
    )
    assert (
        inst.rest[0].resource[0].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[0].name == "name"
    assert inst.rest[0].resource[0].searchParam[0].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-family"
    )
    assert (
        inst.rest[0].resource[0].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[1].name == "family"
    assert inst.rest[0].resource[0].searchParam[1].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-given"
    )
    assert (
        inst.rest[0].resource[0].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[2].name == "given"
    assert inst.rest[0].resource[0].searchParam[2].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-identifier"
    )
    assert (
        inst.rest[0].resource[0].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[3].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[3].name == "identifier"
    assert inst.rest[0].resource[0].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-language"
    )
    assert (
        inst.rest[0].resource[0].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[4].name == "language"
    assert inst.rest[0].resource[0].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-telecom"
    )
    assert (
        inst.rest[0].resource[0].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[5].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[5].name == "telecom"
    assert inst.rest[0].resource[0].searchParam[5].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-gender"
    )
    assert (
        inst.rest[0].resource[0].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[6].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[6].name == "gender"
    assert inst.rest[0].resource[0].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-birthdate"
    )
    assert (
        inst.rest[0].resource[0].searchParam[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[7].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[7].name == "birthdate"
    assert inst.rest[0].resource[0].searchParam[7].type == "date"
    assert (
        inst.rest[0].resource[0].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-city"
    )
    assert (
        inst.rest[0].resource[0].searchParam[8].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[8].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[8].name == "city"
    assert inst.rest[0].resource[0].searchParam[8].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-postalCode"
    )
    assert (
        inst.rest[0].resource[0].searchParam[9].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[9].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[9].name == "postalCode"
    assert inst.rest[0].resource[0].searchParam[9].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-state"
    )
    assert (
        inst.rest[0].resource[0].searchParam[10].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[10].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[10].name == "state"
    assert inst.rest[0].resource[0].searchParam[10].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-mothersMaidenName"
    )
    assert (
        inst.rest[0].resource[0].searchParam[11].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[11].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[11].name == "mothersMaidenName"
    assert inst.rest[0].resource[0].searchParam[11].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-age"
    )
    assert (
        inst.rest[0].resource[0].searchParam[12].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[12].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[12].name == "age"
    assert inst.rest[0].resource[0].searchParam[12].type == "number"
    assert (
        inst.rest[0].resource[0].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/us-core-Patient-race"
    )
    assert (
        inst.rest[0].resource[0].searchParam[13].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[13].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[13].name == "race"
    assert inst.rest[0].resource[0].searchParam[13].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/us-core-Patient-ethnicity"
    )
    assert (
        inst.rest[0].resource[0].searchParam[14].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[14].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[14].name == "ethnicity"
    assert inst.rest[0].resource[0].searchParam[14].type == "token"
    assert inst.rest[0].resource[0].type == "Patient"
    assert inst.rest[0].resource[1].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[1].interaction[0].documentation
        == "Allows discovery of existing DAFAllergyIntolerance resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[1].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[1].interaction[1].documentation
        == "Allows retrieval of a specific DAFAllergyIntolerance by id"
    )
    assert (
        inst.rest[0].resource[1].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[1].interaction[2].documentation
        == "Allows review of changes to DAFAllergyIntolerance instance over time"
    )
    assert (
        inst.rest[0].resource[1].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[1].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFAllergyIntolerance instance"
    )
    assert (
        inst.rest[0].resource[1].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[1].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-allergyintolerance"
    )
    assert inst.rest[0].resource[1].searchInclude[0] == "AllergyIntolerance.patient"
    assert (
        inst.rest[0].resource[1].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[1].searchParam[0].type == "token"
    assert inst.rest[0].resource[1].searchParam[1].chain[0] == "patient.identifier"
    assert inst.rest[0].resource[1].searchParam[1].chain[1] == "patient.name"
    assert inst.rest[0].resource[1].searchParam[1].chain[2] == "patient.given"
    assert inst.rest[0].resource[1].searchParam[1].chain[3] == "patient.family"
    assert (
        inst.rest[0].resource[1].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].searchParam[1].name == "patient"
    assert inst.rest[0].resource[1].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[1].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].searchParam[2].name == "category"
    assert inst.rest[0].resource[1].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[3].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].searchParam[3].name == "status"
    assert inst.rest[0].resource[1].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].searchParam[4].name == "substance"
    assert inst.rest[0].resource[1].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[5].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].searchParam[5].name == "manifestation"
    assert inst.rest[0].resource[1].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[6].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].searchParam[6].name == "severity"
    assert inst.rest[0].resource[1].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[7].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].searchParam[7].name == "duration"
    assert inst.rest[0].resource[1].searchParam[7].type == "quantity"
    assert (
        inst.rest[0].resource[1].searchParam[8].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[8].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].searchParam[8].name == "onset"
    assert inst.rest[0].resource[1].searchParam[8].type == "date"
    assert inst.rest[0].resource[1].type == "AllergyIntolerance"
    assert inst.rest[0].resource[2].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[2].interaction[0].documentation
        == "Allows discovery of existing DAFDiagnosticOrder resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[2].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[2].interaction[1].documentation
        == "Allows retrieval of a specific DAFDiagnosticOrder by id"
    )
    assert (
        inst.rest[0].resource[2].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[2].interaction[2].documentation
        == "Allows review of changes to DAFDiagnosticOrder instance over time"
    )
    assert (
        inst.rest[0].resource[2].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[2].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFDiagnosticOrder instance"
    )
    assert (
        inst.rest[0].resource[2].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[2].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-diagnosticorder"
    )
    assert inst.rest[0].resource[2].searchInclude[0] == "DiagnosticOrder.subject"
    assert inst.rest[0].resource[2].searchInclude[1] == "DiagnosticOrder.orderer"
    assert inst.rest[0].resource[2].searchInclude[2] == "DiagnosticOrder.encounter"
    assert (
        inst.rest[0].resource[2].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[2].searchParam[0].type == "token"
    assert inst.rest[0].resource[2].searchParam[1].chain[0] == "patient.identifier"
    assert inst.rest[0].resource[2].searchParam[1].chain[1] == "patient.name"
    assert inst.rest[0].resource[2].searchParam[1].chain[2] == "patient.given"
    assert inst.rest[0].resource[2].searchParam[1].chain[3] == "patient.family"
    assert (
        inst.rest[0].resource[2].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].searchParam[1].name == "patient"
    assert inst.rest[0].resource[2].searchParam[1].type == "reference"
    assert inst.rest[0].resource[2].searchParam[2].chain[0] == "orderer.identifier"
    assert inst.rest[0].resource[2].searchParam[2].chain[1] == "orderer.given"
    assert inst.rest[0].resource[2].searchParam[2].chain[2] == "orderer.family"
    assert (
        inst.rest[0].resource[2].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].searchParam[2].name == "orderer"
    assert inst.rest[0].resource[2].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[2].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].searchParam[3].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].searchParam[3].name == "code"
    assert inst.rest[0].resource[2].searchParam[3].type == "token"
    assert inst.rest[0].resource[2].searchParam[4].chain[0] == "encounter.identifier"
    assert inst.rest[0].resource[2].searchParam[4].chain[1] == "encounter.type"
    assert (
        inst.rest[0].resource[2].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].searchParam[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].searchParam[4].name == "encounter"
    assert inst.rest[0].resource[2].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[2].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].searchParam[5].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].searchParam[5].name == "item-date"
    assert inst.rest[0].resource[2].searchParam[5].type == "date"
    assert inst.rest[0].resource[2].type == "DiagnosticOrder"
    assert inst.rest[0].resource[3].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[3].interaction[0].documentation
        == "Allows discovery of existing DAFDiagnosticReport resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[3].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[3].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[3].interaction[1].documentation
        == "Allows retrieval of a specific DAFDiagnosticReport by id"
    )
    assert (
        inst.rest[0].resource[3].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[3].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[3].interaction[2].documentation
        == "Allows review of changes to DAFDiagnosticReport instance over time"
    )
    assert (
        inst.rest[0].resource[3].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[3].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[3].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFDiagnosticReport instance"
    )
    assert (
        inst.rest[0].resource[3].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[3].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-diagnosticreport"
    )
    assert inst.rest[0].resource[3].searchInclude[0] == "DiagnosticReport.subject"
    assert inst.rest[0].resource[3].searchInclude[1] == "DiagnosticReport.performer"
    assert inst.rest[0].resource[3].searchInclude[2] == "DiagnosticReport.encounter"
    assert inst.rest[0].resource[3].searchInclude[3] == "DiagnosticReport.result"
    assert (
        inst.rest[0].resource[3].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[3].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[3].searchParam[0].type == "token"
    assert inst.rest[0].resource[3].searchParam[1].chain[0] == "patient.identifier"
    assert inst.rest[0].resource[3].searchParam[1].chain[1] == "patient.name"
    assert inst.rest[0].resource[3].searchParam[1].chain[2] == "patient.given"
    assert inst.rest[0].resource[3].searchParam[1].chain[3] == "patient.family"
    assert (
        inst.rest[0].resource[3].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[3].searchParam[1].name == "patient"
    assert inst.rest[0].resource[3].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[3].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[3].searchParam[2].name == "name"
    assert inst.rest[0].resource[3].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[3].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].searchParam[3].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[3].searchParam[3].name == "date"
    assert inst.rest[0].resource[3].searchParam[3].type == "date"
    assert inst.rest[0].resource[3].searchParam[4].chain[0] == "encounter.identifier"
    assert inst.rest[0].resource[3].searchParam[4].chain[1] == "encounter.type"
    assert (
        inst.rest[0].resource[3].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].searchParam[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[3].searchParam[4].name == "encounter"
    assert inst.rest[0].resource[3].searchParam[4].type == "reference"
    assert inst.rest[0].resource[3].searchParam[5].chain[0] == "performer.identifier"
    assert inst.rest[0].resource[3].searchParam[5].chain[1] == "performer.name"
    assert (
        inst.rest[0].resource[3].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].searchParam[5].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[3].searchParam[5].name == "performer"
    assert inst.rest[0].resource[3].searchParam[5].type == "reference"
    assert inst.rest[0].resource[3].searchParam[6].chain[0] == "result.code"
    assert (
        inst.rest[0].resource[3].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].searchParam[6].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[3].searchParam[6].name == "result"
    assert inst.rest[0].resource[3].searchParam[6].type == "reference"
    assert inst.rest[0].resource[3].type == "DiagnosticReport"
    assert inst.rest[0].resource[4].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[4].interaction[0].documentation
        == "Allows discovery of existing DAFEncounter resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[4].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[4].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[4].interaction[1].documentation
        == "Allows retrieval of a specific DAFEncounter by id"
    )
    assert (
        inst.rest[0].resource[4].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[4].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[4].interaction[2].documentation
        == "Allows review of changes to DAFEncounter instance over time"
    )
    assert (
        inst.rest[0].resource[4].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[4].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[4].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFEncounter instance"
    )
    assert (
        inst.rest[0].resource[4].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[4].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-encounter"
    )
    assert inst.rest[0].resource[4].searchInclude[0] == "Encounter.patient"
    assert inst.rest[0].resource[4].searchInclude[1] == "Encounter.location"
    assert (
        inst.rest[0].resource[4].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[4].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[4].searchParam[0].type == "token"
    assert inst.rest[0].resource[4].searchParam[1].chain[0] == "patient.identifier"
    assert inst.rest[0].resource[4].searchParam[1].chain[1] == "patient.name"
    assert inst.rest[0].resource[4].searchParam[1].chain[2] == "patient.given"
    assert inst.rest[0].resource[4].searchParam[1].chain[3] == "patient.family"
    assert (
        inst.rest[0].resource[4].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[4].searchParam[1].name == "patient"
    assert inst.rest[0].resource[4].searchParam[1].type == "reference"
    assert inst.rest[0].resource[4].searchParam[2].chain[0] == "location.identifier"
    assert inst.rest[0].resource[4].searchParam[2].chain[1] == "location.name"
    assert inst.rest[0].resource[4].searchParam[2].chain[2] == "location.address"
    assert (
        inst.rest[0].resource[4].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[4].searchParam[2].name == "location"
    assert inst.rest[0].resource[4].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[4].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].searchParam[3].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[4].searchParam[3].name == "type"
    assert inst.rest[0].resource[4].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[4].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].searchParam[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[4].searchParam[4].name == "date"
    assert inst.rest[0].resource[4].searchParam[4].type == "date"
    assert (
        inst.rest[0].resource[4].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].searchParam[5].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[4].searchParam[5].name == "location-period"
    assert inst.rest[0].resource[4].searchParam[5].type == "date"
    assert inst.rest[0].resource[4].type == "Encounter"
    assert inst.rest[0].resource[5].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[5].interaction[0].documentation
        == "Allows discovery of existing DAFFamilyHistory resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[5].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[5].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[5].interaction[1].documentation
        == "Allows retrieval of a specific DAFFamilyHistory by id"
    )
    assert (
        inst.rest[0].resource[5].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[5].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[5].interaction[2].documentation
        == "Allows review of changes to DAFFamilyHistory instance over time"
    )
    assert (
        inst.rest[0].resource[5].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[5].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[5].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFFamilyHistory instance"
    )
    assert (
        inst.rest[0].resource[5].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[5].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-familymemberhistory"
    )
    assert inst.rest[0].resource[5].searchInclude[0] == "FamilyMemberHistory.patient"
    assert (
        inst.rest[0].resource[5].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[5].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[5].searchParam[0].type == "token"
    assert inst.rest[0].resource[5].searchParam[1].chain[0] == "patient.identifier"
    assert inst.rest[0].resource[5].searchParam[1].chain[1] == "patient.name"
    assert inst.rest[0].resource[5].searchParam[1].chain[2] == "patient.given"
    assert inst.rest[0].resource[5].searchParam[1].chain[3] == "patient.family"
    assert (
        inst.rest[0].resource[5].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[5].searchParam[1].name == "patient"
    assert inst.rest[0].resource[5].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[5].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[5].searchParam[2].name == "relationship"
    assert inst.rest[0].resource[5].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[5].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].searchParam[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[5].searchParam[3].name == "familymemberhistorycondition"
    )
    assert inst.rest[0].resource[5].searchParam[3].type == "token"
    assert inst.rest[0].resource[5].type == "FamilyMemberHistory"
    assert inst.rest[0].resource[6].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[6].interaction[0].documentation
        == "Allows discovery of existing DAFImmunization resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[6].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[6].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[6].interaction[1].documentation
        == "Allows retrieval of a specific DAFImmunization by id"
    )
    assert (
        inst.rest[0].resource[6].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[6].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[6].interaction[2].documentation
        == "Allows review of changes to DAFImmunization instance over time"
    )
    assert (
        inst.rest[0].resource[6].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[6].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[6].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFImmunization instance"
    )
    assert (
        inst.rest[0].resource[6].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[6].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-immunization"
    )
    assert inst.rest[0].resource[6].searchInclude[0] == "Immunization.patient"
    assert inst.rest[0].resource[6].searchInclude[1] == "Immunization.performer"
    assert inst.rest[0].resource[6].searchInclude[2] == "Immunization.requester"
    assert inst.rest[0].resource[6].searchInclude[3] == "Immunization.manufacturer"
    assert inst.rest[0].resource[6].searchInclude[4] == "Immunization.reaction.detail"
    assert (
        inst.rest[0].resource[6].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[6].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[6].searchParam[0].type == "token"
    assert inst.rest[0].resource[6].searchParam[1].chain[0] == "patient.identifier"
    assert inst.rest[0].resource[6].searchParam[1].chain[1] == "patient.name"
    assert inst.rest[0].resource[6].searchParam[1].chain[2] == "patient.given"
    assert inst.rest[0].resource[6].searchParam[1].chain[3] == "patient.family"
    assert (
        inst.rest[0].resource[6].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[6].searchParam[1].name == "patient"
    assert inst.rest[0].resource[6].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[6].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[6].searchParam[2].name == "date"
    assert inst.rest[0].resource[6].searchParam[2].type == "date"
    assert (
        inst.rest[0].resource[6].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[3].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[6].searchParam[3].name == "vaccine-type"
    assert inst.rest[0].resource[6].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[6].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[6].searchParam[4].name == "notgiven"
    assert inst.rest[0].resource[6].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[6].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[5].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[6].searchParam[5].name == "lot-number"
    assert inst.rest[0].resource[6].searchParam[5].type == "string"
    assert inst.rest[0].resource[6].searchParam[6].chain[0] == "requester.identifier"
    assert inst.rest[0].resource[6].searchParam[6].chain[1] == "requester.name"
    assert (
        inst.rest[0].resource[6].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[6].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[6].searchParam[6].name == "requester"
    assert inst.rest[0].resource[6].searchParam[6].type == "reference"
    assert inst.rest[0].resource[6].type == "Immunization"
    assert inst.rest[0].resource[7].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[7].interaction[0].documentation
        == "Allows discovery of existing DAFResults resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[7].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[7].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[7].interaction[1].documentation
        == "Allows retrieval of a specific DAFResults by id"
    )
    assert (
        inst.rest[0].resource[7].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[7].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[7].interaction[2].documentation
        == "Allows review of changes to DAFResults instance over time"
    )
    assert (
        inst.rest[0].resource[7].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[7].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[7].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFResults instance"
    )
    assert (
        inst.rest[0].resource[7].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[7].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-resultobscode"
    )
    assert inst.rest[0].resource[7].searchInclude[0] == "Observation.encounter"
    assert inst.rest[0].resource[7].searchInclude[1] == "Observation.subject"
    assert (
        inst.rest[0].resource[7].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[7].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[7].searchParam[0].type == "token"
    assert inst.rest[0].resource[7].searchParam[1].chain[0] == "patient.identifier"
    assert inst.rest[0].resource[7].searchParam[1].chain[1] == "patient.name"
    assert inst.rest[0].resource[7].searchParam[1].chain[2] == "patient.given"
    assert inst.rest[0].resource[7].searchParam[1].chain[3] == "patient.family"
    assert (
        inst.rest[0].resource[7].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[7].searchParam[1].name == "patient"
    assert inst.rest[0].resource[7].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[7].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[7].searchParam[2].name == "code"
    assert inst.rest[0].resource[7].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[7].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[3].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[7].searchParam[3].name == "value-concept"
    assert inst.rest[0].resource[7].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[7].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[7].searchParam[4].name == "code-value[x]"
    assert inst.rest[0].resource[7].searchParam[4].type == "composite"
    assert (
        inst.rest[0].resource[7].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[5].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[7].searchParam[5].name == "date"
    assert inst.rest[0].resource[7].searchParam[5].type == "date"
    assert inst.rest[0].resource[7].searchParam[6].chain[0] == "encounter.identifier"
    assert inst.rest[0].resource[7].searchParam[6].chain[1] == "encounter.type"
    assert (
        inst.rest[0].resource[7].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[6].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[7].searchParam[6].name == "encounter"
    assert inst.rest[0].resource[7].searchParam[6].type == "reference"
    assert inst.rest[0].resource[7].type == "Observation"
    assert inst.rest[0].resource[8].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[8].interaction[0].documentation
        == "Allows discovery of existing DAFMedication resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[8].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[8].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[8].interaction[1].documentation
        == "Allows retrieval of a specific DAFMedication by id"
    )
    assert (
        inst.rest[0].resource[8].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[8].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[8].interaction[2].documentation
        == "Allows review of changes to DAFMedication instance over time"
    )
    assert (
        inst.rest[0].resource[8].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[8].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[8].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFMedication instance"
    )
    assert (
        inst.rest[0].resource[8].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[8].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-medication"
    )
    assert inst.rest[0].resource[8].searchInclude[0] == "Medication.manufacturer"
    assert (
        inst.rest[0].resource[8].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[8].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[8].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[8].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[8].searchParam[1].name == "code"
    assert inst.rest[0].resource[8].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[8].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[8].searchParam[2].name == "name"
    assert inst.rest[0].resource[8].searchParam[2].type == "string"
    assert (
        inst.rest[0].resource[8].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].searchParam[3].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[8].searchParam[3].name == "form"
    assert inst.rest[0].resource[8].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[8].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].searchParam[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[8].searchParam[4].name == "ingredient"
    assert inst.rest[0].resource[8].searchParam[4].type == "reference"
    assert inst.rest[0].resource[8].type == "Medication"
    assert inst.rest[0].resource[9].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[9].interaction[0].documentation
        == "Allows discovery of existing DAFMedicationStatement resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[9].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[9].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[9].interaction[1].documentation
        == "Allows retrieval of a specific DAFMedicationStatement by id"
    )
    assert (
        inst.rest[0].resource[9].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[9].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[9].interaction[2].documentation
        == "Allows review of changes to DAFMedicationStatement instance over time"
    )
    assert (
        inst.rest[0].resource[9].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[9].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[9].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFMedicationStatement instance"
    )
    assert (
        inst.rest[0].resource[9].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[9].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-medicationstatement"
    )
    assert inst.rest[0].resource[9].searchInclude[0] == "MedicationStatement.patient"
    assert inst.rest[0].resource[9].searchInclude[1] == "MedicationStatement.medication"
    assert (
        inst.rest[0].resource[9].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[9].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[9].searchParam[0].type == "token"
    assert inst.rest[0].resource[9].searchParam[1].chain[0] == "patient.identifier"
    assert inst.rest[0].resource[9].searchParam[1].chain[1] == "patient.name"
    assert inst.rest[0].resource[9].searchParam[1].chain[2] == "patient.given"
    assert inst.rest[0].resource[9].searchParam[1].chain[3] == "patient.family"
    assert (
        inst.rest[0].resource[9].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[9].searchParam[1].name == "patient"
    assert inst.rest[0].resource[9].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[9].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[9].searchParam[2].name == "effectivedate"
    assert inst.rest[0].resource[9].searchParam[2].type == "date"
    assert inst.rest[0].resource[9].searchParam[3].chain[0] == "medication.code"
    assert inst.rest[0].resource[9].searchParam[3].chain[1] == "medication.name"
    assert (
        inst.rest[0].resource[9].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].searchParam[3].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[9].searchParam[3].name == "medication"
    assert inst.rest[0].resource[9].searchParam[3].type == "reference"
    assert inst.rest[0].resource[9].type == "MedicationStatement"
    assert inst.rest[0].resource[10].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[10].interaction[0].documentation
        == "Allows discovery of existing DAFMedicationAdministration resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[10].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[10].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[10].interaction[1].documentation
        == "Allows retrieval of a specific DAFMedicationAdministration by id"
    )
    assert (
        inst.rest[0].resource[10].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[10].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[10].interaction[2].documentation
        == "Allows review of changes to DAFMedicationAdministration instance over time"
    )
    assert (
        inst.rest[0].resource[10].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[10].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[10].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFMedicationAdministration instance"
    )
    assert (
        inst.rest[0].resource[10].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[10].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-medicationadministration"
    )
    assert (
        inst.rest[0].resource[10].searchInclude[0] == "MedicationAdministration.patient"
    )
    assert (
        inst.rest[0].resource[10].searchInclude[1]
        == "MedicationAdministration.practitioner"
    )
    assert (
        inst.rest[0].resource[10].searchInclude[2]
        == "MedicationAdministration.encounter"
    )
    assert (
        inst.rest[0].resource[10].searchInclude[3]
        == "MedicationAdministration.prescription"
    )
    assert (
        inst.rest[0].resource[10].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[10].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[10].searchParam[0].type == "token"
    assert inst.rest[0].resource[10].searchParam[1].chain[0] == "patient.identifier"
    assert inst.rest[0].resource[10].searchParam[1].chain[1] == "patient.name"
    assert inst.rest[0].resource[10].searchParam[1].chain[2] == "patient.given"
    assert inst.rest[0].resource[10].searchParam[1].chain[3] == "patient.family"
    assert (
        inst.rest[0].resource[10].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[10].searchParam[1].name == "patient"
    assert inst.rest[0].resource[10].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[10].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[10].searchParam[2].name == "effectivetime"
    assert inst.rest[0].resource[10].searchParam[2].type == "date"
    assert inst.rest[0].resource[10].searchParam[3].chain[0] == "encounter.identifier"
    assert inst.rest[0].resource[10].searchParam[3].chain[1] == "encounter.type"
    assert (
        inst.rest[0].resource[10].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].searchParam[3].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[10].searchParam[3].name == "encounter"
    assert inst.rest[0].resource[10].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[10].searchParam[4].chain[0] == "practitioner.identifier"
    )
    assert inst.rest[0].resource[10].searchParam[4].chain[1] == "practitioner.name"
    assert (
        inst.rest[0].resource[10].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].searchParam[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[10].searchParam[4].name == "practitioner"
    assert inst.rest[0].resource[10].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[10].searchParam[5].chain[0] == "prescription.identifier"
    )
    assert (
        inst.rest[0].resource[10].searchParam[5].chain[1] == "prescription.datewritten"
    )
    assert (
        inst.rest[0].resource[10].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].searchParam[5].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[10].searchParam[5].name == "prescription"
    assert inst.rest[0].resource[10].searchParam[5].type == "reference"
    assert inst.rest[0].resource[10].type == "MedicationAdministration"
    assert inst.rest[0].resource[11].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[11].interaction[0].documentation
        == "Allows discovery of existing DAFCondition resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[11].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[11].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[11].interaction[1].documentation
        == "Allows retrieval of a specific DAFCondition by id"
    )
    assert (
        inst.rest[0].resource[11].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[11].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[11].interaction[2].documentation
        == "Allows review of changes to DAFCondition instance over time"
    )
    assert (
        inst.rest[0].resource[11].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[11].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[11].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFCondition instance"
    )
    assert (
        inst.rest[0].resource[11].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[11].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-condition"
    )
    assert inst.rest[0].resource[11].searchInclude[0] == "Condition.patient"
    assert inst.rest[0].resource[11].searchInclude[1] == "Condition.encounter"
    assert inst.rest[0].resource[11].searchInclude[2] == "Condition.asserter"
    assert (
        inst.rest[0].resource[11].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[11].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[11].searchParam[0].type == "token"
    assert inst.rest[0].resource[11].searchParam[1].chain[0] == "patient.identifier"
    assert inst.rest[0].resource[11].searchParam[1].chain[1] == "patient.name"
    assert inst.rest[0].resource[11].searchParam[1].chain[2] == "patient.given"
    assert inst.rest[0].resource[11].searchParam[1].chain[3] == "patient.family"
    assert (
        inst.rest[0].resource[11].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[11].searchParam[1].name == "patient"
    assert inst.rest[0].resource[11].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[11].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[11].searchParam[2].name == "code"
    assert inst.rest[0].resource[11].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[11].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].searchParam[3].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[11].searchParam[3].name == "date-asserted"
    assert inst.rest[0].resource[11].searchParam[3].type == "date"
    assert inst.rest[0].resource[11].searchParam[4].chain[0] == "encounter.identifier"
    assert inst.rest[0].resource[11].searchParam[4].chain[1] == "encounter.type"
    assert (
        inst.rest[0].resource[11].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].searchParam[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[11].searchParam[4].name == "encounter"
    assert inst.rest[0].resource[11].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[11].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].searchParam[5].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[11].searchParam[5].name == "onset"
    assert inst.rest[0].resource[11].searchParam[5].type == "date"
    assert (
        inst.rest[0].resource[11].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].searchParam[6].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[11].searchParam[6].name == "severity"
    assert inst.rest[0].resource[11].searchParam[6].type == "token"
    assert inst.rest[0].resource[11].type == "Condition"
    assert inst.rest[0].resource[12].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[12].interaction[0].documentation
        == "Allows discovery of existing DAFProcedure resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[12].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[12].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[12].interaction[1].documentation
        == "Allows retrieval of a specific DAFProcedure by id"
    )
    assert (
        inst.rest[0].resource[12].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[12].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[12].interaction[2].documentation
        == "Allows review of changes to DAFProcedure instance over time"
    )
    assert (
        inst.rest[0].resource[12].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[12].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[12].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFProcedure instance"
    )
    assert (
        inst.rest[0].resource[12].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[12].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-procedure"
    )
    assert inst.rest[0].resource[12].searchInclude[0] == "Procedure.patient"
    assert inst.rest[0].resource[12].searchInclude[1] == "Procedure.encounter"
    assert inst.rest[0].resource[12].searchInclude[2] == "Procedure.performer"
    assert (
        inst.rest[0].resource[12].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[12].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[12].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[12].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[12].searchParam[1].name == "type"
    assert inst.rest[0].resource[12].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[12].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[12].searchParam[2].name == "date"
    assert inst.rest[0].resource[12].searchParam[2].type == "date"
    assert inst.rest[0].resource[12].searchParam[3].chain[0] == "patient.identifier"
    assert inst.rest[0].resource[12].searchParam[3].chain[1] == "patient.name"
    assert inst.rest[0].resource[12].searchParam[3].chain[2] == "patient.given"
    assert inst.rest[0].resource[12].searchParam[3].chain[3] == "patient.family"
    assert (
        inst.rest[0].resource[12].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].searchParam[3].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[12].searchParam[3].name == "patient"
    assert inst.rest[0].resource[12].searchParam[3].type == "reference"
    assert inst.rest[0].resource[12].searchParam[4].chain[0] == "encounter.identifier"
    assert inst.rest[0].resource[12].searchParam[4].chain[1] == "encounter.type"
    assert (
        inst.rest[0].resource[12].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].searchParam[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[12].searchParam[4].name == "encounter"
    assert inst.rest[0].resource[12].searchParam[4].type == "reference"
    assert inst.rest[0].resource[12].type == "Procedure"
    assert inst.rest[0].resource[13].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[13].interaction[0].documentation
        == "Allows discovery of existing DAFList resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[13].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[13].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[13].interaction[1].documentation
        == "Allows retrieval of a specific DAFList by id"
    )
    assert (
        inst.rest[0].resource[13].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[13].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[13].interaction[2].documentation
        == "Allows review of changes to DAFList instance over time"
    )
    assert (
        inst.rest[0].resource[13].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[13].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[13].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAFList instance"
    )
    assert (
        inst.rest[0].resource[13].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[13].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-problemlist"
    )
    assert inst.rest[0].resource[13].searchInclude[0] == "List.subject"
    assert inst.rest[0].resource[13].searchInclude[1] == "List.item"
    assert inst.rest[0].resource[13].searchParam[0].chain[0] == "patient.identifier"
    assert inst.rest[0].resource[13].searchParam[0].chain[1] == "patient.name"
    assert inst.rest[0].resource[13].searchParam[0].chain[2] == "patient.given"
    assert inst.rest[0].resource[13].searchParam[0].chain[3] == "patient.family"
    assert (
        inst.rest[0].resource[13].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].searchParam[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[13].searchParam[0].name == "patient"
    assert inst.rest[0].resource[13].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[13].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].searchParam[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[13].searchParam[1].name == "code"
    assert inst.rest[0].resource[13].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[13].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].searchParam[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[13].searchParam[2].name == "empty-reason"
    assert inst.rest[0].resource[13].searchParam[2].type == "token"
    assert inst.rest[0].resource[13].type == "List"
    assert (
        inst.rest[0].security.description
        == "Implementations SHOULD meet the security requirements documented in the [[daf-security|DAF implementation guide]]."
    )
    assert inst.status == "draft"
    assert inst.text.status == "generated"


def test_Conformance_4(base_settings):
    filename = (
        base_settings["unittest_data_dir"]
        / "conformance-daf-query-responder.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_4(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_4(inst2)


def impl_Conformance_4(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert inst.contact[0].telecom[0].value == "http://www.healthit.gov/"
    assert inst.date == parse_date("2015-04-02")
    assert (
        inst.description
        == "This profile defines the expected capabilities of the DAF Responder actor when conforming to the DAF FHIR implementation guide."
    )
    assert inst.fhirVersion == "1.0.0"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-daf-query-responder"
    assert inst.kind == "requirements"
    assert inst.name == "DAF Responder"
    assert (
        inst.profile[0].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-patient"
    )
    assert (
        inst.profile[1].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-allergyintolerance"
    )
    assert (
        inst.profile[2].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-diagnosticorder"
    )
    assert (
        inst.profile[3].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-diagnosticreport"
    )
    assert (
        inst.profile[4].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-encounter"
    )
    assert (
        inst.profile[5].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-familymemberhistory"
    )
    assert (
        inst.profile[6].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-immunization"
    )
    assert (
        inst.profile[7].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-resultobscode"
    )
    assert (
        inst.profile[8].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-medication"
    )
    assert (
        inst.profile[9].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-medicationstatement"
    )
    assert (
        inst.profile[10].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-medicationadministration"
    )
    assert (
        inst.profile[11].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-medicationorder"
    )
    assert (
        inst.profile[12].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-medicationdispense"
    )
    assert (
        inst.profile[13].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-condition"
    )
    assert (
        inst.profile[14].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-procedure"
    )
    assert (
        inst.profile[15].reference
        == "http://hl7.org/fhir/StructureDefinition/observation-daf-smokingstatus-dafsmokingstatus"
    )
    assert (
        inst.profile[16].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-vitalsigns"
    )
    assert (
        inst.profile[17].reference
        == "http://hl7.org/fhir/StructureDefinition/daf-problemlist"
    )
    assert inst.publisher == "U.S. Office of the National Coordinator (ONC)"
    assert (
        inst.rest[0].documentation
        == "The DAF Responder SHALL support the DAFPatient resource profile. In addition to the DAF-Patient, the DAF Responder SHALL support at least one additional resource profile from the list of DAF profiles. The DAF Responder SHALL implement REST behavior according to the FHIR specification. The DAF Responder SHALL support both json and xml resource formats for all DAF interactions."
    )
    assert inst.rest[0].mode == "server"
    assert (
        inst.rest[0].operation[0].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/encounter-everything"
    )
    assert inst.rest[0].operation[0].name == "encounter-everything"
    assert (
        inst.rest[0].operation[1].definition.reference
        == "http://hl7.org/fhir/OperationDefinition/patient-everything"
    )
    assert inst.rest[0].operation[1].name == "patient-everything"
    assert inst.rest[0].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows discovery of existing DAF-Patient resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[0].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific DAF-Patients by id"
    )
    assert (
        inst.rest[0].resource[0].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Allows review of changes to DAF-Patient instance over time"
    )
    assert (
        inst.rest[0].resource[0].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[0].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-Patient instance"
    )
    assert (
        inst.rest[0].resource[0].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[0].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-patient"
    )
    assert (
        inst.rest[0].resource[0].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-name"
    )
    assert (
        inst.rest[0].resource[0].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[0].name == "name"
    assert inst.rest[0].resource[0].searchParam[0].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-family"
    )
    assert (
        inst.rest[0].resource[0].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[1].name == "family"
    assert inst.rest[0].resource[0].searchParam[1].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-given"
    )
    assert (
        inst.rest[0].resource[0].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[2].name == "given"
    assert inst.rest[0].resource[0].searchParam[2].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-identifier"
    )
    assert (
        inst.rest[0].resource[0].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[3].name == "identifier"
    assert inst.rest[0].resource[0].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-language"
    )
    assert (
        inst.rest[0].resource[0].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[4].name == "language"
    assert inst.rest[0].resource[0].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-telecom"
    )
    assert (
        inst.rest[0].resource[0].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[5].name == "telecom"
    assert inst.rest[0].resource[0].searchParam[5].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-gender"
    )
    assert (
        inst.rest[0].resource[0].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[6].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[6].name == "gender"
    assert inst.rest[0].resource[0].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-birthdate"
    )
    assert (
        inst.rest[0].resource[0].searchParam[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[7].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[7].name == "birthdate"
    assert inst.rest[0].resource[0].searchParam[7].type == "date"
    assert (
        inst.rest[0].resource[0].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-city"
    )
    assert (
        inst.rest[0].resource[0].searchParam[8].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[8].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[8].name == "address-city"
    assert inst.rest[0].resource[0].searchParam[8].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-postalCode"
    )
    assert (
        inst.rest[0].resource[0].searchParam[9].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[9].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[9].name == "address-postalCode"
    assert inst.rest[0].resource[0].searchParam[9].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-state"
    )
    assert (
        inst.rest[0].resource[0].searchParam[10].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[10].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[10].name == "address-state"
    assert inst.rest[0].resource[0].searchParam[10].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-mothersMaidenName"
    )
    assert (
        inst.rest[0].resource[0].searchParam[11].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[11].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[11].name == "mothersMaidenName"
    assert inst.rest[0].resource[0].searchParam[11].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[12].definition
        == "http://hl7.org/fhir/SearchParameter/patient-extensions-Patient-age"
    )
    assert (
        inst.rest[0].resource[0].searchParam[12].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[12].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[12].name == "age"
    assert inst.rest[0].resource[0].searchParam[12].type == "number"
    assert (
        inst.rest[0].resource[0].searchParam[13].definition
        == "http://hl7.org/fhir/SearchParameter/us-core-Patient-race"
    )
    assert (
        inst.rest[0].resource[0].searchParam[13].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[13].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[13].name == "race"
    assert inst.rest[0].resource[0].searchParam[13].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[14].definition
        == "http://hl7.org/fhir/SearchParameter/us-core-Patient-ethnicity"
    )
    assert (
        inst.rest[0].resource[0].searchParam[14].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[14].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[14].name == "ethnicity"
    assert inst.rest[0].resource[0].searchParam[14].type == "token"
    assert inst.rest[0].resource[0].type == "Patient"
    assert inst.rest[0].resource[1].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[1].interaction[0].documentation
        == "Allows discovery of existing DAF-AllergyIntolerance resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[1].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[1].interaction[1].documentation
        == "Allows retrieval of a specific DAF-AllergyIntolerance by id"
    )
    assert (
        inst.rest[0].resource[1].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[1].interaction[2].documentation
        == "Allows review of changes to DAF-AllergyIntolerance instance over time"
    )
    assert (
        inst.rest[0].resource[1].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[1].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-AllergyIntolerance instance"
    )
    assert (
        inst.rest[0].resource[1].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[1].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-allergyintolerance"
    )
    assert inst.rest[0].resource[1].searchInclude[0] == "AllergyIntolerance.patient"
    assert (
        inst.rest[0].resource[1].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[1].searchParam[0].type == "token"
    assert inst.rest[0].resource[1].searchParam[1].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[1].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[1].name == "patient"
    assert inst.rest[0].resource[1].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[1].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[2].name == "category"
    assert inst.rest[0].resource[1].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[3].name == "status"
    assert inst.rest[0].resource[1].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[4].name == "substance"
    assert inst.rest[0].resource[1].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[5].name == "manifestation"
    assert inst.rest[0].resource[1].searchParam[5].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[6].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[6].name == "severity"
    assert inst.rest[0].resource[1].searchParam[6].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[7].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[7].name == "onset"
    assert inst.rest[0].resource[1].searchParam[7].type == "date"
    assert inst.rest[0].resource[1].type == "AllergyIntolerance"
    assert inst.rest[0].resource[2].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[2].interaction[0].documentation
        == "Allows discovery of existing DAF-DiagnosticOrder resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[2].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[2].interaction[1].documentation
        == "Allows retrieval of a specific DAF-DiagnosticOrder by id"
    )
    assert (
        inst.rest[0].resource[2].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[2].interaction[2].documentation
        == "Allows review of changes to DAF-DiagnosticOrder instance over time"
    )
    assert (
        inst.rest[0].resource[2].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[2].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-DiagnosticOrder instance"
    )
    assert (
        inst.rest[0].resource[2].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[2].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-diagnosticorder"
    )
    assert inst.rest[0].resource[2].searchInclude[0] == "DiagnosticOrder.subject"
    assert inst.rest[0].resource[2].searchInclude[1] == "DiagnosticOrder.orderer"
    assert inst.rest[0].resource[2].searchInclude[2] == "DiagnosticOrder.encounter"
    assert (
        inst.rest[0].resource[2].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[2].searchParam[0].type == "token"
    assert inst.rest[0].resource[2].searchParam[1].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[2].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].searchParam[1].name == "patient"
    assert inst.rest[0].resource[2].searchParam[1].type == "reference"
    assert inst.rest[0].resource[2].searchParam[2].chain[0] == "orderer.identifier"
    assert (
        inst.rest[0].resource[2].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].searchParam[2].name == "orderer"
    assert inst.rest[0].resource[2].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[2].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].searchParam[3].name == "code"
    assert inst.rest[0].resource[2].searchParam[3].type == "token"
    assert inst.rest[0].resource[2].searchParam[4].chain[0] == "encounter.identifier"
    assert (
        inst.rest[0].resource[2].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].searchParam[4].name == "encounter"
    assert inst.rest[0].resource[2].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[2].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].searchParam[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].searchParam[5].name == "item-date"
    assert inst.rest[0].resource[2].searchParam[5].type == "date"
    assert inst.rest[0].resource[2].type == "DiagnosticOrder"
    assert inst.rest[0].resource[3].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[3].interaction[0].documentation
        == "Allows discovery of existing DAF-DiagnosticReport resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[3].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[3].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[3].interaction[1].documentation
        == "Allows retrieval of a specific DAF-DiagnosticReport by id"
    )
    assert (
        inst.rest[0].resource[3].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[3].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[3].interaction[2].documentation
        == "Allows review of changes to DAF-DiagnosticReport instance over time"
    )
    assert (
        inst.rest[0].resource[3].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[3].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[3].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-DiagnosticReport instance"
    )
    assert (
        inst.rest[0].resource[3].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[3].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-diagnosticreport"
    )
    assert inst.rest[0].resource[3].searchInclude[0] == "DiagnosticReport.subject"
    assert inst.rest[0].resource[3].searchInclude[1] == "DiagnosticReport.performer"
    assert inst.rest[0].resource[3].searchInclude[2] == "DiagnosticReport.encounter"
    assert inst.rest[0].resource[3].searchInclude[3] == "DiagnosticReport.result"
    assert (
        inst.rest[0].resource[3].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[3].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[3].searchParam[0].type == "token"
    assert inst.rest[0].resource[3].searchParam[1].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[3].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[3].searchParam[1].name == "patient"
    assert inst.rest[0].resource[3].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[3].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[3].searchParam[2].name == "date"
    assert inst.rest[0].resource[3].searchParam[2].type == "date"
    assert inst.rest[0].resource[3].searchParam[3].chain[0] == "encounter.identifier"
    assert (
        inst.rest[0].resource[3].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[3].searchParam[3].name == "encounter"
    assert inst.rest[0].resource[3].searchParam[3].type == "reference"
    assert inst.rest[0].resource[3].searchParam[4].chain[0] == "performer.identifier"
    assert (
        inst.rest[0].resource[3].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[3].searchParam[4].name == "performer"
    assert inst.rest[0].resource[3].searchParam[4].type == "reference"
    assert inst.rest[0].resource[3].searchParam[5].chain[0] == "result.code"
    assert (
        inst.rest[0].resource[3].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].searchParam[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[3].searchParam[5].name == "result"
    assert inst.rest[0].resource[3].searchParam[5].type == "reference"
    assert inst.rest[0].resource[3].type == "DiagnosticReport"
    assert inst.rest[0].resource[4].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[4].interaction[0].documentation
        == "Allows discovery of existing DAF-Encounter resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[4].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[4].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[4].interaction[1].documentation
        == "Allows retrieval of a specific DAF-Encounter by id"
    )
    assert (
        inst.rest[0].resource[4].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[4].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[4].interaction[2].documentation
        == "Allows review of changes to DAF-Encounter instance over time"
    )
    assert (
        inst.rest[0].resource[4].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[4].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[4].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-Encounter instance"
    )
    assert (
        inst.rest[0].resource[4].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[4].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-encounter"
    )
    assert inst.rest[0].resource[4].searchInclude[0] == "Encounter.patient"
    assert inst.rest[0].resource[4].searchInclude[1] == "Encounter.location"
    assert (
        inst.rest[0].resource[4].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[4].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[4].searchParam[0].type == "token"
    assert inst.rest[0].resource[4].searchParam[1].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[4].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[4].searchParam[1].name == "patient"
    assert inst.rest[0].resource[4].searchParam[1].type == "reference"
    assert inst.rest[0].resource[4].searchParam[2].chain[0] == "location.identifier"
    assert (
        inst.rest[0].resource[4].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[4].searchParam[2].name == "location"
    assert inst.rest[0].resource[4].searchParam[2].type == "reference"
    assert (
        inst.rest[0].resource[4].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[4].searchParam[3].name == "type"
    assert inst.rest[0].resource[4].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[4].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[4].searchParam[4].name == "date"
    assert inst.rest[0].resource[4].searchParam[4].type == "date"
    assert (
        inst.rest[0].resource[4].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].searchParam[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[4].searchParam[5].name == "location-period"
    assert inst.rest[0].resource[4].searchParam[5].type == "date"
    assert inst.rest[0].resource[4].type == "Encounter"
    assert inst.rest[0].resource[5].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[5].interaction[0].documentation
        == "Allows discovery of existing DAF-FamilyMemberHistory resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[5].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[5].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[5].interaction[1].documentation
        == "Allows retrieval of a specific DAF-FamilyMemberHistory by id"
    )
    assert (
        inst.rest[0].resource[5].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[5].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[5].interaction[2].documentation
        == "Allows review of changes to DAF-FamilyMemberHistory instance over time"
    )
    assert (
        inst.rest[0].resource[5].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[5].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[5].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-FamilyMemberHistory instance"
    )
    assert (
        inst.rest[0].resource[5].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[5].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-familymemberhistory"
    )
    assert inst.rest[0].resource[5].searchInclude[0] == "FamilyMemberHistory.patient"
    assert (
        inst.rest[0].resource[5].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[5].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[5].searchParam[0].type == "token"
    assert inst.rest[0].resource[5].searchParam[1].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[5].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[5].searchParam[1].name == "patient"
    assert inst.rest[0].resource[5].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[5].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[5].searchParam[2].name == "relationship"
    assert inst.rest[0].resource[5].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[5].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[5].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[5].searchParam[3].name == "code"
    assert inst.rest[0].resource[5].searchParam[3].type == "token"
    assert inst.rest[0].resource[5].type == "FamilyMemberHistory"
    assert inst.rest[0].resource[6].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[6].interaction[0].documentation
        == "Allows discovery of existing DAF-Immunization resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[6].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[6].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[6].interaction[1].documentation
        == "Allows retrieval of a specific DAF-Immunization by id"
    )
    assert (
        inst.rest[0].resource[6].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[6].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[6].interaction[2].documentation
        == "Allows review of changes to DAF-Immunization instance over time"
    )
    assert (
        inst.rest[0].resource[6].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[6].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[6].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-Immunization instance"
    )
    assert (
        inst.rest[0].resource[6].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[6].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-immunization"
    )
    assert inst.rest[0].resource[6].searchInclude[0] == "Immunization.patient"
    assert inst.rest[0].resource[6].searchInclude[1] == "Immunization.performer"
    assert inst.rest[0].resource[6].searchInclude[2] == "Immunization.requester"
    assert inst.rest[0].resource[6].searchInclude[3] == "Immunization.manufacturer"
    assert inst.rest[0].resource[6].searchInclude[4] == "Immunization.reaction.detail"
    assert (
        inst.rest[0].resource[6].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[6].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[6].searchParam[0].type == "token"
    assert inst.rest[0].resource[6].searchParam[1].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[6].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[6].searchParam[1].name == "patient"
    assert inst.rest[0].resource[6].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[6].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[6].searchParam[2].name == "date"
    assert inst.rest[0].resource[6].searchParam[2].type == "date"
    assert (
        inst.rest[0].resource[6].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[6].searchParam[3].name == "vaccine-code"
    assert inst.rest[0].resource[6].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[6].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[6].searchParam[4].name == "notgiven"
    assert inst.rest[0].resource[6].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[6].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[6].searchParam[5].name == "lot-number"
    assert inst.rest[0].resource[6].searchParam[5].type == "string"
    assert inst.rest[0].resource[6].searchParam[6].chain[0] == "requester.identifier"
    assert (
        inst.rest[0].resource[6].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[6].searchParam[6].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[6].searchParam[6].name == "requester"
    assert inst.rest[0].resource[6].searchParam[6].type == "reference"
    assert inst.rest[0].resource[6].type == "Immunization"
    assert inst.rest[0].resource[7].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[7].interaction[0].documentation
        == "Allows discovery of existing DAF-Results resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[7].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[7].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[7].interaction[1].documentation
        == "Allows retrieval of a specific DAF-Results by id"
    )
    assert (
        inst.rest[0].resource[7].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[7].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[7].interaction[2].documentation
        == "Allows review of changes to DAF-Results instance over time"
    )
    assert (
        inst.rest[0].resource[7].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[7].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[7].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-Results instance"
    )
    assert (
        inst.rest[0].resource[7].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[7].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-resultobs"
    )
    assert inst.rest[0].resource[7].searchInclude[0] == "Observation.encounter"
    assert inst.rest[0].resource[7].searchInclude[1] == "Observation.subject"
    assert inst.rest[0].resource[7].searchInclude[2] == "Observation.related"
    assert (
        inst.rest[0].resource[7].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[7].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[7].searchParam[0].type == "token"
    assert inst.rest[0].resource[7].searchParam[1].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[7].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[7].searchParam[1].name == "patient"
    assert inst.rest[0].resource[7].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[7].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[7].searchParam[2].name == "code"
    assert inst.rest[0].resource[7].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[7].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[7].searchParam[3].name == "value-concept"
    assert inst.rest[0].resource[7].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[7].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[7].searchParam[4].name == "value-quantity"
    assert inst.rest[0].resource[7].searchParam[4].type == "quantity"
    assert (
        inst.rest[0].resource[7].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[7].searchParam[5].name == "code-value[x]"
    assert inst.rest[0].resource[7].searchParam[5].type == "composite"
    assert (
        inst.rest[0].resource[7].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[6].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[7].searchParam[6].name == "date"
    assert inst.rest[0].resource[7].searchParam[6].type == "date"
    assert inst.rest[0].resource[7].searchParam[7].chain[0] == "encounter.identifier"
    assert (
        inst.rest[0].resource[7].searchParam[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[7].searchParam[7].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[7].searchParam[7].name == "encounter"
    assert inst.rest[0].resource[7].searchParam[7].type == "reference"
    assert inst.rest[0].resource[7].searchRevInclude[0] == "Observation.component"
    assert inst.rest[0].resource[7].type == "Observation"
    assert inst.rest[0].resource[8].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[8].interaction[0].documentation
        == "Allows discovery of existing DAF-Medication resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[8].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[8].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[8].interaction[1].documentation
        == "Allows retrieval of a specific DAF-Medication by id"
    )
    assert (
        inst.rest[0].resource[8].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[8].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[8].interaction[2].documentation
        == "Allows review of changes to DAF-Medication instance over time"
    )
    assert (
        inst.rest[0].resource[8].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[8].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[8].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-Medication instance"
    )
    assert (
        inst.rest[0].resource[8].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[8].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-medication"
    )
    assert inst.rest[0].resource[8].searchInclude[0] == "Medication.manufacturer"
    assert (
        inst.rest[0].resource[8].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[8].searchParam[0].name == "code"
    assert inst.rest[0].resource[8].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[8].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[8].searchParam[1].name == "form"
    assert inst.rest[0].resource[8].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[8].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[8].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[8].searchParam[2].name == "ingredient"
    assert inst.rest[0].resource[8].searchParam[2].type == "reference"
    assert inst.rest[0].resource[8].type == "Medication"
    assert inst.rest[0].resource[9].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[9].interaction[0].documentation
        == "Allows discovery of existing DAF-MedicationStatement resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[9].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[9].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[9].interaction[1].documentation
        == "Allows retrieval of a specific DAF-MedicationStatement by id"
    )
    assert (
        inst.rest[0].resource[9].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[9].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[9].interaction[2].documentation
        == "Allows review of changes to DAF-MedicationStatement instance over time"
    )
    assert (
        inst.rest[0].resource[9].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[9].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[9].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-MedicationStatement instance"
    )
    assert (
        inst.rest[0].resource[9].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[9].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-medicationstatement"
    )
    assert inst.rest[0].resource[9].searchInclude[0] == "MedicationStatement.patient"
    assert inst.rest[0].resource[9].searchInclude[1] == "MedicationStatement.medication"
    assert (
        inst.rest[0].resource[9].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[9].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[9].searchParam[0].type == "token"
    assert inst.rest[0].resource[9].searchParam[1].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[9].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[9].searchParam[1].name == "patient"
    assert inst.rest[0].resource[9].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[9].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[9].searchParam[2].name == "effectivedate"
    assert inst.rest[0].resource[9].searchParam[2].type == "date"
    assert inst.rest[0].resource[9].searchParam[3].chain[0] == "medication.code"
    assert (
        inst.rest[0].resource[9].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[9].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[9].searchParam[3].name == "medication"
    assert inst.rest[0].resource[9].searchParam[3].type == "reference"
    assert inst.rest[0].resource[9].type == "MedicationStatement"
    assert inst.rest[0].resource[10].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[10].interaction[0].documentation
        == "Allows discovery of existing DAF-MedicationAdministration resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[10].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[10].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[10].interaction[1].documentation
        == "Allows retrieval of a specific DAF-MedicationAdministration by id"
    )
    assert (
        inst.rest[0].resource[10].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[10].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[10].interaction[2].documentation
        == "Allows review of changes to DAF-MedicationAdministration instance over time"
    )
    assert (
        inst.rest[0].resource[10].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[10].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[10].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-MedicationAdministration instance"
    )
    assert (
        inst.rest[0].resource[10].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[10].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-medicationadministration"
    )
    assert (
        inst.rest[0].resource[10].searchInclude[0] == "MedicationAdministration.patient"
    )
    assert (
        inst.rest[0].resource[10].searchInclude[1]
        == "MedicationAdministration.practitioner"
    )
    assert (
        inst.rest[0].resource[10].searchInclude[2]
        == "MedicationAdministration.encounter"
    )
    assert (
        inst.rest[0].resource[10].searchInclude[3]
        == "MedicationAdministration.prescription"
    )
    assert (
        inst.rest[0].resource[10].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[10].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[10].searchParam[0].type == "token"
    assert inst.rest[0].resource[10].searchParam[1].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[10].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[10].searchParam[1].name == "patient"
    assert inst.rest[0].resource[10].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[10].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[10].searchParam[2].name == "effectivetime"
    assert inst.rest[0].resource[10].searchParam[2].type == "date"
    assert inst.rest[0].resource[10].searchParam[3].chain[0] == "encounter.identifier"
    assert (
        inst.rest[0].resource[10].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[10].searchParam[3].name == "encounter"
    assert inst.rest[0].resource[10].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[10].searchParam[4].chain[0] == "practitioner.identifier"
    )
    assert (
        inst.rest[0].resource[10].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[10].searchParam[4].name == "practitioner"
    assert inst.rest[0].resource[10].searchParam[4].type == "reference"
    assert (
        inst.rest[0].resource[10].searchParam[5].chain[0] == "prescription.identifier"
    )
    assert (
        inst.rest[0].resource[10].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[10].searchParam[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[10].searchParam[5].name == "prescription"
    assert inst.rest[0].resource[10].searchParam[5].type == "reference"
    assert inst.rest[0].resource[10].type == "MedicationAdministration"
    assert inst.rest[0].resource[11].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[11].interaction[0].documentation
        == "Allows discovery of existing DAF-MedicationDispense resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[11].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[11].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[11].interaction[1].documentation
        == "Allows retrieval of a specific DAF-MedicationDispense by id"
    )
    assert (
        inst.rest[0].resource[11].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[11].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[11].interaction[2].documentation
        == "Allows review of changes to DAF-MedicationDispense instance over time"
    )
    assert (
        inst.rest[0].resource[11].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[11].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[11].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-MedicationDispenseinstance"
    )
    assert (
        inst.rest[0].resource[11].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[11].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-medicationdispense"
    )
    assert inst.rest[0].resource[11].searchInclude[0] == "MedicationDispense.patient"
    assert inst.rest[0].resource[11].searchInclude[1] == "MedicationDispense.medication"
    assert (
        inst.rest[0].resource[11].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[11].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[11].searchParam[0].type == "token"
    assert inst.rest[0].resource[11].searchParam[1].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[11].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[11].searchParam[1].name == "patient"
    assert inst.rest[0].resource[11].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[11].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[11].searchParam[2].name == "code"
    assert inst.rest[0].resource[11].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[11].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[11].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[11].searchParam[3].name == "medication"
    assert inst.rest[0].resource[11].searchParam[3].type == "reference"
    assert inst.rest[0].resource[11].type == "MedicationDispense"
    assert inst.rest[0].resource[12].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[12].interaction[0].documentation
        == "Allows discovery of existing DAF-MedicationOrder resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[12].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[12].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[12].interaction[1].documentation
        == "Allows retrieval of a specific DAF-MedicationOrder by id"
    )
    assert (
        inst.rest[0].resource[12].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[12].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[12].interaction[2].documentation
        == "Allows review of changes to DAF-MedicationOrder instance over time"
    )
    assert (
        inst.rest[0].resource[12].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[12].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[12].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-MedicationOrder instances"
    )
    assert (
        inst.rest[0].resource[12].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[12].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-medicationdispense"
    )
    assert inst.rest[0].resource[12].searchInclude[0] == "MedicationOrder.patient"
    assert inst.rest[0].resource[12].searchInclude[1] == "MedicationOrder.medication"
    assert inst.rest[0].resource[12].searchInclude[2] == "MedicationOrder.encounter"
    assert (
        inst.rest[0].resource[12].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[12].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[12].searchParam[0].type == "token"
    assert inst.rest[0].resource[12].searchParam[1].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[12].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[12].searchParam[1].name == "patient"
    assert inst.rest[0].resource[12].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[12].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[12].searchParam[2].name == "code"
    assert inst.rest[0].resource[12].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[12].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[12].searchParam[3].name == "medication"
    assert inst.rest[0].resource[12].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[12].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[12].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[12].searchParam[4].name == "encounter"
    assert inst.rest[0].resource[12].searchParam[4].type == "reference"
    assert inst.rest[0].resource[12].type == "MedicationOrder"
    assert inst.rest[0].resource[13].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[13].interaction[0].documentation
        == "Allows discovery of existing DAF-Condition resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[13].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[13].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[13].interaction[1].documentation
        == "Allows retrieval of a specific DAF-Condition by id"
    )
    assert (
        inst.rest[0].resource[13].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[13].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[13].interaction[2].documentation
        == "Allows review of changes to DAF-Condition instance over time"
    )
    assert (
        inst.rest[0].resource[13].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[13].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[13].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-Condition instance"
    )
    assert (
        inst.rest[0].resource[13].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[13].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-condition"
    )
    assert inst.rest[0].resource[13].searchInclude[0] == "Condition.patient"
    assert inst.rest[0].resource[13].searchInclude[1] == "Condition.encounter"
    assert inst.rest[0].resource[13].searchInclude[2] == "Condition.asserter"
    assert (
        inst.rest[0].resource[13].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[13].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[13].searchParam[0].type == "token"
    assert inst.rest[0].resource[13].searchParam[1].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[13].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[13].searchParam[1].name == "patient"
    assert inst.rest[0].resource[13].searchParam[1].type == "reference"
    assert (
        inst.rest[0].resource[13].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[13].searchParam[2].name == "code"
    assert inst.rest[0].resource[13].searchParam[2].type == "token"
    assert inst.rest[0].resource[13].searchParam[3].chain[0] == "encounter.identifier"
    assert (
        inst.rest[0].resource[13].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[13].searchParam[3].name == "encounter"
    assert inst.rest[0].resource[13].searchParam[3].type == "reference"
    assert (
        inst.rest[0].resource[13].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[13].searchParam[4].name == "onset"
    assert inst.rest[0].resource[13].searchParam[4].type == "date"
    assert (
        inst.rest[0].resource[13].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[13].searchParam[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[13].searchParam[5].name == "severity"
    assert inst.rest[0].resource[13].searchParam[5].type == "token"
    assert inst.rest[0].resource[13].type == "Condition"
    assert inst.rest[0].resource[14].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[14].interaction[0].documentation
        == "Allows discovery of existing DAF-Procedure resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[14].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[14].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[14].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[14].interaction[1].documentation
        == "Allows retrieval of a specific DAF-Procedure by id"
    )
    assert (
        inst.rest[0].resource[14].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[14].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[14].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[14].interaction[2].documentation
        == "Allows review of changes to DAF-Procedure instance over time"
    )
    assert (
        inst.rest[0].resource[14].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[14].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[14].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[14].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF-Procedure instance"
    )
    assert (
        inst.rest[0].resource[14].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[14].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[14].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-procedure"
    )
    assert inst.rest[0].resource[14].searchInclude[0] == "Procedure.patient"
    assert inst.rest[0].resource[14].searchInclude[1] == "Procedure.encounter"
    assert inst.rest[0].resource[14].searchInclude[2] == "Procedure.performer"
    assert (
        inst.rest[0].resource[14].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[14].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[14].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[14].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[14].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[14].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[14].searchParam[1].name == "code"
    assert inst.rest[0].resource[14].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[14].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[14].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[14].searchParam[2].name == "date"
    assert inst.rest[0].resource[14].searchParam[2].type == "date"
    assert inst.rest[0].resource[14].searchParam[3].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[14].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[14].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[14].searchParam[3].name == "patient"
    assert inst.rest[0].resource[14].searchParam[3].type == "reference"
    assert inst.rest[0].resource[14].searchParam[4].chain[0] == "encounter.identifier"
    assert (
        inst.rest[0].resource[14].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[14].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[14].searchParam[4].name == "encounter"
    assert inst.rest[0].resource[14].searchParam[4].type == "reference"
    assert inst.rest[0].resource[14].type == "Procedure"
    assert inst.rest[0].resource[15].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[15].interaction[0].documentation
        == "Allows discovery of existing DAF List resources using different search criteria"
    )
    assert (
        inst.rest[0].resource[15].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[15].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[15].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[15].interaction[1].documentation
        == "Allows retrieval of a specific DAF List by id"
    )
    assert (
        inst.rest[0].resource[15].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[15].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[15].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[15].interaction[2].documentation
        == "Allows review of changes to DAF List instance over time"
    )
    assert (
        inst.rest[0].resource[15].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[15].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[15].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[15].interaction[3].documentation
        == "Allows retrieval of a historical version of a DAF List instance"
    )
    assert (
        inst.rest[0].resource[15].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[15].interaction[3].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[15].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/daf-problemlist"
    )
    assert inst.rest[0].resource[15].searchInclude[0] == "List.subject"
    assert inst.rest[0].resource[15].searchInclude[1] == "List.item"
    assert inst.rest[0].resource[15].searchParam[0].chain[0] == "patient.identifier"
    assert (
        inst.rest[0].resource[15].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[15].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[15].searchParam[0].name == "patient"
    assert inst.rest[0].resource[15].searchParam[0].type == "reference"
    assert (
        inst.rest[0].resource[15].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[15].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[15].searchParam[1].name == "code"
    assert inst.rest[0].resource[15].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[15].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[15].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[15].searchParam[2].name == "empty-reason"
    assert inst.rest[0].resource[15].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[15].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[15].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[15].searchParam[3].name == "date"
    assert inst.rest[0].resource[15].searchParam[3].type == "date"
    assert inst.rest[0].resource[15].type == "List"
    assert (
        inst.rest[0].security.description
        == "DAF Responders SHALL implement the security requirements documented in the [[daf-security|DAF FHIR IG]]."
    )
    assert inst.status == "draft"
    assert inst.text.status == "generated"


def test_Conformance_5(base_settings):
    filename = (
        base_settings["unittest_data_dir"] / "conformance-ehrs-rle.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_5(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_5(inst2)


def impl_Conformance_5(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert (
        inst.contact[0].telecom[0].value == "http://hl7.org/special/committees/ehr.htm"
    )
    assert inst.date == parse_date("2014-12-06")
    assert (
        inst.description
        == "This profile defines the expected capabilities of an ''Electronic Health Record System'' when conforming to the EHRS functional model's Record Lifecycle specification."
    )
    assert inst.fhirVersion == "1.0.0"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-ehrs-rle"
    assert inst.kind == "requirements"
    assert inst.name == "Record Lifecycle-conformant Electronic Health Record System"
    assert (
        inst.publisher
        == "Health Level Seven, Int'l - Electronic Health Record work group"
    )
    assert (
        inst.rest[0].documentation
        == "Conformant systems must record [[Provenance]] records on all Create, Update and Delete actions on any resource other than Provenance or AuditEvent.       Conformant systems must record [[AuditEvent]] records on all Create, Update and Delete actions as well as all GET operations (read, search, etc.)"
    )
    assert inst.rest[0].mode == "client"
    assert inst.rest[0].resource[0].interaction[0].code == "create"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows defining a new data element.  Repositories requiring curation of submitted data elements may require all new data elements to have a status of 'draft'."
    )
    assert (
        inst.rest[0].resource[0].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[0].extension[0].valueCode == "SHALL"
    assert (
        inst.rest[0].resource[0].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/provenance-ehr-rle"
    )
    assert inst.rest[0].resource[0].type == "Provenance"
    assert inst.rest[0].resource[1].interaction[0].code == "create"
    assert (
        inst.rest[0].resource[1].interaction[0].documentation
        == "Allows defining a new data element.  Repositories requiring curation of submitted data elements may require all new data elements to have a status of 'draft'."
    )
    assert (
        inst.rest[0].resource[1].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[0].extension[0].valueCode == "SHALL"
    assert (
        inst.rest[0].resource[1].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/auditevent-ehr-rle"
    )
    assert inst.rest[0].resource[1].type == "AuditEvent"
    assert inst.rest[0].security.description == "Any security rules??"
    assert inst.status == "draft"
    assert inst.text.status == "generated"


def test_Conformance_6(base_settings):
    filename = base_settings["unittest_data_dir"] / "conformance-example.canonical.json"
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_6(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_6(inst2)


def impl_Conformance_6(inst):
    assert inst.acceptUnknown == "both"
    assert inst.contact[0].name == "System Administrator"
    assert inst.contact[0].telecom[0].system == "email"
    assert inst.contact[0].telecom[0].value == "wile@acme.org"
    assert inst.copyright == "Copyright © Acme Healthcare and GoodCorp EHR Systems"
    assert inst.date == parse_date("2012-01-04")
    assert (
        inst.description
        == "This is the FHIR conformance statement for the main EHR at ACME for the private interface - it does not describe the public interface"
    )
    assert (
        inst.document[0].documentation
        == "Basic rules for all documents in the EHR system"
    )
    assert inst.document[0].mode == "consumer"
    assert (
        inst.document[0].profile.reference
        == "http://fhir.hl7.org/base/Profilebc054d23-75e1-4dc6-aca5-838b6b1ac81d/_history/b5fdd9fc-b021-4ea1-911a-721a60663796"
    )
    assert inst.experimental == True
    assert inst.fhirVersion == "1.0.0"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "example"
    assert inst.implementation.description == "main EHR at ACME"
    assert inst.implementation.url == "http://10.2.3.4/fhir"
    assert inst.kind == "instance"
    assert (
        inst.messaging[0].documentation
        == "ADT A08 equivalent for external system notifications"
    )
    assert inst.messaging[0].endpoint[0].address == "mllp:10.1.1.10:9234"
    assert inst.messaging[0].endpoint[0].protocol.code == "mllp"
    assert (
        inst.messaging[0].endpoint[0].protocol.system
        == "http://hl7.org/fhir/message-transport"
    )
    assert inst.messaging[0].event[0].category == "Consequence"
    assert inst.messaging[0].event[0].code.code == "admin-notify"
    assert inst.messaging[0].event[0].code.system == "http://hl7.org/fhir/message-type"
    assert (
        inst.messaging[0].event[0].documentation
        == "Notification of an update to a patient resource. changing the links is not supported"
    )
    assert inst.messaging[0].event[0].focus == "Patient"
    assert inst.messaging[0].event[0].mode == "receiver"
    assert (
        inst.messaging[0].event[0].request.reference
        == "StructureDefinition/daf-patient"
    )
    assert (
        inst.messaging[0].event[0].response.reference
        == "StructureDefinition/MessageHeader"
    )
    assert inst.messaging[0].reliableCache == 30
    assert inst.name == "ACME EHR Conformance statement"
    assert inst.publisher == "ACME Corporation"
    assert (
        inst.requirements
        == "Main EHR conformance statement, published for contracting and operational support"
    )
    assert inst.rest[0].compartment[0] == "http://hl7.org/fhir/compartment/Patient"
    assert inst.rest[0].documentation == "Main FHIR endpoint for acem health"
    assert inst.rest[0].interaction[0].code == "transaction"
    assert inst.rest[0].interaction[1].code == "history-system"
    assert inst.rest[0].mode == "server"
    assert inst.rest[0].resource[0].conditionalCreate == True
    assert inst.rest[0].resource[0].conditionalDelete == "not-supported"
    assert inst.rest[0].resource[0].conditionalUpdate == False
    assert inst.rest[0].resource[0].interaction[0].code == "read"
    assert inst.rest[0].resource[0].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Only supported for patient records since 12-Dec 2012"
    )
    assert inst.rest[0].resource[0].interaction[2].code == "update"
    assert inst.rest[0].resource[0].interaction[3].code == "history-instance"
    assert inst.rest[0].resource[0].interaction[4].code == "create"
    assert inst.rest[0].resource[0].interaction[5].code == "history-type"
    assert (
        inst.rest[0].resource[0].profile.reference
        == "http://fhir.hl7.org/base/Profile7896271d-57f6-4231-89dc-dcc91eab2416"
    )
    assert inst.rest[0].resource[0].readHistory == True
    assert inst.rest[0].resource[0].searchInclude[0] == "Organization"
    assert (
        inst.rest[0].resource[0].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-identifier"
    )
    assert (
        inst.rest[0].resource[0].searchParam[0].documentation
        == "Only supports search by institution MRN"
    )
    assert inst.rest[0].resource[0].searchParam[0].modifier[0] == "missing"
    assert inst.rest[0].resource[0].searchParam[0].name == "identifier"
    assert inst.rest[0].resource[0].searchParam[0].type == "token"
    assert inst.rest[0].resource[0].searchParam[1].chain[0] == "name"
    assert inst.rest[0].resource[0].searchParam[1].chain[1] == "identifier"
    assert (
        inst.rest[0].resource[0].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/Patient-careprovider"
    )
    assert inst.rest[0].resource[0].searchParam[1].modifier[0] == "missing"
    assert inst.rest[0].resource[0].searchParam[1].name == "careprovider"
    assert inst.rest[0].resource[0].searchParam[1].target[0] == "Organization"
    assert inst.rest[0].resource[0].searchParam[1].type == "reference"
    assert inst.rest[0].resource[0].searchRevInclude[0] == "Person"
    assert inst.rest[0].resource[0].type == "Patient"
    assert inst.rest[0].resource[0].updateCreate == False
    assert inst.rest[0].resource[0].versioning == "versioned-update"
    assert (
        inst.rest[0].security.certificate[0].blob == b"IHRoaXMgYmxvYiBpcyBub3QgdmFsaWQ="
    )
    assert inst.rest[0].security.certificate[0].type == "application/jwt"
    assert inst.rest[0].security.cors == True
    assert inst.rest[0].security.description == "See Smart on FHIR documentation"
    assert inst.rest[0].security.service[0].coding[0].code == "SMART-on-FHIR"
    assert (
        inst.rest[0].security.service[0].coding[0].system
        == "http://hl7.org/fhir/restful-security-service"
    )
    assert inst.software.name == "EHR"
    assert inst.software.releaseDate == parse_date("2012-01-04")
    assert inst.software.version == "0.00.020.2134"
    assert inst.status == "draft"
    assert inst.text.status == "generated"
    assert inst.url == "68D043B5-9ECF-4559-A57A-396E0D452311"
    assert inst.version == "20130510"


def test_Conformance_7(base_settings):
    filename = (
        base_settings["unittest_data_dir"] / "conformance-phr-example.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_7(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_7(inst2)


def impl_Conformance_7(inst):
    assert inst.acceptUnknown == "no"
    assert inst.contact[0].telecom[0].system == "other"
    assert inst.contact[0].telecom[0].value == "http://hl7.org/fhir"
    assert inst.date == parse_date("2013-06-18")
    assert (
        inst.description
        == "Prototype Conformance Statement for September 2013 Connectathon"
    )
    assert inst.fhirVersion == "1.0.0"
    assert inst.format[0] == "json"
    assert inst.format[1] == "xml"
    assert inst.id == "phr"
    assert inst.kind == "capability"
    assert inst.name == "PHR Template"
    assert inst.publisher == "FHIR Project"
    assert (
        inst.rest[0].documentation
        == "Protoype server conformance statement for September 2013 Connectathon"
    )
    assert inst.rest[0].mode == "server"
    assert inst.rest[0].resource[0].interaction[0].code == "read"
    assert inst.rest[0].resource[0].interaction[1].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "When a client searches patients with no search criteria, they get a list of all patients they have access too. Servers may elect to offer additional search parameters, but this is not required"
    )
    assert inst.rest[0].resource[0].type == "Patient"
    assert inst.rest[0].resource[1].interaction[0].code == "read"
    assert inst.rest[0].resource[1].interaction[1].code == "search-type"
    assert (
        inst.rest[0].resource[1].searchParam[0].documentation
        == "_id parameter always supported. For the connectathon, servers may elect which search parameters are supported"
    )
    assert inst.rest[0].resource[1].searchParam[0].name == "_id"
    assert inst.rest[0].resource[1].searchParam[0].type == "token"
    assert inst.rest[0].resource[1].type == "DocumentReference"
    assert inst.rest[0].resource[2].interaction[0].code == "read"
    assert inst.rest[0].resource[2].interaction[1].code == "search-type"
    assert (
        inst.rest[0].resource[2].searchParam[0].documentation
        == "Standard _id parameter"
    )
    assert inst.rest[0].resource[2].searchParam[0].name == "_id"
    assert inst.rest[0].resource[2].searchParam[0].type == "token"
    assert inst.rest[0].resource[2].type == "Condition"
    assert inst.rest[0].resource[3].interaction[0].code == "read"
    assert inst.rest[0].resource[3].interaction[1].code == "search-type"
    assert (
        inst.rest[0].resource[3].searchParam[0].documentation
        == "Standard _id parameter"
    )
    assert inst.rest[0].resource[3].searchParam[0].name == "_id"
    assert inst.rest[0].resource[3].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[3].searchParam[1].documentation
        == "which diagnostic discipline/department created the report"
    )
    assert inst.rest[0].resource[3].searchParam[1].name == "service"
    assert inst.rest[0].resource[3].searchParam[1].type == "token"
    assert inst.rest[0].resource[3].type == "DiagnosticReport"
    assert (
        inst.rest[0].security.description
        == "We recommend that PHR servers use standard OAuth using a          standard 3rd party provider. We are not testing the ability to provide an          OAuth authentication/authorization service itself, and nor is providing          any security required for the connectathon at all"
    )
    assert inst.rest[0].security.service[0].text == "OAuth"
    assert inst.software.name == "ACME PHR Server"
    assert inst.text.status == "generated"


def test_Conformance_8(base_settings):
    filename = (
        base_settings["unittest_data_dir"] / "conformance-sdc-de-curator.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_8(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_8(inst2)


def impl_Conformance_8(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert (
        inst.contact[0].telecom[0].value
        == "http://wiki.siframework.org/Structured+Data+Capture+Initiative"
    )
    assert inst.date == parse_date("2014-07-06")
    assert (
        inst.description
        == "This profile defines the expected capabilities of the ''SDC Data Element Curator'' role when conforming to the S&I Framework's [[sdc|Structured Data Capture FHIR Data Element Exchange implementation guide]].  This role is responsible for defining and updating data elements stored in a repository."
    )
    assert inst.fhirVersion == "1.0.2"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-sdc-de-curator"
    assert inst.kind == "requirements"
    assert inst.name == "SDC Data Element Curator"
    assert inst.publisher == "U.S. Office of the National Coordinator (ONC)"
    assert (
        inst.rest[0].documentation
        == "The primary focus of the curator is the definition and maintenance of [[DataElement]]s.  However, [[ValueSet]]s must also be supported to allow definition of coded data elements.  Some data elements will choose to maintain value sets as 'contained' resources, meaning the value set exists only in the context of the data element and cannot be referenced or maintained without also updating the data element.  However, systems should support value set re-use across data elements.  (Version-specific referencing can be used to avoid value sets from changing independent of the referencing [[Questionnaire]].)"
    )
    assert inst.rest[0].mode == "server"
    assert inst.rest[0].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows a user to search for existing data elements"
    )
    assert (
        inst.rest[0].resource[0].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific known data element"
    )
    assert (
        inst.rest[0].resource[0].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[2].code == "vread"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Allows retrieval of a specific version of a data element"
    )
    assert (
        inst.rest[0].resource[0].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[3].code == "history-instance"
    assert (
        inst.rest[0].resource[0].interaction[3].documentation
        == "Allows review of changes to a data element over time"
    )
    assert (
        inst.rest[0].resource[0].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[4].code == "create"
    assert (
        inst.rest[0].resource[0].interaction[4].documentation
        == "Allows defining a new data element.  Repositories requiring curation of submitted data elements may require all new data elements to have a status of 'draft'."
    )
    assert (
        inst.rest[0].resource[0].interaction[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[5].code == "update"
    assert (
        inst.rest[0].resource[0].interaction[5].documentation
        == "Allows maintaining data elements, such as adding additional mappings, display names, etc.  Servers may choose to prohibit certain types of edits, instead requiring the creation of a new data element (and potentially the retiring of the existing data element).  Servers may also limit who can change particular data elements."
    )
    assert (
        inst.rest[0].resource[0].interaction[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[6].code == "validate"
    assert (
        inst.rest[0].resource[0].interaction[6].documentation
        == "Allows a client to verify whether a particular new data element or revision of an existing data element would be accepted based on validation and other business rules.  Useful for some workflows"
    )
    assert (
        inst.rest[0].resource[0].interaction[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[6].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].interaction[7].code == "delete"
    assert (
        inst.rest[0].resource[0].interaction[7].documentation
        == "Allows removal of an existing data element.  Servers may choose to not support deletions or may limit deletions to data elements meeting certain requirements.  E.g. only elements with a status of draft or only elements that have been retired for at least two years, etc."
    )
    assert (
        inst.rest[0].resource[0].interaction[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[7].extension[0].valueCode == "MAY"
    assert (
        inst.rest[0].resource[0].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/dataelement-sdc-de"
    )
    assert inst.rest[0].resource[0].type == "DataElement"
    assert inst.rest[0].resource[1].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[1].interaction[0].documentation
        == "Allows discovery of existing value sets for use in authoring data elements"
    )
    assert (
        inst.rest[0].resource[1].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[1].interaction[1].documentation
        == "Allows retrieval of a specific value set referenced within a data element"
    )
    assert (
        inst.rest[0].resource[1].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[2].code == "vread"
    assert (
        inst.rest[0].resource[1].interaction[2].documentation
        == "Allows retrieval of a historical version of a value set as referenced within a data element"
    )
    assert (
        inst.rest[0].resource[1].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[3].code == "history-instance"
    assert (
        inst.rest[0].resource[1].interaction[3].documentation
        == "Allows review of changes to a value set over time"
    )
    assert (
        inst.rest[0].resource[1].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[4].code == "create"
    assert (
        inst.rest[0].resource[1].interaction[4].documentation
        == "Allows definition of a new value set used by one or more data elements"
    )
    assert (
        inst.rest[0].resource[1].interaction[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[5].code == "update"
    assert (
        inst.rest[0].resource[1].interaction[5].documentation
        == "Allows existing value sets referenced by one or more data elements to be maintained"
    )
    assert (
        inst.rest[0].resource[1].interaction[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[6].code == "validate"
    assert (
        inst.rest[0].resource[1].interaction[6].documentation
        == "Allows verification that a value set is valid prior to submission - useful for some workflows."
    )
    assert (
        inst.rest[0].resource[1].interaction[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[6].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].interaction[7].code == "delete"
    assert (
        inst.rest[0].resource[1].interaction[7].documentation
        == "Not all servers will support deletion of value sets.  Status change to 'retired' will be more typical, though deletion of draft value sets may keep repositories cleaner."
    )
    assert (
        inst.rest[0].resource[1].interaction[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[7].extension[0].valueCode == "MAY"
    assert (
        inst.rest[0].resource[1].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/valueset-sdc-de"
    )
    assert inst.rest[0].resource[1].type == "ValueSet"
    assert (
        inst.rest[0].security.description
        == "Implementations must meet the general security requirements documented in the [[sdc-security|SDC implementation guide]]."
    )
    assert inst.status == "draft"
    assert inst.text.status == "generated"


def test_Conformance_9(base_settings):
    filename = (
        base_settings["unittest_data_dir"]
        / "conformance-sdc-de-registry.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_9(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_9(inst2)


def impl_Conformance_9(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert (
        inst.contact[0].telecom[0].value
        == "http://wiki.siframework.org/Structured+Data+Capture+Initiative"
    )
    assert inst.date == parse_date("2014-07-06")
    assert (
        inst.description
        == "This profile defines the expected capabilities of the ''SDC Data Element Manager'' role when conforming to the S&I Framework's [[sdc|Structured Data Capture FHIR implementation guide]].  This role is responsible for defining maintaining a repository of data elements used in designing forms, profiles and templates in support of SDC use-cases, including the pre-population and auto-population of forms."
    )
    assert inst.fhirVersion == "1.0.2"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-sdc-de-registry"
    assert inst.kind == "requirements"
    assert inst.name == "SDC Data Element Manager"
    assert inst.publisher == "U.S. Office of the National Coordinator (ONC)"
    assert (
        inst.rest[0].documentation
        == "The primary focus of the repository is the definition of [[DataElement]]s.  However, [[ValueSet]]s must also be supported to allow definition of coded data elements.  Some data elements will choose to maintain value sets as 'contained' resources, meaning the value set exists only in the context of the data element and cannot be referenced or maintained without also updating the data element.  However, systems should support value set re-use across data elements.  (Version-specific referencing can be used to avoid value sets from changing independent of the referencing [[Questionnaire]].)"
    )
    assert inst.rest[0].mode == "server"
    assert inst.rest[0].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows a user to search for existing data elements"
    )
    assert (
        inst.rest[0].resource[0].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific known data element"
    )
    assert (
        inst.rest[0].resource[0].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[2].code == "vread"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Allows retrieval of a specific version of a data element"
    )
    assert (
        inst.rest[0].resource[0].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[3].code == "history-instance"
    assert (
        inst.rest[0].resource[0].interaction[3].documentation
        == "Allows review of changes to a data element over time"
    )
    assert (
        inst.rest[0].resource[0].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[4].code == "create"
    assert (
        inst.rest[0].resource[0].interaction[4].documentation
        == "Allows defining a new data element.  Repositories requiring curation of submitted data elements may require all new data elements to have a status of 'draft'."
    )
    assert (
        inst.rest[0].resource[0].interaction[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[5].code == "update"
    assert (
        inst.rest[0].resource[0].interaction[5].documentation
        == "Allows maintaining data elements while creating and editing forms.  Servers may choose to prohibit certain types of edits, instead requiring the creation of a new data element (and potentially the retiring of the existing data element).  Servers may also limit who can change particular data elements."
    )
    assert (
        inst.rest[0].resource[0].interaction[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[6].code == "validate"
    assert (
        inst.rest[0].resource[0].interaction[6].documentation
        == "Allows a client to verify whether a particular new data element or revision of an existing data element would be accepted based on validation and other business rules.  Useful for some workflows"
    )
    assert (
        inst.rest[0].resource[0].interaction[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[6].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].interaction[7].code == "delete"
    assert (
        inst.rest[0].resource[0].interaction[7].documentation
        == "Allows removal of an existing data element.  Servers may choose to not support deletions or may limit deletions to data elements meeting certain requirements.  E.g. only elements with a status of draft or only elements that have been retired for at least two years, etc."
    )
    assert (
        inst.rest[0].resource[0].interaction[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[7].extension[0].valueCode == "MAY"
    assert (
        inst.rest[0].resource[0].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/valueset-sdc"
    )
    assert inst.rest[0].resource[0].searchInclude[0] == "DataElement.binding.valueSet"
    assert (
        inst.rest[0].resource[0].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement#category"
    )
    assert (
        inst.rest[0].resource[0].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[0].name == "category"
    assert inst.rest[0].resource[0].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement#code"
    )
    assert (
        inst.rest[0].resource[0].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[1].name == "code"
    assert inst.rest[0].resource[0].searchParam[1].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement#date"
    )
    assert (
        inst.rest[0].resource[0].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[2].name == "date"
    assert inst.rest[0].resource[0].searchParam[2].type == "date"
    assert (
        inst.rest[0].resource[0].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement#description"
    )
    assert (
        inst.rest[0].resource[0].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[3].name == "description"
    assert inst.rest[0].resource[0].searchParam[3].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement#identifier"
    )
    assert (
        inst.rest[0].resource[0].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[4].name == "identifier"
    assert inst.rest[0].resource[0].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement#name"
    )
    assert (
        inst.rest[0].resource[0].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[5].name == "name"
    assert inst.rest[0].resource[0].searchParam[5].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement#publisher"
    )
    assert (
        inst.rest[0].resource[0].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[6].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[6].name == "publisher"
    assert inst.rest[0].resource[0].searchParam[6].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement#status"
    )
    assert (
        inst.rest[0].resource[0].searchParam[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[7].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[7].name == "status"
    assert inst.rest[0].resource[0].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/dataelement#version"
    )
    assert (
        inst.rest[0].resource[0].searchParam[8].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[8].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[8].name == "version"
    assert inst.rest[0].resource[0].searchParam[8].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/11179-meaning"
    )
    assert (
        inst.rest[0].resource[0].searchParam[9].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[9].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[9].name == "meaning"
    assert inst.rest[0].resource[0].searchParam[9].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[10].definition
        == "http://hl7.org/fhir/SearchParameter/11179-objectClass"
    )
    assert (
        inst.rest[0].resource[0].searchParam[10].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[10].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[10].name == "objectClass"
    assert inst.rest[0].resource[0].searchParam[10].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[11].definition
        == "http://hl7.org/fhir/SearchParameter/11179-property"
    )
    assert (
        inst.rest[0].resource[0].searchParam[11].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[11].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[11].name == "property"
    assert inst.rest[0].resource[0].searchParam[11].type == "token"
    assert inst.rest[0].resource[0].type == "DataElement"
    assert inst.rest[0].resource[1].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[1].interaction[0].documentation
        == "Allows discovery of existing value sets for use in authoring data elements"
    )
    assert (
        inst.rest[0].resource[1].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[1].interaction[1].documentation
        == "Allows retrieval of a specific value set referenced within a data element"
    )
    assert (
        inst.rest[0].resource[1].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[2].code == "vread"
    assert (
        inst.rest[0].resource[1].interaction[2].documentation
        == "Allows retrieval of a historical version of a value set as referenced within a data element"
    )
    assert (
        inst.rest[0].resource[1].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[3].code == "history-instance"
    assert (
        inst.rest[0].resource[1].interaction[3].documentation
        == "Allows review of changes to a value set over time"
    )
    assert (
        inst.rest[0].resource[1].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[4].code == "create"
    assert (
        inst.rest[0].resource[1].interaction[4].documentation
        == "Allows definition of a new value set used by one or more data elements"
    )
    assert (
        inst.rest[0].resource[1].interaction[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[5].code == "update"
    assert (
        inst.rest[0].resource[1].interaction[5].documentation
        == "Allows existing value sets referenced by one or more data elements to be maintained"
    )
    assert (
        inst.rest[0].resource[1].interaction[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[6].code == "validate"
    assert (
        inst.rest[0].resource[1].interaction[6].documentation
        == "Allows verification that a value set is valid prior to submission - useful for some workflows."
    )
    assert (
        inst.rest[0].resource[1].interaction[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[6].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].interaction[7].code == "delete"
    assert (
        inst.rest[0].resource[1].interaction[7].documentation
        == "Not all servers will support deletion of value sets.  Status change to 'retired' will be more typical, though deletion of draft value sets may keep repositories cleaner."
    )
    assert (
        inst.rest[0].resource[1].interaction[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[7].extension[0].valueCode == "MAY"
    assert (
        inst.rest[0].resource[1].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/valueset-sdc"
    )
    assert inst.rest[0].resource[1].searchInclude[0] == "ValueSet.compose.import"
    assert (
        inst.rest[0].resource[1].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#code"
    )
    assert (
        inst.rest[0].resource[1].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[0].name == "code"
    assert inst.rest[0].resource[1].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#date"
    )
    assert (
        inst.rest[0].resource[1].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[1].name == "date"
    assert inst.rest[0].resource[1].searchParam[1].type == "date"
    assert (
        inst.rest[0].resource[1].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#description"
    )
    assert (
        inst.rest[0].resource[1].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[2].name == "description"
    assert inst.rest[0].resource[1].searchParam[2].type == "string"
    assert (
        inst.rest[0].resource[1].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#identifier"
    )
    assert (
        inst.rest[0].resource[1].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[3].name == "identifier"
    assert inst.rest[0].resource[1].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#name"
    )
    assert (
        inst.rest[0].resource[1].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[4].name == "name"
    assert inst.rest[0].resource[1].searchParam[4].type == "string"
    assert (
        inst.rest[0].resource[1].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#publisher"
    )
    assert (
        inst.rest[0].resource[1].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[5].name == "publisher"
    assert inst.rest[0].resource[1].searchParam[5].type == "string"
    assert (
        inst.rest[0].resource[1].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#reference"
    )
    assert (
        inst.rest[0].resource[1].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[6].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[6].name == "reference"
    assert inst.rest[0].resource[1].searchParam[6].type == "string"
    assert (
        inst.rest[0].resource[1].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#status"
    )
    assert (
        inst.rest[0].resource[1].searchParam[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[7].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[7].name == "status"
    assert inst.rest[0].resource[1].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#system"
    )
    assert (
        inst.rest[0].resource[1].searchParam[8].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[8].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[8].name == "system"
    assert inst.rest[0].resource[1].searchParam[8].type == "string"
    assert (
        inst.rest[0].resource[1].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#version"
    )
    assert (
        inst.rest[0].resource[1].searchParam[9].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[9].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[9].name == "version"
    assert inst.rest[0].resource[1].searchParam[9].type == "string"
    assert inst.rest[0].resource[1].type == "ValueSet"
    assert (
        inst.rest[0].security.description
        == "Implementations must meet the general security requirements documented in the [[sdc-security|SDC implementation guide]]."
    )
    assert inst.status == "draft"
    assert inst.text.status == "generated"


def test_Conformance_10(base_settings):
    filename = (
        base_settings["unittest_data_dir"]
        / "conformance-sdc-form-archiver.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_10(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_10(inst2)


def impl_Conformance_10(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert (
        inst.contact[0].telecom[0].value
        == "http://wiki.siframework.org/Structured+Data+Capture+Initiative"
    )
    assert inst.date == parse_date("2015-09-03")
    assert (
        inst.description
        == "This profile defines the expected capabilities of the ''SDC Form Archiver'' role when conforming to the S&I Framework's [[sdc.html|Structured Data Capture FHIR implementation guide]].  This role is responsible for persisting (archiving) completed or partially completed forms ([[QuestionnaireResponse]] resource instances).  These instances may be submitted individually or in a bundle together with [[Provenance]] information providing details about the completion of the questionnaire response.  In some cases [[Binary]] or [[DocumentReference]] resources might also be submitted to convey source information used in the population of the questionnaire response.<br>The focus of this role is on consuming form instances.  Examples might be applications accepting insurance coverage forms, research forms, etc.  There is no expectation that submitted form data is subsequently made available for retrieval (at least not in the same format)."
    )
    assert inst.fhirVersion == "1.0.2"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-sdc-form-archiver"
    assert inst.kind == "requirements"
    assert inst.name == "SDC Form Archiver"
    assert inst.publisher == "U.S. Office of the National Coordinator (ONC)"
    assert (
        inst.rest[0].documentation
        == "The [[QuestionnaireResponse]] may be sent as a single instance or as a FHIR [[Bundle]] also containing [[Provenance]] resources providing details on the sources of information.  A Bundle submission might also include [[Binary]] and/or [[DocumentReference]] instances referring to the data used to populate the form.  A Form Archiver must support persisting, searching and retrieving those resources."
    )
    assert inst.rest[0].interaction[0].code == "transaction"
    assert (
        inst.rest[0].interaction[0].documentation
        == "Allows submission of a [[QuestionnaireResponse]] together with [[Provenance]] and other supporting resources as a single unit of work."
    )
    assert (
        inst.rest[0].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].mode == "client"
    assert inst.rest[0].resource[0].interaction[0].code == "create"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows archiving (storing) a completed or partially-completed form"
    )
    assert (
        inst.rest[0].resource[0].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[1].code == "update"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Allows updating a previously archived form.  (Systems may place rules on who can update forms and under what circumstances)."
    )
    assert (
        inst.rest[0].resource[0].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].interaction[2].code == "delete"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Allows removal of an archived form from a repository.  Note that the removal may be logical rather than physical. Some systems may have rules for who can remove a submitted response and under what circumstances."
    )
    assert (
        inst.rest[0].resource[0].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[2].extension[0].valueCode == "MAY"
    assert (
        inst.rest[0].resource[0].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/sdc-response"
    )
    assert inst.rest[0].resource[0].type == "QuestionnaireResponse"
    assert inst.rest[0].resource[1].interaction[0].code == "create"
    assert (
        inst.rest[0].resource[1].interaction[0].documentation
        == "Allows storage of a binary (generally containing information used in the completion of a [[QuestionnaireResponse]]).  The data might be in a variety of forms."
    )
    assert (
        inst.rest[0].resource[1].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].interaction[1].code == "update"
    assert (
        inst.rest[0].resource[1].interaction[1].documentation
        == "Allows updating a previously submitted binary data.  (Systems may place rules on who can update binary data and under what circumstances)."
    )
    assert (
        inst.rest[0].resource[1].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[1].extension[0].valueCode == "MAY"
    assert inst.rest[0].resource[1].interaction[2].code == "delete"
    assert (
        inst.rest[0].resource[1].interaction[2].documentation
        == "Allows removal of binary data from a repository.  Note that the removal may be logical rather than physical. Some systems may have rules for who can remove binary data and under what circumstances."
    )
    assert (
        inst.rest[0].resource[1].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[2].extension[0].valueCode == "MAY"
    assert inst.rest[0].resource[1].type == "Binary"
    assert inst.rest[0].resource[2].interaction[0].code == "create"
    assert (
        inst.rest[0].resource[2].interaction[0].documentation
        == "Allows storage of a document reference (generally containing information used in the completion of a [[QuestionnaireResponse]])."
    )
    assert (
        inst.rest[0].resource[2].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].interaction[1].code == "update"
    assert (
        inst.rest[0].resource[2].interaction[1].documentation
        == "Allows updating a previously submitted document reference.  (Systems may place rules on who can update document references and under what circumstances)."
    )
    assert (
        inst.rest[0].resource[2].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[1].extension[0].valueCode == "MAY"
    assert inst.rest[0].resource[2].interaction[2].code == "delete"
    assert (
        inst.rest[0].resource[2].interaction[2].documentation
        == "Allows removal of document references from a repository.  Note that the removal may be logical rather than physical. Some systems may have rules for who can remove document references and under what circumstances."
    )
    assert (
        inst.rest[0].resource[2].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[2].extension[0].valueCode == "MAY"
    assert inst.rest[0].resource[2].type == "DocumentReference"
    assert inst.rest[0].resource[3].interaction[0].code == "create"
    assert (
        inst.rest[0].resource[3].interaction[0].documentation
        == "Allows submitting a Provenance record associated with a particular [[QuestionnaireResponse]]."
    )
    assert (
        inst.rest[0].resource[3].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[3].type == "Provenance"
    assert (
        inst.rest[0].security.description
        == "Implementations must meet the general security requirements documented in the [[sdc-security|SDC implementation guide]]."
    )
    assert inst.status == "draft"
    assert inst.text.status == "generated"


def test_Conformance_11(base_settings):
    filename = (
        base_settings["unittest_data_dir"]
        / "conformance-sdc-form-designer.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_11(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_11(inst2)


def impl_Conformance_11(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert (
        inst.contact[0].telecom[0].value
        == "http://wiki.siframework.org/Structured+Data+Capture+Initiative"
    )
    assert inst.date == parse_date("2014-07-06")
    assert (
        inst.description
        == "This profile defines the expected capabilities of the ''SDC Form Designer'' role when conforming to the S&I Framework's [[sdc|Structured Data Capture FHIR implementation guide]].  This role is responsible for defining forms ([[Questionnaire]] resource instances) that include references to [[DataElement]] resouces which define the meaning of particular questions and can be used to aid in pre-populating and auto-populating forms."
    )
    assert inst.fhirVersion == "1.0.2"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-sdc-form-designer"
    assert inst.kind == "requirements"
    assert inst.name == "SDC Form Designer"
    assert inst.publisher == "U.S. Office of the National Coordinator (ONC)"
    assert (
        inst.rest[0].documentation
        == "The [[Questionnaire]] resource is used to create and maintain SDC-compliant forms.  The [[DataElement]] resource is used to look-up existing data elements that can be referenced in forms.  Optionally, [[DataElement]]s can also be created and maintained in conjunction with form editing.  This is an optional feature as not all environments will provide support for data element definitions from form authors.  The [[ValueSet]] resource is used to capture allowed values for questions that are to be answered from a pre-defined list of values.  For some forms, some or all of the referenced value sets will be handled as 'contained' resources, meaning the value set exists only in the context of the [[Questionnaire]] and cannot be referenced or maintained without also updating the form.  However, systems should support value set re-use across questionnaires.  (Version-specific referencing can be used to avoid value sets from changing independent of the referencing [[Questionnaire]].)"
    )
    assert inst.rest[0].mode == "client"
    assert inst.rest[0].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows discovery of existing questionnaires for editing"
    )
    assert (
        inst.rest[0].resource[0].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific questionnaire by id"
    )
    assert (
        inst.rest[0].resource[0].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[2].code == "create"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Allows submission of a new form design"
    )
    assert (
        inst.rest[0].resource[0].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[3].code == "update"
    assert (
        inst.rest[0].resource[0].interaction[3].documentation
        == "Allows revision of an existing form design.  Note that certain types of updates may necessitate retiring the existing form and defining a new one."
    )
    assert (
        inst.rest[0].resource[0].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[0].interaction[4].documentation
        == "Allows review of changes to questionnaire over time"
    )
    assert (
        inst.rest[0].resource[0].interaction[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].interaction[5].code == "vread"
    assert (
        inst.rest[0].resource[0].interaction[5].documentation
        == "Allows retrieval of a historical version of a questionnaire"
    )
    assert (
        inst.rest[0].resource[0].interaction[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[5].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].interaction[6].code == "delete"
    assert (
        inst.rest[0].resource[0].interaction[6].documentation
        == "Not all servers will support deletion of forms.  Status change to 'retired' will be more typical, though deletion of draft profiles may keep repositories cleaner."
    )
    assert (
        inst.rest[0].resource[0].interaction[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[6].extension[0].valueCode == "MAY"
    assert inst.rest[0].resource[0].interaction[7].code == "validate"
    assert (
        inst.rest[0].resource[0].interaction[7].documentation
        == "Allows verification that form is valid prior to submission - useful for some workflows."
    )
    assert (
        inst.rest[0].resource[0].interaction[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[7].extension[0].valueCode == "MAY"
    assert (
        inst.rest[0].resource[0].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/sdc-questionnaire"
    )
    assert inst.rest[0].resource[0].type == "Questionnaire"
    assert inst.rest[0].resource[1].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[1].interaction[0].documentation
        == "Allows discovery of existing value sets for use by questions in a form"
    )
    assert (
        inst.rest[0].resource[1].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[1].interaction[1].documentation
        == "Allows retrieval of a specific value set by id"
    )
    assert (
        inst.rest[0].resource[1].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[2].code == "create"
    assert (
        inst.rest[0].resource[1].interaction[2].documentation
        == "Allows definition of a new value set used by one or more questions"
    )
    assert (
        inst.rest[0].resource[1].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[3].code == "update"
    assert (
        inst.rest[0].resource[1].interaction[3].documentation
        == "Allows existing value sets referenced by a form to be maintained.  Note that certain types of updates may necessitate retiring the existing value set and defining a new one."
    )
    assert (
        inst.rest[0].resource[1].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[1].interaction[4].documentation
        == "Allows review of changes to a value set over time"
    )
    assert (
        inst.rest[0].resource[1].interaction[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].interaction[5].code == "vread"
    assert (
        inst.rest[0].resource[1].interaction[5].documentation
        == "Allows retrieval of a historical version of a value set"
    )
    assert (
        inst.rest[0].resource[1].interaction[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[5].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].interaction[6].code == "delete"
    assert (
        inst.rest[0].resource[1].interaction[6].documentation
        == "Not all servers will support deletion of value sets.  Status change to 'retired' will be more typical, though deletion of draft value sets may keep repositories cleaner."
    )
    assert (
        inst.rest[0].resource[1].interaction[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[6].extension[0].valueCode == "MAY"
    assert inst.rest[0].resource[1].interaction[7].code == "validate"
    assert (
        inst.rest[0].resource[1].interaction[7].documentation
        == "Allows verification that a value set is valid prior to submission - useful for some workflows."
    )
    assert (
        inst.rest[0].resource[1].interaction[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[7].extension[0].valueCode == "MAY"
    assert (
        inst.rest[0].resource[1].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/sdc-valueset"
    )
    assert inst.rest[0].resource[1].type == "ValueSet"
    assert inst.rest[0].resource[2].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[2].interaction[0].documentation
        == "Allows a user to search for existing data elements for re-use in a form design"
    )
    assert (
        inst.rest[0].resource[2].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[2].interaction[1].documentation
        == "Allows retrieval of data elements referenced in an existing form design"
    )
    assert (
        inst.rest[0].resource[2].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].interaction[2].code == "vread"
    assert (
        inst.rest[0].resource[2].interaction[2].documentation
        == "Allows viewing of specific versions of a data element if the form references a specific version"
    )
    assert (
        inst.rest[0].resource[2].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[2].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].interaction[3].code == "history-instance"
    assert (
        inst.rest[0].resource[2].interaction[3].documentation
        == "Allows review of changes to a data element over time"
    )
    assert (
        inst.rest[0].resource[2].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[3].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].interaction[4].code == "create"
    assert (
        inst.rest[0].resource[2].interaction[4].documentation
        == "Allows defining new data elements for subsequent re-use while creating and editing forms"
    )
    assert (
        inst.rest[0].resource[2].interaction[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[4].extension[0].valueCode == "MAY"
    assert inst.rest[0].resource[2].interaction[5].code == "update"
    assert (
        inst.rest[0].resource[2].interaction[5].documentation
        == "Allows maintaining data elements while creating and editing forms.  Note that certain types of updates may necessitate retiring the existing data element and defining a new one."
    )
    assert (
        inst.rest[0].resource[2].interaction[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[5].extension[0].valueCode == "MAY"
    assert inst.rest[0].resource[2].interaction[6].code == "delete"
    assert (
        inst.rest[0].resource[2].interaction[6].documentation
        == "Allows maintaining data elements while creating and editing forms.  Note that not all servers will support deleting data elements."
    )
    assert (
        inst.rest[0].resource[2].interaction[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[6].extension[0].valueCode == "MAY"
    assert inst.rest[0].resource[2].interaction[7].code == "validate"
    assert (
        inst.rest[0].resource[2].interaction[7].documentation
        == "Allows maintaining data elements while creating and editing forms - user can check that proposed data element is valid prior to submission"
    )
    assert (
        inst.rest[0].resource[2].interaction[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[7].extension[0].valueCode == "MAY"
    assert (
        inst.rest[0].resource[2].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/sdc-element"
    )
    assert inst.rest[0].resource[2].type == "DataElement"
    assert (
        inst.rest[0].security.description
        == "Implementations must meet the general security requirements documented in the [[sdc-security|SDC implementation guide]]."
    )
    assert inst.status == "draft"
    assert inst.text.status == "generated"


def test_Conformance_12(base_settings):
    filename = (
        base_settings["unittest_data_dir"]
        / "conformance-sdc-form-filler.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_12(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_12(inst2)


def impl_Conformance_12(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert (
        inst.contact[0].telecom[0].value
        == "http://wiki.siframework.org/Structured+Data+Capture+Initiative"
    )
    assert inst.date == parse_date("2014-07-06")
    assert (
        inst.description
        == "This profile defines the expected capabilities of the ''SDC Form Filler'' role when conforming to the S&I Framework's [[sdc|Structured Data Capture FHIR implementation guide]].  This role is responsible for retrieving pre-defined forms, requesting pre-population of forms and/or auto-populating forms, guiding the user through verifying populated data and submitting completed or partially-completed forms.<br/>Note that Form Fillers may also take on the role of [[conformance-sdc-form-archiver|Form Archiver]] if they have a requirement to retain the completed version of a form (and potentially the source data that was used to complete it)."
    )
    assert inst.fhirVersion == "1.0.2"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-sdc-form-filler"
    assert inst.kind == "requirements"
    assert inst.name == "SDC Form Filler"
    assert inst.publisher == "U.S. Office of the National Coordinator (ONC)"
    assert (
        inst.rest[0].documentation
        == "The [[Questionnaire]] and [[ValueSet]] resources are retrieved to allow the system to guide the user through the entry process.  The [[Binary]] and [[DocumentReference]] resources allow the system to find existing clinical documents that can be within the pre-population process.  (Support for retrieval operations on these resources is optional as the relevant CDA or FHIR structures may also be directly generated by the ''Form Filler'' itself.)  Finally, the [[QuestionnaireResponse]] resource is used to record the populated form."
    )
    assert inst.rest[0].mode == "client"
    assert inst.rest[0].operation[0].definition.display == "Populate Questionnaire"
    assert (
        inst.rest[0].operation[0].definition.reference
        == "http://hl7.org/fhir/OperationDefinition#questionnaire-populate"
    )
    assert (
        inst.rest[0].operation[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].operation[0].extension[0].valueCode == "MAY"
    assert inst.rest[0].operation[0].name == "populate"
    assert inst.rest[0].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows discovery of existing questionnaires to be completed"
    )
    assert (
        inst.rest[0].resource[0].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific questionnaire by id.  Allows systems to maintain a 'favorites' list of forms and retrieve them by id."
    )
    assert (
        inst.rest[0].resource[0].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Allows review of changes made to a questionnaire over time.  Of interest to some systems, but probably not most."
    )
    assert (
        inst.rest[0].resource[0].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[2].extension[0].valueCode == "MAY"
    assert inst.rest[0].resource[0].interaction[3].code == "vread"
    assert (
        inst.rest[0].resource[0].interaction[3].documentation
        == "Allows retrieval of a historical version of a questionnaire.  Most systems will make use of the current version only."
    )
    assert (
        inst.rest[0].resource[0].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[3].extension[0].valueCode == "MAY"
    assert (
        inst.rest[0].resource[0].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/sdc-questionnaire"
    )
    assert inst.rest[0].resource[0].type == "Questionnaire"
    assert inst.rest[0].resource[1].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[1].interaction[0].documentation
        == "Allows retrieval of a specific value set by id (as referenced in a Questionnaire)"
    )
    assert (
        inst.rest[0].resource[1].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[1].interaction[1].documentation
        == "Allows retrieval of a specific version of a value set (as referenced in a Questionnaire)"
    )
    assert (
        inst.rest[0].resource[1].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[1].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].interaction[2].code == "history-instance"
    assert (
        inst.rest[0].resource[1].interaction[2].documentation
        == "Allows review of changes to a value set over time.  Of interest to some systems, but probably not most."
    )
    assert (
        inst.rest[0].resource[1].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[2].extension[0].valueCode == "MAY"
    assert (
        inst.rest[0].resource[1].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/sdc-valueset"
    )
    assert inst.rest[0].resource[1].type == "ValueSet"
    assert inst.rest[0].resource[2].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[2].interaction[0].documentation
        == "Allows a user to search for existing completed or partially-completed forms.  Generally used to find partially-completed forms for update."
    )
    assert (
        inst.rest[0].resource[2].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].interaction[1].code == "create"
    assert (
        inst.rest[0].resource[2].interaction[1].documentation
        == "Allows recording a completed or partially-completed form"
    )
    assert (
        inst.rest[0].resource[2].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[2].interaction[2].documentation
        == "Allows updating an existing completed or partially-completed form.  (Systems may place rules on who can update forms and under what circumstances.)"
    )
    assert (
        inst.rest[0].resource[2].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[2].interaction[3].documentation
        == "Allows removal of a completed form from a repository.  Note that the removal may be logical rather than physical.  Some systems may have rules for who can remove a completed form and under what circumstances."
    )
    assert (
        inst.rest[0].resource[2].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[2].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[2].interaction[4].documentation
        == "Allows review of prior versions of an answer set - allows reversion to previously recorded versions"
    )
    assert (
        inst.rest[0].resource[2].interaction[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[4].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[2].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[2].interaction[5].documentation
        == "Allows checking an answer set for validity against submission rules without persisting any data"
    )
    assert (
        inst.rest[0].resource[2].interaction[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[2].interaction[5].extension[0].valueCode == "SHOULD"
    assert (
        inst.rest[0].resource[2].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/sdc-element"
    )
    assert inst.rest[0].resource[2].type == "QuestionnaireResponse"
    assert inst.rest[0].resource[3].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[3].interaction[0].documentation
        == "Allows discovery of existing documents that may be included in a form pre-population request"
    )
    assert (
        inst.rest[0].resource[3].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[3].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[3].type == "DocumentReference"
    assert inst.rest[0].resource[4].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[4].interaction[0].documentation
        == "Allows retrieval of a specific binary (as pointed to by a DocumentReference)"
    )
    assert (
        inst.rest[0].resource[4].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].interaction[0].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[4].interaction[1].code == "vread"
    assert (
        inst.rest[0].resource[4].interaction[1].documentation
        == "Allows retrieval of a historical version of a binary.  In general, the most recent version would be appropriate, but some may prefer to use the specific version referenced by a DocumentReference."
    )
    assert (
        inst.rest[0].resource[4].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[4].interaction[1].extension[0].valueCode == "MAY"
    assert inst.rest[0].resource[4].type == "Binary"
    assert (
        inst.rest[0].security.description
        == "Implementations must meet the general security requirements documented in the [[sdc-security|SDC implementation guide]]."
    )
    assert inst.status == "draft"
    assert inst.text.status == "generated"


def test_Conformance_13(base_settings):
    filename = (
        base_settings["unittest_data_dir"]
        / "conformance-sdc-form-manager.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_13(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_13(inst2)


def impl_Conformance_13(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert (
        inst.contact[0].telecom[0].value
        == "http://wiki.siframework.org/Structured+Data+Capture+Initiative"
    )
    assert inst.date == parse_date("2014-07-06")
    assert (
        inst.description
        == "This profile defines the expected capabilities of the ''SDC Form Manager'' role when conforming to the S&I Framework's [[sdc.html|Structured Data Capture FHIR implementation guide]].  This role is responsible for maintaining a repository of form definitions and also of performing pre-population of form data."
    )
    assert inst.fhirVersion == "1.0.2"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-sdc-form-manager"
    assert inst.kind == "requirements"
    assert inst.name == "SDC Form Manager"
    assert inst.publisher == "U.S. Office of the National Coordinator (ONC)"
    assert (
        inst.rest[0].documentation
        == "The primary focus of the repository is the definition of [[Questionnaires]].  However, [[ValueSet]]s must also be supported to allow definition of coded data elements.  Some data elements will choose to maintain value sets as 'contained' resources, meaning the value set exists only in the context of the data element and cannot be referenced or maintained without also updating the data element.  However, systems should support value set re-use across data elements.  (Version-specific referencing can be used to avoid value sets from changing independent of the referencing [[Questionnaire]].)"
    )
    assert inst.rest[0].mode == "server"
    assert inst.rest[0].operation[0].definition.display == "Populate Questionnaire"
    assert (
        inst.rest[0].operation[0].definition.reference
        == "http://hl7.org/fhir/OperationDefinition#questionnaire-populate"
    )
    assert (
        inst.rest[0].operation[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].operation[0].extension[0].valueCode == "MAY"
    assert inst.rest[0].operation[0].name == "populate"
    assert inst.rest[0].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows a user to search for existing forms"
    )
    assert (
        inst.rest[0].resource[0].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific known form"
    )
    assert (
        inst.rest[0].resource[0].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[2].code == "vread"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Allows retrieval of a specific version of a form"
    )
    assert (
        inst.rest[0].resource[0].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[3].code == "history-instance"
    assert (
        inst.rest[0].resource[0].interaction[3].documentation
        == "Allows review of changes to a form over time"
    )
    assert (
        inst.rest[0].resource[0].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[4].code == "create"
    assert (
        inst.rest[0].resource[0].interaction[4].documentation
        == "Allows defining a new form.  Repositories requiring curation of submitted forms may require all new data elements to have a status of 'draft'."
    )
    assert (
        inst.rest[0].resource[0].interaction[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[5].code == "update"
    assert (
        inst.rest[0].resource[0].interaction[5].documentation
        == "Allows an existing form to be updated.  Servers may choose to prohibit certain types of edits, instead requiring the creation of a new questionnaire (and potentially the retiring of the existing questionnaire).  Servers may also limit who can change particular forms."
    )
    assert (
        inst.rest[0].resource[0].interaction[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[6].code == "validate"
    assert (
        inst.rest[0].resource[0].interaction[6].documentation
        == "SHOULD. Allows a client to verify whether a particular new form or revision of an existing form would be accepted based on validation and other business rules.  Useful for some workflows"
    )
    assert (
        inst.rest[0].resource[0].interaction[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[6].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].interaction[7].code == "delete"
    assert (
        inst.rest[0].resource[0].interaction[7].documentation
        == "Allows removal of an existing form.  Servers may choose to not support deletions and instead require that the form's status be changed to 'retired'.  Other systems support deletions but limit them to forms meeting certain requirements.  E.g. only forms with a status of draft or only forms that have been retired for at least two years, etc."
    )
    assert (
        inst.rest[0].resource[0].interaction[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[7].extension[0].valueCode == "MAY"
    assert (
        inst.rest[0].resource[0].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/sdc-questionnaire"
    )
    assert (
        inst.rest[0].resource[0].searchInclude[0]
        == "Questionnaire.group.question.options"
    )
    assert (
        inst.rest[0].resource[0].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire#code"
    )
    assert (
        inst.rest[0].resource[0].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[0].name == "code"
    assert inst.rest[0].resource[0].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire#date"
    )
    assert (
        inst.rest[0].resource[0].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[1].name == "date"
    assert inst.rest[0].resource[0].searchParam[1].type == "date"
    assert (
        inst.rest[0].resource[0].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire#identifier"
    )
    assert (
        inst.rest[0].resource[0].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[2].name == "identifier"
    assert inst.rest[0].resource[0].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire#publisher"
    )
    assert (
        inst.rest[0].resource[0].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[3].name == "publisher"
    assert inst.rest[0].resource[0].searchParam[3].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire#status"
    )
    assert (
        inst.rest[0].resource[0].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[4].name == "status"
    assert inst.rest[0].resource[0].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire#title"
    )
    assert (
        inst.rest[0].resource[0].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[5].name == "title"
    assert inst.rest[0].resource[0].searchParam[5].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire#version"
    )
    assert (
        inst.rest[0].resource[0].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[6].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[6].name == "version"
    assert inst.rest[0].resource[0].searchParam[6].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaire-deReference"
    )
    assert (
        inst.rest[0].resource[0].searchParam[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[7].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[7].name == "deReference"
    assert inst.rest[0].resource[0].searchParam[7].type == "token"
    assert inst.rest[0].resource[0].type == "Questionnaire"
    assert inst.rest[0].resource[1].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[1].interaction[0].documentation
        == "Allows discovery of existing value sets for use in authoring questionnaires"
    )
    assert (
        inst.rest[0].resource[1].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[1].interaction[1].documentation
        == "Allows retrieval of a specific value set referenced within a questionnaire"
    )
    assert (
        inst.rest[0].resource[1].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[2].code == "vread"
    assert (
        inst.rest[0].resource[1].interaction[2].documentation
        == "Allows retrieval of a historical version of a value set as referenced within a questionnaire"
    )
    assert (
        inst.rest[0].resource[1].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[3].code == "history-instance"
    assert (
        inst.rest[0].resource[1].interaction[3].documentation
        == "Allows review of changes to a value set over time"
    )
    assert (
        inst.rest[0].resource[1].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[4].code == "create"
    assert (
        inst.rest[0].resource[1].interaction[4].documentation
        == "Allows definition of a new value set used by one or more questionnaires"
    )
    assert (
        inst.rest[0].resource[1].interaction[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[5].code == "update"
    assert (
        inst.rest[0].resource[1].interaction[5].documentation
        == "Allows existing value sets referenced by one or more questionnaires to be maintained"
    )
    assert (
        inst.rest[0].resource[1].interaction[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].interaction[6].code == "validate"
    assert (
        inst.rest[0].resource[1].interaction[6].documentation
        == "Allows verification that a value set is valid prior to submission - useful for some workflows."
    )
    assert (
        inst.rest[0].resource[1].interaction[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[6].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[1].interaction[7].code == "delete"
    assert (
        inst.rest[0].resource[1].interaction[7].documentation
        == "Not all servers will support deletion of value sets.  Status change to 'retired' will be more typical, though deletion of draft value sets may keep repositories cleaner."
    )
    assert (
        inst.rest[0].resource[1].interaction[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].interaction[7].extension[0].valueCode == "MAY"
    assert (
        inst.rest[0].resource[1].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/sdc-valueset"
    )
    assert inst.rest[0].resource[1].searchInclude[0] == "ValueSet.compose.import"
    assert (
        inst.rest[0].resource[1].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#code"
    )
    assert (
        inst.rest[0].resource[1].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[0].name == "code"
    assert inst.rest[0].resource[1].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#date"
    )
    assert (
        inst.rest[0].resource[1].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[1].name == "date"
    assert inst.rest[0].resource[1].searchParam[1].type == "date"
    assert (
        inst.rest[0].resource[1].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#description"
    )
    assert (
        inst.rest[0].resource[1].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[2].name == "description"
    assert inst.rest[0].resource[1].searchParam[2].type == "string"
    assert (
        inst.rest[0].resource[1].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#identifier"
    )
    assert (
        inst.rest[0].resource[1].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[3].name == "identifier"
    assert inst.rest[0].resource[1].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#name"
    )
    assert (
        inst.rest[0].resource[1].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[4].name == "name"
    assert inst.rest[0].resource[1].searchParam[4].type == "string"
    assert (
        inst.rest[0].resource[1].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#publisher"
    )
    assert (
        inst.rest[0].resource[1].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[5].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[5].name == "publisher"
    assert inst.rest[0].resource[1].searchParam[5].type == "string"
    assert (
        inst.rest[0].resource[1].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#reference"
    )
    assert (
        inst.rest[0].resource[1].searchParam[6].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[6].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[6].name == "reference"
    assert inst.rest[0].resource[1].searchParam[6].type == "string"
    assert (
        inst.rest[0].resource[1].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#status"
    )
    assert (
        inst.rest[0].resource[1].searchParam[7].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[7].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[7].name == "status"
    assert inst.rest[0].resource[1].searchParam[7].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[8].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#system"
    )
    assert (
        inst.rest[0].resource[1].searchParam[8].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[8].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[8].name == "system"
    assert inst.rest[0].resource[1].searchParam[8].type == "string"
    assert (
        inst.rest[0].resource[1].searchParam[9].definition
        == "http://hl7.org/fhir/SearchParameter/valueset#version"
    )
    assert (
        inst.rest[0].resource[1].searchParam[9].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[1].searchParam[9].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[1].searchParam[9].name == "version"
    assert inst.rest[0].resource[1].searchParam[9].type == "string"
    assert inst.rest[0].resource[1].type == "ValueSet"
    assert (
        inst.rest[0].security.description
        == "Implementations must meet the general security requirements documented in the [[sdc-security|SDC implementation guide]]."
    )
    assert inst.status == "draft"
    assert inst.text.status == "generated"


def test_Conformance_14(base_settings):
    filename = (
        base_settings["unittest_data_dir"]
        / "conformance-sdc-form-receiver.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_14(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_14(inst2)


def impl_Conformance_14(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert (
        inst.contact[0].telecom[0].value
        == "http://wiki.siframework.org/Structured+Data+Capture+Initiative"
    )
    assert inst.date == parse_date("2014-07-06")
    assert (
        inst.description
        == "This profile defines the expected capabilities of the ''SDC Form Receiver'' role when conforming to the S&I Framework's [[sdc|Structured Data Capture FHIR implementation guide]].  This role is responsible for storing and returning completed and partially-completed forms."
    )
    assert inst.fhirVersion == "1.0.2"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-sdc-form-receiver"
    assert inst.kind == "requirements"
    assert inst.name == "SDC Form Receiver"
    assert inst.publisher == "U.S. Office of the National Coordinator (ONC)"
    assert inst.rest[0].mode == "server"
    assert inst.rest[0].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows a user to search for existing completed or partially-completed forms.  Generally used to find partially-completed forms for update."
    )
    assert (
        inst.rest[0].resource[0].interaction[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[1].code == "create"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Allows recording a completed or partially-completed form"
    )
    assert (
        inst.rest[0].resource[0].interaction[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[2].code == "update"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Allows updating an existing completed or partially-completed form.  (Systems may place rules on who can update forms and under what circumstances.)"
    )
    assert (
        inst.rest[0].resource[0].interaction[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[3].code == "delete"
    assert (
        inst.rest[0].resource[0].interaction[3].documentation
        == "Allows removal of a completed form from a repository.  Note that the removal may be logical rather than physical.  Some systems may have rules for who can remove a completed form and under what circumstances."
    )
    assert (
        inst.rest[0].resource[0].interaction[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[4].code == "history-instance"
    assert (
        inst.rest[0].resource[0].interaction[4].documentation
        == "Allows review of prior versions of an answer set - allows reversion to previously recorded versions"
    )
    assert (
        inst.rest[0].resource[0].interaction[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].interaction[5].code == "validate"
    assert (
        inst.rest[0].resource[0].interaction[5].documentation
        == "Allows checking an answer set for validity against submission rules without persisting any data"
    )
    assert (
        inst.rest[0].resource[0].interaction[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].interaction[5].extension[0].valueCode == "SHALL"
    assert (
        inst.rest[0].resource[0].profile.reference
        == "http://hl7.org/fhir/StructureDefinition/sdc-element"
    )
    assert (
        inst.rest[0].resource[0].searchInclude[0]
        == "QuestionnaireResponse.questionnaire"
    )
    assert (
        inst.rest[0].resource[0].searchInclude[1]
        == "Questionnaire.group.question.options"
    )
    assert (
        inst.rest[0].resource[0].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse#author"
    )
    assert (
        inst.rest[0].resource[0].searchParam[0].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[0].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[0].name == "author"
    assert inst.rest[0].resource[0].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse#authored"
    )
    assert (
        inst.rest[0].resource[0].searchParam[1].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[1].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[1].name == "authored"
    assert inst.rest[0].resource[0].searchParam[1].type == "date"
    assert (
        inst.rest[0].resource[0].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse#questionnaire"
    )
    assert (
        inst.rest[0].resource[0].searchParam[2].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[2].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[2].name == "questionnaire"
    assert inst.rest[0].resource[0].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse#status"
    )
    assert (
        inst.rest[0].resource[0].searchParam[3].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[3].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[3].name == "status"
    assert inst.rest[0].resource[0].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse#subject"
    )
    assert (
        inst.rest[0].resource[0].searchParam[4].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[4].extension[0].valueCode == "SHALL"
    assert inst.rest[0].resource[0].searchParam[4].name == "subject"
    assert inst.rest[0].resource[0].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/questionnaireresponse#encounter"
    )
    assert (
        inst.rest[0].resource[0].searchParam[5].extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-expectation"
    )
    assert inst.rest[0].resource[0].searchParam[5].extension[0].valueCode == "SHOULD"
    assert inst.rest[0].resource[0].searchParam[5].name == "encounter"
    assert inst.rest[0].resource[0].searchParam[5].type == "token"
    assert inst.rest[0].resource[0].type == "QuestionnaireResponse"
    assert (
        inst.rest[0].security.description
        == "Implementations must meet the general security requirements documented in the [[sdc-security|SDC implementation guide]]."
    )
    assert inst.status == "draft"
    assert inst.text.status == "generated"


def test_Conformance_15(base_settings):
    filename = (
        base_settings["unittest_data_dir"]
        / "conformance-terminology-server.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_15(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_15(inst2)


def impl_Conformance_15(inst):
    assert inst.acceptUnknown == "both"
    assert inst.contact[0].name == "FHIR Project"
    assert inst.contact[0].telecom[0].system == "other"
    assert inst.contact[0].telecom[0].value == "http://hl7.org/fhir"
    assert inst.date == parse_date("2015-07-05")
    assert (
        inst.description
        == "Basic conformance statement for a Terminology Server. A server can support more fucntionality than defined here, but this is the minimum amount"
    )
    assert (
        inst.extension[0].url
        == "http://hl7.org/fhir/StructureDefinition/conformance-supported-system"
    )
    assert inst.extension[0].valueUri == "http://loinc.org"
    assert inst.fhirVersion == "1.0.2"
    assert inst.format[0] == "json"
    assert inst.format[1] == "xml"
    assert inst.id == "conformance-terminology-server"
    assert inst.kind == "capability"
    assert inst.name == "Terminology Service Conformance Statement"
    assert inst.publisher == "HL7, Inc"
    assert inst.rest[0].documentation == "RESTful Terminology Server"
    assert inst.rest[0].mode == "server"
    assert (
        inst.rest[0].operation[0].definition.reference
        == "OperationDefinition/ValueSet-expand"
    )
    assert inst.rest[0].operation[0].name == "expand"
    assert (
        inst.rest[0].operation[1].definition.reference
        == "OperationDefinition/ValueSet-lookup"
    )
    assert inst.rest[0].operation[1].name == "lookup"
    assert (
        inst.rest[0].operation[2].definition.reference
        == "OperationDefinition/ValueSet-validate-code"
    )
    assert inst.rest[0].operation[2].name == "validate-code"
    assert (
        inst.rest[0].operation[3].definition.reference
        == "OperationDefinition/ConceptMap-translate"
    )
    assert inst.rest[0].operation[3].name == "translate"
    assert (
        inst.rest[0].operation[4].definition.reference
        == "OperationDefinition/ConceptMap-closure"
    )
    assert inst.rest[0].operation[4].name == "closure"
    assert inst.rest[0].resource[0].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Read allows clients to get the logical definitions of the value sets"
    )
    assert inst.rest[0].resource[0].interaction[1].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Search allows clients to find value sets on the server"
    )
    assert inst.rest[0].resource[0].profile.reference == "StructureDefinition/ValueSet"
    assert (
        inst.rest[0].resource[0].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/ValueSet-code"
    )
    assert inst.rest[0].resource[0].searchParam[0].name == "code"
    assert inst.rest[0].resource[0].searchParam[0].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/ValueSet-date"
    )
    assert inst.rest[0].resource[0].searchParam[1].name == "date"
    assert inst.rest[0].resource[0].searchParam[1].type == "date"
    assert (
        inst.rest[0].resource[0].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/ValueSet-name"
    )
    assert inst.rest[0].resource[0].searchParam[2].name == "name"
    assert inst.rest[0].resource[0].searchParam[2].type == "string"
    assert (
        inst.rest[0].resource[0].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/ValueSet-reference"
    )
    assert inst.rest[0].resource[0].searchParam[3].name == "reference"
    assert inst.rest[0].resource[0].searchParam[3].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/ValueSet-status"
    )
    assert inst.rest[0].resource[0].searchParam[4].name == "status"
    assert inst.rest[0].resource[0].searchParam[4].type == "token"
    assert (
        inst.rest[0].resource[0].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/ValueSet-system"
    )
    assert inst.rest[0].resource[0].searchParam[5].name == "system"
    assert inst.rest[0].resource[0].searchParam[5].type == "uri"
    assert (
        inst.rest[0].resource[0].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/ValueSet-url"
    )
    assert inst.rest[0].resource[0].searchParam[6].name == "url"
    assert inst.rest[0].resource[0].searchParam[6].type == "uri"
    assert (
        inst.rest[0].resource[0].searchParam[7].definition
        == "http://hl7.org/fhir/SearchParameter/ValueSet-version"
    )
    assert inst.rest[0].resource[0].searchParam[7].name == "version"
    assert inst.rest[0].resource[0].searchParam[7].type == "token"
    assert inst.rest[0].resource[0].type == "ValueSet"
    assert inst.rest[0].resource[1].interaction[0].code == "read"
    assert (
        inst.rest[0].resource[1].interaction[0].documentation
        == "Read allows clients to get the logical definitions of the concept maps"
    )
    assert inst.rest[0].resource[1].interaction[1].code == "search-type"
    assert (
        inst.rest[0].resource[1].interaction[1].documentation
        == "Search allows clients to find concept maps on the server"
    )
    assert (
        inst.rest[0].resource[1].profile.reference == "StructureDefinition/ConceptMap"
    )
    assert (
        inst.rest[0].resource[1].searchParam[0].definition
        == "http://hl7.org/fhir/SearchParameter/ConceptMap-date"
    )
    assert inst.rest[0].resource[1].searchParam[0].name == "date"
    assert inst.rest[0].resource[1].searchParam[0].type == "date"
    assert (
        inst.rest[0].resource[1].searchParam[1].definition
        == "http://hl7.org/fhir/SearchParameter/ConceptMap-name"
    )
    assert inst.rest[0].resource[1].searchParam[1].name == "name"
    assert inst.rest[0].resource[1].searchParam[1].type == "string"
    assert (
        inst.rest[0].resource[1].searchParam[2].definition
        == "http://hl7.org/fhir/SearchParameter/ConceptMap-status"
    )
    assert inst.rest[0].resource[1].searchParam[2].name == "status"
    assert inst.rest[0].resource[1].searchParam[2].type == "token"
    assert (
        inst.rest[0].resource[1].searchParam[3].definition
        == "http://hl7.org/fhir/SearchParameter/ConceptMap-source"
    )
    assert inst.rest[0].resource[1].searchParam[3].name == "source"
    assert inst.rest[0].resource[1].searchParam[3].type == "uri"
    assert (
        inst.rest[0].resource[1].searchParam[4].definition
        == "http://hl7.org/fhir/SearchParameter/ConceptMap-target"
    )
    assert inst.rest[0].resource[1].searchParam[4].name == "target"
    assert inst.rest[0].resource[1].searchParam[4].type == "uri"
    assert (
        inst.rest[0].resource[1].searchParam[5].definition
        == "http://hl7.org/fhir/SearchParameter/ConceptMap-url"
    )
    assert inst.rest[0].resource[1].searchParam[5].name == "url"
    assert inst.rest[0].resource[1].searchParam[5].type == "uri"
    assert (
        inst.rest[0].resource[1].searchParam[6].definition
        == "http://hl7.org/fhir/SearchParameter/ConceptMap-version"
    )
    assert inst.rest[0].resource[1].searchParam[6].name == "version"
    assert inst.rest[0].resource[1].searchParam[6].type == "token"
    assert inst.rest[0].resource[1].type == "ConceptMap"
    assert inst.rest[0].security.cors == True
    assert inst.rest[0].security.service[0].coding[0].code == "Certificates"
    assert (
        inst.rest[0].security.service[0].coding[0].system
        == "http://hl7.org/fhir/restful-security-service"
    )
    assert inst.software.name == "ACME Terminology Server"
    assert inst.status == "draft"
    assert inst.text.status == "generated"
    assert inst.url == "http://hl7.org/fhir/terminology-server"


def test_Conformance_16(base_settings):
    filename = (
        base_settings["unittest_data_dir"]
        / "conformance-uslaborder-orderer.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_16(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_16(inst2)


def impl_Conformance_16(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert inst.contact[0].telecom[0].value == "http://www.hl7.org/"
    assert inst.date == parse_date("2014-12-02")
    assert (
        inst.description
        == "This profile defines the expected capabilities of the USLabOrder Orderer actor when conforming to the [[uslaborder.html|The US Laboratory Order Implementation (USLabOrder)]].  This actor is the originator of a laboratory test order request to the laboratory (order filler) and declares conformance to RESTful FHIR and FHIR profiles defined in this guide.  The order reference one or more FHIR resources conforming to profiles outlined in the USLabOrder guide."
    )
    assert inst.fhirVersion == "1.0.0"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-uslaborder-orderer"
    assert inst.kind == "requirements"
    assert inst.name == "USLabOrder Orderer"
    assert (
        inst.publisher
        == "Published by: HL7 Orders and Observation Workgroup. Primary Author: Eric Haas  Health eData Inc"
    )
    assert (
        inst.rest[0].documentation
        == "This conformance resource assumes the USLabOrder Orderer is the server, in other words, operating in 'Pull'  or 'Push/Pull' RESTful interface.  The USLabOrder Orderer MUST support querying one or more resources outlined by the [[uslaborder|USLabOrder Guide]]. The USLabOrder Orderer MUST use all the vocabularies and value set constraints defined by the individual resource profiles used by USLabOrder. The USLabOrder Orderer MUST implement REST behavior according to the [[http|FHIR specification]] and MUST be able to handle errors gracefully from Query Responders who may not support the submitted query."
    )
    assert inst.rest[0].mode == "server"
    assert inst.rest[0].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows a user to search for existing DiagnosticOrder"
    )
    assert inst.rest[0].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific known DiagnosticOrder"
    )
    assert inst.rest[0].resource[0].interaction[2].code == "vread"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Allows retrieval of a specific version of a DiagnosticOrder"
    )
    assert inst.rest[0].resource[0].interaction[3].code == "history-instance"
    assert (
        inst.rest[0].resource[0].interaction[3].documentation
        == "Allows review of changes to a DiagnosticOrder over time"
    )
    assert inst.rest[0].resource[0].interaction[4].code == "create"
    assert (
        inst.rest[0].resource[0].interaction[4].documentation
        == "Allows defining a new DiagnosticOrder"
    )
    assert inst.rest[0].resource[0].interaction[5].code == "update"
    assert (
        inst.rest[0].resource[0].interaction[5].documentation
        == "Allows editing of an existing DiagnosticOrder.  Servers may choose to prohibit certain types of edits, instead requiring the creation of a new DiagnosticOrder (and potentially the retiring of the existing DiagnosticOrder).  Servers may also limit who can change particular DiagnosticOrder."
    )
    assert inst.rest[0].resource[0].interaction[6].code == "validate"
    assert (
        inst.rest[0].resource[0].interaction[6].documentation
        == "Allows a client to verify whether a particular new DiagnosticOrder or revision of an existing DiagnosticOrder would be accepted based on validation and other business rules.  Useful for some workflows"
    )
    assert inst.rest[0].resource[0].profile.reference == "do-uslab"
    assert (
        inst.rest[0].resource[0].searchInclude[0]
        == "DiagnosticOrder.subject, DiagnosticOrder.orderer, DiagnosticOrder.supportingInformation, DiagnosticOrder.specimen, DiagnosticOrder.uslabcc"
    )
    assert inst.rest[0].resource[0].type == "DiagnosticOrder"
    assert (
        inst.rest[0].security.description
        == "Implementations must meet the security requirements documented in the [[uslaborder|USLabOrder Guide assumptions]]."
    )
    assert (
        inst.rest[1].documentation
        == "The following conformance rules assumes the USLabOrder Orderer is the client, in other words, operating in 'Push'  RESTful interface.  The USLabOrder Orderer MUST support querying one or more resources outlined by the [[uslaborder|USLabOrder Guide]]. The USLabOrder Orderer MUST use all the vocabularies and value set constraints defined by the individual resource profiles used by USLabOrder. The USLabOrder Orderer MUST implement REST behavior according to the [[http|FHIR specification]] and MUST be able to handle errors gracefully from Query Responders who may not support the submitted query."
    )
    assert inst.rest[1].mode == "client"
    assert inst.rest[1].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[1].resource[0].interaction[0].documentation
        == "Allows a user to search for existing DiagnosticOrder"
    )
    assert inst.rest[1].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[1].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific known DiagnosticOrder"
    )
    assert inst.rest[1].resource[0].interaction[2].code == "vread"
    assert (
        inst.rest[1].resource[0].interaction[2].documentation
        == "Allows retrieval of a specific version of a DiagnosticOrder"
    )
    assert inst.rest[1].resource[0].interaction[3].code == "history-instance"
    assert (
        inst.rest[1].resource[0].interaction[3].documentation
        == "Allows review of changes to a DiagnosticOrder over time"
    )
    assert inst.rest[1].resource[0].interaction[4].code == "create"
    assert (
        inst.rest[1].resource[0].interaction[4].documentation
        == "Allows defining a new DiagnosticOrder"
    )
    assert inst.rest[1].resource[0].interaction[5].code == "update"
    assert (
        inst.rest[1].resource[0].interaction[5].documentation
        == "Allows editing of an existing DiagnosticOrder.  Servers may choose to prohibit certain types of edits, instead requiring the creation of a new DiagnosticOrder (and potentially the retiring of the existing DiagnosticOrder).  Servers may also limit who can change particular DiagnosticOrder."
    )
    assert inst.rest[1].resource[0].interaction[6].code == "validate"
    assert (
        inst.rest[1].resource[0].interaction[6].documentation
        == "Allows a client to verify whether a particular new DiagnosticOrder or revision of an existing DiagnosticOrder would be accepted based on validation and other business rules.  Useful for some workflows"
    )
    assert inst.rest[1].resource[0].profile.reference == "do-uslab"
    assert (
        inst.rest[1].resource[0].searchInclude[0]
        == "DiagnosticOrder.subject, DiagnosticOrder.orderer, DiagnosticOrder.supportingInformation, DiagnosticOrder.specimen, DiagnosticOrder.uslabcc"
    )
    assert inst.rest[1].resource[0].type == "DiagnosticOrder"
    assert (
        inst.rest[1].security.description
        == "Implementations must meet the security requirements documented in the [[uslaborder|USLabOrder Guide assumptions]]."
    )
    assert inst.status == "draft"
    assert inst.text.status == "generated"


def test_Conformance_17(base_settings):
    filename = (
        base_settings["unittest_data_dir"]
        / "conformance-uslaborder-receiver.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_17(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_17(inst2)


def impl_Conformance_17(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert inst.contact[0].telecom[0].value == "http://www.hl7.org/"
    assert inst.date == parse_date("2014-12-02")
    assert (
        inst.description
        == "This profile defines the expected capabilities of the USLabOrder Receiver actor when conforming to the [[uslaborder.html|The US Receiver Order Implementation (USLabOrder)]].  This actor is the recipient/filler of a laboratory test order request and declares conformance to RESTful FHIR and FHIR profiles defined in this guide.  The order reference one or more FHIR resources conforming to profiles outlined in the USLabOrder guide."
    )
    assert inst.fhirVersion == "1.0.0"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-uslaborder-receiver"
    assert inst.kind == "requirements"
    assert inst.name == "USLabOrder Receiver"
    assert (
        inst.publisher
        == "Published by: HL7 Orders and Observation Workgroup. Primary Author: Eric Haas  Health eData Inc"
    )
    assert (
        inst.rest[0].documentation
        == "This conformance resource assumes the USLabOrder Receiver is the server, in other words, operating in 'Pull'  or 'Push/Pull' RESTful interface.  The USLabOrder Receiver MUST support querying one or more resources outlined by the [[uslaborder|USLabOrder Guide]]. The USLabOrder Receiver MUST use all the vocabularies and value set constraints defined by the individual resource profiles used by USLabOrder. The USLabOrder Receiver MUST implement REST behavior according to the [[http|FHIR specification]] and MUST be able to handle errors gracefully from Query Responders who may not support the submitted query."
    )
    assert inst.rest[0].mode == "server"
    assert inst.rest[0].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows a user to search for existing DiagnosticOrder"
    )
    assert inst.rest[0].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific known DiagnosticOrder"
    )
    assert inst.rest[0].resource[0].interaction[2].code == "vread"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Allows retrieval of a specific version of a DiagnosticOrder"
    )
    assert inst.rest[0].resource[0].interaction[3].code == "history-instance"
    assert (
        inst.rest[0].resource[0].interaction[3].documentation
        == "Allows review of changes to a DiagnosticOrder over time"
    )
    assert inst.rest[0].resource[0].interaction[4].code == "create"
    assert (
        inst.rest[0].resource[0].interaction[4].documentation
        == "Allows defining a new DiagnosticOrder"
    )
    assert inst.rest[0].resource[0].interaction[5].code == "update"
    assert (
        inst.rest[0].resource[0].interaction[5].documentation
        == "Allows editing of an existing DiagnosticOrder.  Servers may choose to prohibit certain types of edits, instead requiring the creation of a new DiagnosticOrder (and potentially the retiring of the existing DiagnosticOrder).  Servers may also limit who can change particular DiagnosticOrder."
    )
    assert inst.rest[0].resource[0].interaction[6].code == "validate"
    assert (
        inst.rest[0].resource[0].interaction[6].documentation
        == "Allows a client to verify whether a particular new DiagnosticOrder or revision of an existing DiagnosticOrder would be accepted based on validation and other business rules.  Useful for some workflows"
    )
    assert inst.rest[0].resource[0].profile.reference == "do-uslab"
    assert (
        inst.rest[0].resource[0].searchInclude[0]
        == "DiagnosticOrder.subject, DiagnosticOrder.orderer, DiagnosticOrder.supportingInformation, DiagnosticOrder.specimen, DiagnosticOrder.uslabcc"
    )
    assert inst.rest[0].resource[0].type == "DiagnosticOrder"
    assert (
        inst.rest[0].security.description
        == "Implementations must meet the security requirements documented in the [[uslaborder|USLabOrder Guide assumptions]]."
    )
    assert (
        inst.rest[1].documentation
        == "The following conformance rules assumes the USLabOrder Receiver is the client, in other words, operating in 'Push'  RESTful interface.  The USLabOrder Receiver MUST support querying one or more resources outlined by the [[uslaborder|USLabOrder Guide]]. The USLabOrder Receiver MUST use all the vocabularies and value set constraints defined by the individual resource profiles used by USLabOrder. The USLabOrder Receiver MUST implement REST behavior according to the [[http|FHIR specification]] and MUST be able to handle errors gracefully from Query Responders who may not support the submitted query."
    )
    assert inst.rest[1].mode == "client"
    assert inst.rest[1].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[1].resource[0].interaction[0].documentation
        == "Allows a user to search for existing DiagnosticOrder"
    )
    assert inst.rest[1].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[1].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific known DiagnosticOrder"
    )
    assert inst.rest[1].resource[0].interaction[2].code == "vread"
    assert (
        inst.rest[1].resource[0].interaction[2].documentation
        == "Allows retrieval of a specific version of a DiagnosticOrder"
    )
    assert inst.rest[1].resource[0].interaction[3].code == "history-instance"
    assert (
        inst.rest[1].resource[0].interaction[3].documentation
        == "Allows review of changes to a DiagnosticOrder over time"
    )
    assert inst.rest[1].resource[0].interaction[4].code == "create"
    assert (
        inst.rest[1].resource[0].interaction[4].documentation
        == "Allows defining a new DiagnosticOrder"
    )
    assert inst.rest[1].resource[0].interaction[5].code == "update"
    assert (
        inst.rest[1].resource[0].interaction[5].documentation
        == "Allows editing of an existing DiagnosticOrder.  Servers may choose to prohibit certain types of edits, instead requiring the creation of a new DiagnosticOrder (and potentially the retiring of the existing DiagnosticOrder).  Servers may also limit who can change particular DiagnosticOrder."
    )
    assert inst.rest[1].resource[0].interaction[6].code == "validate"
    assert (
        inst.rest[1].resource[0].interaction[6].documentation
        == "Allows a client to verify whether a particular new DiagnosticOrder or revision of an existing DiagnosticOrder would be accepted based on validation and other business rules.  Useful for some workflows"
    )
    assert inst.rest[1].resource[0].profile.reference == "do-uslab"
    assert (
        inst.rest[1].resource[0].searchInclude[0]
        == "DiagnosticOrder.subject, DiagnosticOrder.orderer, DiagnosticOrder.supportingInformation, DiagnosticOrder.specimen, DiagnosticOrder.uslabcc"
    )
    assert inst.rest[1].resource[0].type == "DiagnosticOrder"
    assert (
        inst.rest[1].security.description
        == "Implementations must meet the security requirements documented in the [[uslaborder|USLabOrder Guide assumptions]]."
    )
    assert inst.status == "draft"
    assert inst.text.status == "generated"


def test_Conformance_18(base_settings):
    filename = (
        base_settings["unittest_data_dir"]
        / "conformance-uslabreport-receiver.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_18(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_18(inst2)


def impl_Conformance_18(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert inst.contact[0].telecom[0].value == "http://www.hl7.org/"
    assert inst.date == parse_date("2014-12-02")
    assert (
        inst.description
        == "This profile defines the expected capabilities of the USLabReport Receiver actor when conforming to the [[uslabreport.html|The US Receiver Report Implementation (USLabReport)]].  This actor is the receiver of a laboratory test report and declares conformance to RESTful FHIR and FHIR profiles defined in this guide.  The order reference one or more FHIR resources conforming to profiles outlined in the USLabReport guide."
    )
    assert inst.fhirVersion == "1.0.0"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-uslabreport-receiver"
    assert inst.kind == "requirements"
    assert inst.name == "USLabReport Receiver"
    assert (
        inst.publisher
        == "Published by: HL7 Orders and Observation Workgroup. Primary Author: Eric Haas  Health eData Inc"
    )
    assert (
        inst.rest[0].documentation
        == "This conformance resource assumes the USLabReport Receiver is the server, in other words, operating in 'Pull'  or 'Push/Pull' RESTful interface.  The USLabReport Receiver MUST support querying one or more resources outlined by the [[uslabreport|USLabReport Guide]]. The USLabReport Receiver MUST use all the vocabularies and value set constraints defined by the individual resource profiles used by USLabReport. The USLabReport Receiver MUST implement REST behavior according to the [[http|FHIR specification]] and MUST be able to handle errors gracefully from Query Responders who may not support the submitted query."
    )
    assert inst.rest[0].mode == "server"
    assert inst.rest[0].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows a user to search for existing DiagnosticReport"
    )
    assert inst.rest[0].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific known DiagnosticReport"
    )
    assert inst.rest[0].resource[0].interaction[2].code == "vread"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Allows retrieval of a specific version of a DiagnosticReport"
    )
    assert inst.rest[0].resource[0].interaction[3].code == "history-instance"
    assert (
        inst.rest[0].resource[0].interaction[3].documentation
        == "Allows review of changes to a DiagnosticReport over time"
    )
    assert inst.rest[0].resource[0].interaction[4].code == "create"
    assert (
        inst.rest[0].resource[0].interaction[4].documentation
        == "Allows defining a new DiagnosticReport"
    )
    assert inst.rest[0].resource[0].interaction[5].code == "update"
    assert (
        inst.rest[0].resource[0].interaction[5].documentation
        == "Allows editing of an existing DiagnosticReport.  Servers may choose to prohibit certain types of edits, instead requiring the creation of a new DiagnosticReport (and potentially the retiring of the existing DiagnosticReport).  Servers may also limit who can change particular DiagnosticReport."
    )
    assert inst.rest[0].resource[0].interaction[6].code == "validate"
    assert (
        inst.rest[0].resource[0].interaction[6].documentation
        == "Allows a client to verify whether a particular new DiagnosticReport or revision of an existing DiagnosticReport would be accepted based on validation and other business rules.  Useful for some workflows"
    )
    assert inst.rest[0].resource[0].profile.reference == "dr-uslab"
    assert (
        inst.rest[0].resource[0].searchInclude[0]
        == "DiagnosticReport.subject, DiagnosticReport.performer, DiagnosticReport.request, DiagnosticReport.specimen, DiagnosticReport.report"
    )
    assert inst.rest[0].resource[0].type == "DiagnosticReport"
    assert (
        inst.rest[0].security.description
        == "Implementations must meet the security requirements documented in the [[uslabreport|USLabReport Guide assumptions]]."
    )
    assert (
        inst.rest[1].documentation
        == "The following conformance rules assumes the USLabReport Receiver is the client, in other words, operating in 'Push'  RESTful interface.  The USLabReport Receiver MUST support querying one or more resources outlined by the [[uslabreport|USLabReport Guide]]. The USLabReport Receiver MUST use all the vocabularies and value set constraints defined by the individual resource profiles used by USLabReport. The USLabReport Receiver MUST implement REST behavior according to the [[http|FHIR specification]] and MUST be able to handle errors gracefully from Query Responders who may not support the submitted query."
    )
    assert inst.rest[1].mode == "client"
    assert inst.rest[1].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[1].resource[0].interaction[0].documentation
        == "Allows a user to search for existing DiagnosticReport"
    )
    assert inst.rest[1].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[1].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific known DiagnosticReport"
    )
    assert inst.rest[1].resource[0].interaction[2].code == "vread"
    assert (
        inst.rest[1].resource[0].interaction[2].documentation
        == "Allows retrieval of a specific version of a DiagnosticReport"
    )
    assert inst.rest[1].resource[0].interaction[3].code == "history-instance"
    assert (
        inst.rest[1].resource[0].interaction[3].documentation
        == "Allows review of changes to a DiagnosticReport over time"
    )
    assert inst.rest[1].resource[0].interaction[4].code == "create"
    assert (
        inst.rest[1].resource[0].interaction[4].documentation
        == "Allows defining a new DiagnosticReport"
    )
    assert inst.rest[1].resource[0].interaction[5].code == "update"
    assert (
        inst.rest[1].resource[0].interaction[5].documentation
        == "Allows editing of an existing DiagnosticReport.  Servers may choose to prohibit certain types of edits, instead requiring the creation of a new DiagnosticReport (and potentially the retiring of the existing DiagnosticReport).  Servers may also limit who can change particular DiagnosticReport."
    )
    assert inst.rest[1].resource[0].interaction[6].code == "validate"
    assert (
        inst.rest[1].resource[0].interaction[6].documentation
        == "Allows a client to verify whether a particular new DiagnosticReport or revision of an existing DiagnosticReport would be accepted based on validation and other business rules.  Useful for some workflows"
    )
    assert inst.rest[1].resource[0].profile.reference == "do-uslab"
    assert (
        inst.rest[1].resource[0].searchInclude[0]
        == "DiagnosticReport.subject, DiagnosticReport.performer, DiagnosticReport.request, DiagnosticReport.specimen, DiagnosticReport.report"
    )
    assert inst.rest[1].resource[0].type == "DiagnosticReport"
    assert (
        inst.rest[1].security.description
        == "Implementations must meet the security requirements documented in the [[uslabreport|USLabReport Guide assumptions]]."
    )
    assert inst.status == "draft"
    assert inst.text.status == "generated"


def test_Conformance_19(base_settings):
    filename = (
        base_settings["unittest_data_dir"]
        / "conformance-uslabreport-sender.canonical.json"
    )
    inst = conformance.Conformance.parse_file(
        filename, content_type="application/json", encoding="utf-8"
    )
    assert "Conformance" == inst.resource_type
    impl_Conformance_19(inst)

    # testing reverse by generating data from itself and create again.
    data = inst.dict()
    assert "Conformance" == data["resourceType"]

    inst2 = conformance.Conformance(**data)
    impl_Conformance_19(inst2)


def impl_Conformance_19(inst):
    assert inst.acceptUnknown == "extensions"
    assert inst.contact[0].telecom[0].system == "other"
    assert inst.contact[0].telecom[0].value == "http://www.hl7.org/"
    assert inst.date == parse_date("2014-12-02")
    assert (
        inst.description
        == "This profile defines the expected capabilities of the USLabReport Sender actor when conforming to the [[uslabreport.html|The US Sender Report Implementation (USLabReport)]].  This actor is the source of a laboratory test order report and declares conformance to RESTful FHIR and FHIR profiles defined in this guide.  The order reference one or more FHIR resources conforming to profiles outlined in the USLabReport guide."
    )
    assert inst.fhirVersion == "1.0.0"
    assert inst.format[0] == "xml"
    assert inst.format[1] == "json"
    assert inst.id == "conformance-uslabreport-sender"
    assert inst.kind == "requirements"
    assert inst.name == "USLabReport Sender"
    assert (
        inst.publisher
        == "Published by: HL7 Orders and Observation Workgroup. Primary Author: Eric Haas  Health eData Inc"
    )
    assert (
        inst.rest[0].documentation
        == "This conformance resource assumes the USLabReport Sender is the server, in other words, operating in 'Pull'  or 'Push/Pull' RESTful interface.  The USLabReport Sender MUST support querying one or more resources outlined by the [[uslabreport|USLabReport Guide]]. The USLabReport Sender MUST use all the vocabularies and value set constraints defined by the individual resource profiles used by USLabReport. The USLabReport Sender MUST implement REST behavior according to the [[http|FHIR specification]] and MUST be able to handle errors gracefully from Query Responders who may not support the submitted query."
    )
    assert inst.rest[0].mode == "server"
    assert inst.rest[0].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[0].resource[0].interaction[0].documentation
        == "Allows a user to search for existing DiagnosticReport"
    )
    assert inst.rest[0].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[0].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific known DiagnosticReport"
    )
    assert inst.rest[0].resource[0].interaction[2].code == "vread"
    assert (
        inst.rest[0].resource[0].interaction[2].documentation
        == "Allows retrieval of a specific version of a DiagnosticReport"
    )
    assert inst.rest[0].resource[0].interaction[3].code == "history-instance"
    assert (
        inst.rest[0].resource[0].interaction[3].documentation
        == "Allows review of changes to a DiagnosticReport over time"
    )
    assert inst.rest[0].resource[0].interaction[4].code == "create"
    assert (
        inst.rest[0].resource[0].interaction[4].documentation
        == "Allows defining a new DiagnosticReport"
    )
    assert inst.rest[0].resource[0].interaction[5].code == "update"
    assert (
        inst.rest[0].resource[0].interaction[5].documentation
        == "Allows editing of an existing DiagnosticReport.  Servers may choose to prohibit certain types of edits, instead requiring the creation of a new DiagnosticReport (and potentially the retiring of the existing DiagnosticReport).  Servers may also limit who can change particular DiagnosticReport."
    )
    assert inst.rest[0].resource[0].interaction[6].code == "validate"
    assert (
        inst.rest[0].resource[0].interaction[6].documentation
        == "Allows a client to verify whether a particular new DiagnosticReport or revision of an existing DiagnosticReport would be accepted based on validation and other business rules.  Useful for some workflows"
    )
    assert inst.rest[0].resource[0].profile.reference == "dr-uslab"
    assert (
        inst.rest[0].resource[0].searchInclude[0]
        == "DiagnosticReport.subject, DiagnosticReport.performer, DiagnosticReport.request, DiagnosticReport.specimen, DiagnosticReport.report"
    )
    assert inst.rest[0].resource[0].type == "DiagnosticReport"
    assert (
        inst.rest[0].security.description
        == "Implementations must meet the security requirements documented in the [[uslabreport|USLabReport Guide assumptions]]."
    )
    assert (
        inst.rest[1].documentation
        == "The following conformance rules assumes the USLabReport Sender is the client, in other words, operating in 'Push'  RESTful interface.  The USLabReport Sender MUST support querying one or more resources outlined by the [[uslabreport|USLabReport Guide]]. The USLabReport Sender MUST use all the vocabularies and value set constraints defined by the individual resource profiles used by USLabReport. The USLabReport Sender MUST implement REST behavior according to the [[http|FHIR specification]] and MUST be able to handle errors gracefully from Query Responders who may not support the submitted query."
    )
    assert inst.rest[1].mode == "client"
    assert inst.rest[1].resource[0].interaction[0].code == "search-type"
    assert (
        inst.rest[1].resource[0].interaction[0].documentation
        == "Allows a user to search for existing DiagnosticReport"
    )
    assert inst.rest[1].resource[0].interaction[1].code == "read"
    assert (
        inst.rest[1].resource[0].interaction[1].documentation
        == "Allows retrieval of a specific known DiagnosticReport"
    )
    assert inst.rest[1].resource[0].interaction[2].code == "vread"
    assert (
        inst.rest[1].resource[0].interaction[2].documentation
        == "Allows retrieval of a specific version of a DiagnosticReport"
    )
    assert inst.rest[1].resource[0].interaction[3].code == "history-instance"
    assert (
        inst.rest[1].resource[0].interaction[3].documentation
        == "Allows review of changes to a DiagnosticReport over time"
    )
    assert inst.rest[1].resource[0].interaction[4].code == "create"
    assert (
        inst.rest[1].resource[0].interaction[4].documentation
        == "Allows defining a new DiagnosticReport"
    )
    assert inst.rest[1].resource[0].interaction[5].code == "update"
    assert (
        inst.rest[1].resource[0].interaction[5].documentation
        == "Allows editing of an existing DiagnosticReport.  Servers may choose to prohibit certain types of edits, instead requiring the creation of a new DiagnosticReport (and potentially the retiring of the existing DiagnosticReport).  Servers may also limit who can change particular DiagnosticReport."
    )
    assert inst.rest[1].resource[0].interaction[6].code == "validate"
    assert (
        inst.rest[1].resource[0].interaction[6].documentation
        == "Allows a client to verify whether a particular new DiagnosticReport or revision of an existing DiagnosticReport would be accepted based on validation and other business rules.  Useful for some workflows"
    )
    assert inst.rest[1].resource[0].profile.reference == "do-uslab"
    assert (
        inst.rest[1].resource[0].searchInclude[0]
        == "DiagnosticReport.subject, DiagnosticReport.performer, DiagnosticReport.request, DiagnosticReport.specimen, DiagnosticReport.report"
    )
    assert inst.rest[1].resource[0].type == "DiagnosticReport"
    assert (
        inst.rest[1].security.description
        == "Implementations must meet the security requirements documented in the [[uslabreport|USLabReport Guide assumptions]]."
    )
    assert inst.status == "draft"
    assert inst.text.status == "generated"
