apiVersion: apps/v1
kind: Deployment
metadata:
  name: nlp-insights-service
  labels:
    app: flask
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
    spec:
      containers:
      - name: nlp-insights-service
        image: docker.io/surajr99/nlp-insights-service:1.0.0
        imagePullPolicy: Always
        ports:
          - containerPort: 5000
            name: http
            protocol: TCP
        volumeMounts:
          - mountPath: "/mnt/data"
            name: configurations
            readOnly: false
            subPath: ""
      securityContext:
        runAsUser: 0
      volumes:
        - name: configurations
          persistentVolumeClaim:
            claimName: nlp-insights-config-pv-claim
            readOnly: false

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nlp-insights-config-pv-claim
spec:
  storageClassName: ibmc-vpc-block-10iops-tier
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nlp-insights-config-pv
spec:
  storageClassName: ibmc-vpc-block-10iops-tier
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: Service
metadata:
  name: nlp-insights-service
  labels:
    app: flask
spec:
  ports:
    - port: 5000
      name: http
      targetPort: 5000 
  selector:
    app: flask
  type: ClusterIP
    