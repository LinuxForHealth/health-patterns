# A simple name describing the Alvearie pattern implemented by this Helm values file 
pattern: "LoadBalancer Clinical Ingestion"

ingress:
  enabled: false
  
# ------------------------------------------------------------------------------
# FHIR Configuration
# Values: https://github.com/Alvearie/health-patterns/clinical-ingestion/helm-charts/fhir/values.yaml
# ------------------------------------------------------------------------------
fhir:
  service:
    type: LoadBalancer

# ------------------------------------------------------------------------------
# FHIR Configuration
# Values: https://github.com/Alvearie/health-patterns/clinical-ingestion/helm-charts/fhir/values.yaml
# ------------------------------------------------------------------------------
fhir-deid:
  service:
    type: LoadBalancer

# ------------------------------------------------------------------------------
# Nifi Configuration
# Values: https://github.com/cetic/helm-nifi/blob/master/values.yaml
# ------------------------------------------------------------------------------
nifi:
  service:
    type: LoadBalancer
    
# ------------------------------------------------------------------------------
# Cohort Service
# Values: https://github.com/Alvearie/health-patterns/cohort-service/chart/values.yaml
# ------------------------------------------------------------------------------
cohort-service:
  service:
    type: LoadBalancer

# ------------------------------------------------------------------------------
# Prometheus-Grafana stack Configuration
# This will add specific configuration for the new grafana-prometheusSpec
# monitoring stack so that nifi and kafka will both generate metrics to a
# externally available grafana
# ------------------------------------------------------------------------------
# Nifi Metrics Configuration
# This adds an additional scrape configuration that will expose Nifi /metrics
# on the port defined
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Kafka Metrics Configuration
# This adds an additional scrape configuration that will expose Kafka /metrics
# on the port defined.  Note there are two kafka type metrics
# ------------------------------------------------------------------------------
kube-prometheus-stack:
  grafana:
    service:
      type: LoadBalancer